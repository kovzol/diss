#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass amsbook
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage,fleqn
\use_default_options true
\master diss.lyx
\begin_removed_modules
figs-within-sections
\end_removed_modules
\begin_modules
theorems-ams
eqs-within-sections
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch NoChildDocument
\selected 0
\filename_suffix 0
\color #ff0000
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
chaptername
\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thechapter
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rightmark
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Enable page headers and add the chapter to the header line.
\end_layout

\end_inset


\end_layout

\begin_layout Right Header
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
leftmark
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Left Footer
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset Argument
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Implementation-in-GeoGebra"

\end_inset

Implementation in GeoGebra
\end_layout

\begin_layout Quote
\noindent
\align right
\begin_inset Quotes eld
\end_inset

What is truth?
\begin_inset Quotes erd
\end_inset

 Pilate asked.
\begin_inset Newline newline
\end_inset


\emph on
--- John 18:38
\end_layout

\begin_layout Standard
In this chapter the theorem proving subsystem of GeoGebra is demonstrated
 mainly from the mathematical point of view, and the related computer science
 questions are discussed.
\end_layout

\begin_layout Standard
First the need of a general portfolio prover is described.
 Two new GeoGebra commands are introduced and explained, and also how they
 are integrated into GeoGebra.
 Also the Relation Tool, their primary graphical user interface is demonstrated.
 Then a detailed explanation follows by describing the most effectively
 used algebraic method, emphasizing its basics by the terms of undergraduate
 level mathematics.
 An enhanced algorithm is discussed for getting sufficient conditions for
 stating a theorem automatically inside GeoGebra.
\end_layout

\begin_layout Standard
After then a summary of a recent method related to the algebraic method
 is shown, which is even more effective in some simple situations.
 Then the GeoGebra Java implementation is shown for all used methods in
 outlined form.
 Last, a detailed benchmark is presented about how the various methods perform.
\end_layout

\begin_layout Section
Rationale behind improving GeoGebra
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Conclusion129"

\end_inset

 we concluded that the greatest educational emphasis should be put on distinguis
hing verification and proof.
 There are several software tools which support this concept more or less,
 but we found the lack of an existing application with the following properties:
\end_layout

\begin_layout Itemize
contains statement verification integrated in a DGS tool,
\end_layout

\begin_layout Itemize
can distinguish verification and proof,
\end_layout

\begin_layout Itemize
can formulate a conjecture and then a valid theorem,
\end_layout

\begin_layout Itemize
is easy-to-use in the classroom.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-portfolio-prover"

\end_inset

 we focus on both the 
\emph on
graphical user interface 
\emph default
(GUI) design
\emph on
 
\emph default
and the underlying 
\emph on
computation backend
\emph default
.
 First we investigate the computational details and in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:The-Relation-Tool"

\end_inset

 we introduce GeoGebra's GUI for the end users.
\end_layout

\begin_layout Standard
It is important to mention that we concluded that JGEX
\begin_inset Index idx
status open

\begin_layout Plain Layout
Geometry Expert
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
In this chapter we will refer to several software packages which were already
 mentioned and cited in 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

.
\end_layout

\end_inset

 met many requirements to be a good candidate in the classroom.
 But JGEX is rather a research tool for a minor audience with a relatively
 small user community.
 Also it is not 
\emph on
open source
\emph default
, thus it is unfortunately not possible to continue improving it externally
 and contributing additional source code for any further enhancements.
 That is, our work is necessarily a kind of new application or an improvement
 for an existing open source tool.
 Considering the difficulty of developing a new system from scratch, it
 seems practically infeasible to create a useful system in the boundaries
 of a PhD thesis.
 Thus we chose the second option: the improvements should be added to an
 existing open source DGS.
\end_layout

\begin_layout Standard
When considering existing DGS 
\begin_inset Index idx
status open

\begin_layout Plain Layout
free software
\end_layout

\end_inset

software, the main limitation of choice was to use an existing system with
 a stable user community and mature codebase.
 The most well known system which meets these criteria is the platform independe
nt open-sourced DGS 
\begin_inset Quotes eld
\end_inset

GeoGebra
\begin_inset Quotes erd
\end_inset

 without any doubt: it is used world-wide, translated to more than 60 languages
 (see 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://wiki.geogebra.org/en/Translation:Status
\end_layout

\end_inset

 for recent statistics), and has millions of users including students and
 teachers (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:google-trends"

\end_inset

).
 By obtaining OpenHub's analysis at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://www.openhub.net/p/geogebra
\end_layout

\end_inset

 (as of May 2015), it is reported that GeoGebra has a very high activity
 and
\end_layout

\begin_layout Itemize
has had 31,279 commits made by 71 contributors representing 1,310,764 lines
 of code,
\end_layout

\begin_layout Itemize
is mostly written in Java with an average number of source code comments,
\end_layout

\begin_layout Itemize
has a well established, mature codebase maintained by a large development
 team with stable Y-O-Y commits
\begin_inset Foot
status open

\begin_layout Plain Layout
Explanation from OpenHub: 
\begin_inset Quotes eld
\end_inset

Over the last twelve months, GeoGebra has not seen any change in activity.
 This may be a good sign, and an indication that development is continuing
 at the same pace and not dropping off.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

,
\end_layout

\begin_layout Itemize
took an estimated 375 years of effort (COCOMO model) starting with its first
 commit in November, 2005 ending with its most recent commit 15 hours ago.
\end_layout

\begin_layout Standard
Although these numbers may be inaccurate (for example, GeoGebra was actually
 started in 2001 and there are more than 40,000 commits in its official
 version control database at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://dev.geogebra.org/trac/timeline
\end_layout

\end_inset

 since 2005), the magnitude and success of the project is obvious.
 Also GeoGebra won several educational awards (see 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/GeoGebra#Awards
\end_layout

\end_inset

 for a list), and lastly, it was supported by the Google Summer of Code
 project in 2010, 2011, 2012 (and also in 2015)---according to 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://www.google-melange.com/gsoc/org/list/public/google/gsoc2015
\end_layout

\end_inset

 the only supported projects in 2015 were 
\emph on
Moodle
\emph default
, 
\emph on
Sugar Labs
\emph default
 and 
\emph on
Tux4Kids
\emph default
 in the category 
\begin_inset Quotes eld
\end_inset

education
\begin_inset Quotes erd
\end_inset

, and projects R, Sage and Scilab in 
\begin_inset Quotes eld
\end_inset

mathematics
\begin_inset Quotes erd
\end_inset

 (out of 137 projects overall).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename geogebra-trends.png
	lyxscale 30
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:google-trends"

\end_inset


\begin_inset Argument
status open

\begin_layout Plain Layout
Google Trends on GeoGebra
\end_layout

\end_inset

Google Trends on GeoGebra
\size small
.
\begin_inset Newline newline
\end_inset


\size default
Periodical changes show correlation between utilizing activity and school
 holidays.
 (See 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.google.com/trends/explore
\backslash
#q=GeoGebra
\end_layout

\end_inset

 for a recent graph.)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
On the other hand, at the beginning of this PhD work in 2011 there was no
 open source software package for supporting elementary geometry proofs,
 thus we needed to think of an internal ATP module in GeoGebra, assuming
 that most of the computations can be done internally, or by outsourcing
 some heavy computations to external software packages.
 Later, in 2012 we contacted the developers of the debuting OpenGeoProver
 software to collaborate, but finally we learned that the best way for the
 joint work is to still compute some of the calculations on GeoGebra's side,
 and outsource just a part of the work to OpenGeoProver.
 In sum, our general approach is a much more long term plan than all other
 existing applications already have, and by focusing on 
\emph on
communication
\emph default
 and 
\emph on
cooperation
\emph default
 with a large community of DGS users, a more reliable basis for an educational
 software can be expected.
\end_layout

\begin_layout Section
The portfolio prover
\begin_inset CommandInset label
LatexCommand label
name "sec:The-portfolio-prover"

\end_inset


\end_layout

\begin_layout Standard
The idea of using multiple methods in the same application for theorem proving
 is already well-known in many existing software tools including GCLC
\begin_inset Index idx
status open

\begin_layout Plain Layout
GCLC
\end_layout

\end_inset

, GeoProof
\begin_inset Index idx
status open

\begin_layout Plain Layout
GeoProof
\end_layout

\end_inset

 or JGEX.
 We also use this concept for similar reasons: each method has strengths
 and weaknesses.
 In addition, we add some extra intelligence to select one or more from
 the available methods.
 The tool which implements that technology is called 
\emph on
portfolio prover
\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
portfolio prover
\end_layout

\end_inset


\emph default
.
\end_layout

\begin_layout Standard
We planned to separate the computation backend and the GUI.
 Historically, the computation backend was designed much earlier (since
 2011) than the GUI (since 2013) to ensure that GeoGebra can surely compute
 the required calculations in a reasonable time.
 This time plan also helped to have a much more elaborated result in the
 GUI, which is, for the student users, even more important.
 This is why this chapter is divided into technical sections, and not organized
 from the educational point of view---GUI related questions are discussed
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:The-Relation-Tool"

\end_inset

.
\end_layout

\begin_layout Standard
We need to highlight that 
\begin_inset Quotes eld
\end_inset

proving
\begin_inset Quotes erd
\end_inset

 in this chapter will be something different than used in education.
 Here 
\begin_inset Quotes eld
\end_inset

proving
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

proof
\begin_inset Quotes erd
\end_inset

 will not be 
\begin_inset Quotes eld
\end_inset

readable proof
\begin_inset Quotes erd
\end_inset

, but a Level 6 verification instead (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:De-Villiers'-model"

\end_inset

).
 In other words, we use only the yes/no output of a machine generated proof;
 the rest (the proof itself, which can consist of many pages of algebraic
 derivation) will be simply ignored.
 One would insist why we call this computation 
\begin_inset Quotes eld
\end_inset

proving
\begin_inset Quotes erd
\end_inset

 and not 
\begin_inset Quotes eld
\end_inset

verification
\begin_inset Quotes erd
\end_inset

.
 The answer is: this the official definition of what we will do, and in
 fact (since there is a philosophical difference between Level 6 and lower
 level verifications) in the mathematical sense it is indeed a proof---but
 the details are not shown 
\emph on
on purpose
\emph default
 to help the student by not confusing him or her with an unreadable derivation
 for a human.
\end_layout

\begin_layout Standard
Has any benefit of knowing just the truth of a statement, but not its proof?
 For a mathematician: without any doubt---there are several recently proven
 theorems (including Fermat's last theorem
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Fermat's last
\end_layout

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Wiles95modularelliptic"

\end_inset

) which have exceptionally complicated proofs, thus it is cannot be expected
 that most mathematicians could ever understand the full background of them.
 But for students it can also be desirable to obtain a conjecture by utilizing
 a computer and then continue with a self assembled proof.
\end_layout

\begin_layout Standard
The theoretical and practical background of geometrical theorem proving
 applied in GeoGebra has its roots in the pioneer work of Chou, Wu and Buchberge
r, and many others.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Chou"

\end_inset

 is considered as the first exhaustive explanation of the algebraic method
 which was based on Wu's elimination algorithm (
\begin_inset CommandInset citation
LatexCommand cite
key "Wu"

\end_inset

).
 Kapur, Buchberger and his research team, including 
\emph on
Kutzler
\emph default
 and 
\emph on
Stifter
\emph default
, used similar approaches with success (
\begin_inset CommandInset citation
LatexCommand cite
key "Kapur1986,KutzlerStifter,Buchberger88"

\end_inset

).
 This lead to many successful and usable pieces of computer software, discussed
 in details in 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Proving-with-computer"

\end_inset

.
\end_layout

\begin_layout Standard
None of the discussed software packages use portfolio-based algorithm selection
 which is, however, a common practice in solving hard problems.
 In other research fields of mathematics and computer science a well-known
 example is 
\emph on
SATzilla
\begin_inset Index idx
status open

\begin_layout Plain Layout
SATzilla
\end_layout

\end_inset


\emph default
 which uses several different algorithms in the background and tries to
 use the best fitting one to solve the given problem (
\begin_inset CommandInset citation
LatexCommand cite
key "Nikolic2009"

\end_inset

).
\end_layout

\begin_layout Standard
In GeoGebra we use a similar approach.
 The are more reasons why we chose this technique.
 Historically, the biggest influence on our work was initiated by the Spanish
 school of applied algebraic geometry, lead by professors 
\emph on
Tomás Recio
\emph default
 and 
\emph on
Francisco Botana
\emph default
, and their strong belief in the Gröbner basis approach.
 A Spanish student, 
\emph on
Sergio Arbeo
\begin_inset CommandInset label
LatexCommand label
name "Arbeo"

\end_inset


\emph default
 won a Google scholarship in 2010 to implement locus equation computations
 for GeoGebra.
 His work was greatly supported by Botana and his research team.
 The 
\begin_inset Quotes eld
\end_inset

Spanish way
\begin_inset Quotes erd
\end_inset

, based on Gröbner basis computation, was undoubtly a feasible possibility
 for the theorem proving system in GeoGebra, too, since Botana had already
 been working with many computer algebra systems as helper systems for theorem
 proving, and himself was a co-inventor of the 
\emph on
Discover
\emph default
 DGS (
\begin_inset CommandInset citation
LatexCommand cite
key "Discover"

\end_inset

, see 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:gdi"

\end_inset

) and 
\emph on
LAD
\emph default
, an Internet based ATP framework (
\begin_inset CommandInset citation
LatexCommand cite
key "LAD2,LAD"

\end_inset

).
 But Recio came up with another idea in 2011, namely to not use the heavy
 computations for many theorems, but another technology with arbitrary integer
 arithmetic which seemed to be useful for classroom use as well with low-end
 machines.
\end_layout

\begin_layout Standard
Meanwhile, the Serbian school, lead by Predrag Janičić, was also showing
 interest in porting their own invented technology from GCLC via a new open
 source Java library OpenGeoProver (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:GCLC"

\end_inset

).
 Other researchers also contacted the GeoGebra Team about implementing their
 algorithm with GeoGebra.
 The international interest to have an official prover subsystem in GeoGebra
 lead to have not only one approach in the planned system, but to allow
 different methods to be used for the computation.
 The decision to be 
\begin_inset Quotes eld
\end_inset

really open”, started a fruitful communication and healthy competition to
 have a well working geometry prover system for the mathematics education.
\end_layout

\begin_layout Standard
GeoGebra itself implements two basic approaches, namely Botana's and Recio's
 methods.
 For Botana's method, there is an internal way to compute Gröbner basis
 with the embedded computer algebra system (currently 
\emph on
Giac
\begin_inset Index idx
status open

\begin_layout Plain Layout
Giac
\end_layout

\end_inset

,
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "giac"

\end_inset

), and there is a way to outsource the computations to an external system
 (currently 
\emph on
Singular
\begin_inset Index idx
status open

\begin_layout Plain Layout
Singular
\end_layout

\end_inset

,
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "Singular"

\end_inset

).
 There is also an interconnection application programming interface (API
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "API"
description "application programming interface"

\end_inset

) for OpenGeoProver and a command line driven interface to choose from the
 offered services and configure them.
 On the other hand, GeoGebra itself has a decision mechanism to choose the
 best fitting algorithm, however, this mechanism is in a very early state.
\end_layout

\begin_layout Standard
OpenGeoProver, at the moment, has the ability to solve problems by using
 Wu's method which is a classic approach in theorem proving.
 This sub-engine, and the OpenGeoProver
\begin_inset Index idx
status open

\begin_layout Plain Layout
OpenGeoProver
\end_layout

\end_inset

 system itself was programmed by Ivan Petrović, PhD student of University
 of Belgrade.
 In addition, OpenGeoProver has a second sub-engine for the area method,
 programmed by 
\emph on
Damien Desfontaines
\emph default
 (
\begin_inset CommandInset citation
LatexCommand cite
key "Desfontaines"

\end_inset

), student of ENS Paris that time.
 Also his work was supported by the Google Summer of Code program in 2012.
\end_layout

\begin_layout Standard
Summarizing the available technologies, GeoGebra can use the following approache
s for solving problems in theorem proving: 
\end_layout

\begin_layout Itemize

\series bold
Botana
\begin_inset Foot
status open

\begin_layout Plain Layout
Other software packages call definitely the same approach the Gröbner basis
 method.
 In the technical documentation of GeoGebra, including its source code we
 call it 
\emph on
Botana's method
\emph default

\begin_inset Index idx
status open

\begin_layout Plain Layout
method!--, Botana's
\end_layout

\end_inset

 to emphasize the importance of Botana's approach by using different software
 packages for DGS and ATP, and if required, other bridging technologies
 like a web server or a third party computation engine (see 
\begin_inset CommandInset citation
LatexCommand cite
key "LAD"

\end_inset

).
\end_layout

\end_inset

/Singular
\series default
: using Gröbner bases with the outsourced CAS Singular 
\end_layout

\begin_layout Itemize

\series bold
Botana/Giac
\series default
: using Gröbner bases with the embedded CAS Giac 
\end_layout

\begin_layout Itemize

\series bold
Recio
\series default
: using arbitrary integer arithmetic 
\end_layout

\begin_layout Itemize

\series bold
OGP/Wu
\series default
: using Wu's method from the embedded library OpenGeoProver 
\end_layout

\begin_layout Itemize

\series bold
OGP/Area
\series default
: using the area method from OpenGeoProver
\end_layout

\begin_layout Standard
In the following sections we will introduce the Gröbner basis method and
 compare its practical complexity with Wu's method by using benchmarking
 experiments.
 We will not show Wu's method in details---it can be found in the literature
 
\begin_inset CommandInset citation
LatexCommand cite
after "Chapter 6, §5"
key "Cox+Others/1991/Ideals"

\end_inset

.
 In later sections we show how the general algebraic approach can be turned
 into a computationally simplified way by using Recio's method.
 We will not deal with the area method, either, we refer to 
\begin_inset CommandInset citation
LatexCommand cite
key "area"

\end_inset

 instead.
\end_layout

\begin_layout Subsection
The algebraic approach: benefits and limitations
\begin_inset CommandInset label
LatexCommand label
name "sub:Computing-Gröbner-bases"

\end_inset


\end_layout

\begin_layout Standard
At the moment, the algebraic approach seems to be the most elaborated and
 mature theory to get a yes/no answer for an elementary geometry question.
 Theorems in elementary geometry can be described very well by using polynomial
 equations of analytic geometry.
 A well known approach to solve complex polynomial equations symbolically
 is to use the theory of Gröbner bases.
 Here symbolical approach is an important issue, since numerical methods
 may be inaccurate and thus cannot be considered acceptable in the sense
 of getting yes/no answers.
\end_layout

\begin_layout Standard
Here we must acknowledge that our method will deal only with such geometry
 problems which can be turned into polynomial equation systems.
 This is not the case for many problems discussed in the secondary school,
 including exponentional or logarithmical equations.
 Even worse, inequalities (i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

expressions like 
\begin_inset Formula $a<b$
\end_inset

) cannot be converted into equations by GeoGebra currently, however, there
 is theoretical background to do that by using the 
\emph on
cylindrical algebraic decomposition
\emph default
 (CAD
\begin_inset Index idx
status open

\begin_layout Plain Layout
method!--, areaCAD
\end_layout

\end_inset

) method (see 
\begin_inset CommandInset citation
LatexCommand cite
key "cad"

\end_inset

).
 Maybe in the future this kind of extension will be added, however, its
 practical complexity is much higher than for the currently used methods
 (see 
\begin_inset CommandInset citation
LatexCommand cite
key "Robu07"

\end_inset

).
 According to the 
\emph on
o-minimal theory
\emph default
 and 
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Wilkie's
\end_layout

\end_inset


\emph on
Wilkie's theorem
\emph default
 (
\begin_inset CommandInset citation
LatexCommand cite
key "Wilkie"

\end_inset

) there is a hope to handle CAD and exponential equations in the future.
\begin_inset Foot
status open

\begin_layout Plain Layout
At the time of finishing this dissertation in 2015 there are a number of
 related articles listed at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.journals.elsevier.com/journal-of-symbolic-computation/recent-articles/
\end_layout

\end_inset

 which will be published in the near future in the Journal of Symbolic Computati
on, including titles 
\emph on
Constructing a single cell in cylindrical algebraic decomposition
\emph default
, 
\emph on
On the complexity of the F5 Gröbner basis algorithm
\emph default
, 
\emph on
Synthesis of list algorithms by mechanical proving
\emph default
, 
\emph on
Learning-assisted theorem proving with millions of lemmas
\emph default
, 
\emph on
The classification of real singularities using Singular Part I: Splitting
 Lemma and simple singularities
\emph default
.
 Also these recent titles show the importance, difficulty and actuality
 of the topics of this section.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Unfortunately, the general layout of some theorems may require inequalities.
 Such an example is 
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Napoleon's
\end_layout

\end_inset

Napoleon's theorem which states that if equilateral triangles are constructed
 on the sides of any triangle, either all outward, or all inward, the centres
 of those equilateral triangles themselves form an equilateral triangle.
 Here, unfortunately, we cannot define 
\begin_inset Quotes eld
\end_inset

outward
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

inward
\begin_inset Quotes erd
\end_inset

 by adding a helper inequality since it is unsupported in the algebraic
 approach at the moment.
 The same problem appears in much simpler theorems which are about only
 one of the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, angle bisector
\end_layout

\end_inset

angle bisectors---we cannot simply mark only one bisector, but we need to
 work with both at the same time.
 Napoleon's theorem (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Napoleon1"

\end_inset

) can be, however, formulated by using rotations
\begin_inset Foot
status open

\begin_layout Plain Layout
Let coordinates of triange 
\begin_inset Formula $ABC$
\end_inset

 be 
\begin_inset Formula $A=(a_{1},a_{2})$
\end_inset

, 
\begin_inset Formula $B=(b_{1},b_{2})$
\end_inset

 and 
\begin_inset Formula $C=(c_{1},c_{2})$
\end_inset

.
 Now center 
\begin_inset Formula $F$
\end_inset

 of equilateral triangle constructed on side 
\begin_inset Formula $AB$
\end_inset

 can be computed by rotating point 
\begin_inset Formula $B$
\end_inset

 around point 
\begin_inset Formula $A$
\end_inset

 by 
\begin_inset Formula $30$
\end_inset

 degrees clockwise to 
\begin_inset Formula $B'$
\end_inset

 and scaling 
\begin_inset Formula $AB'$
\end_inset

 to 
\begin_inset Formula $AF$
\end_inset

 with a factor of 
\begin_inset Formula $1/\sqrt{3}$
\end_inset

.
 This step is actually done by computing 
\begin_inset Formula $\overrightarrow{AF}=\left(\begin{array}{cc}
\cos(-30^{\mathrm{o}}) & -\sin(-30^{\mathrm{o}})\\
\sin(-30^{\mathrm{o}}) & \cos(-30^{\mathrm{o}})
\end{array}\right)\cdot\overrightarrow{AB}\cdot\frac{1}{\sqrt{3}}=\left(\begin{array}{cc}
\frac{1}{2} & \frac{1}{2\sqrt{3}}\\
-\frac{1}{2\sqrt{3}} & \frac{1}{2}
\end{array}\right)\cdot\overrightarrow{AB}$
\end_inset

.
 Since it is impossible to directly use 
\begin_inset Formula $\sqrt{3}$
\end_inset

 in the algebraic approach, we need to fall back to use some 
\begin_inset Formula $t$
\end_inset

 constant for which 
\begin_inset Formula $t^{2}=3$
\end_inset

 and work with 
\begin_inset Formula $t=\pm\sqrt{3}$
\end_inset

 at the same time.
 Actually, the positive case will describe the 
\begin_inset Quotes eld
\end_inset

outward
\begin_inset Quotes erd
\end_inset

 theorem, and the negative one the 
\begin_inset Quotes eld
\end_inset

inward
\begin_inset Quotes erd
\end_inset

 statement.
 Now we obtain 
\begin_inset Formula $F=\left(\frac{a_{1}+b_{1}+\frac{b_{2}-a_{2}}{t}}{2},\frac{a_{2}+b_{2}+\frac{a_{1}-b_{1}}{t}}{2}\right)$
\end_inset

.
 Also by using a similar computation for point 
\begin_inset Formula $D$
\end_inset

 we conclude that 
\begin_inset Formula $\overrightarrow{FD}=\left(\frac{a_{1}+c_{1}+\frac{a_{2}-2b_{2}+c_{2}}{t}}{2},\frac{c_{2}-a_{2}+\frac{2b_{1}-a_{1}-c_{1}}{t}}{2}\right)$
\end_inset

 and its length is the square root of 
\begin_inset Formula $\frac{1}{3}(a_{1}^{2}+a_{2}^{2}+b_{1}^{2}+b_{2}^{2}+c_{1}^{2}+c_{2}^{2}-a_{1}b_{1}-a_{1}c_{1}-a_{2}b_{2}-a_{2}c_{2}-b_{1}c_{1}-b_{2}c_{2})+\frac{1}{t}(a_{1}(b_{2}-c_{2})+b_{1}(c_{2}-a_{2})+c_{1}(a_{2}-b_{2}))$
\end_inset

.
 The first element of this sum is invariant of cycling points 
\begin_inset Formula $A\rightarrow B\rightarrow C\rightarrow A$
\end_inset

, and the second element can be written as 
\begin_inset Formula $\frac{1}{t}\cdot\left|\begin{array}{ccc}
a_{1} & b_{1} & c_{1}\\
a_{2} & b_{2} & c_{2}\\
1 & 1 & 1
\end{array}\right|$
\end_inset

 which is also invariant of cycling.
 Thus 
\begin_inset Formula $FD=DE=EF$
\end_inset

, that is, triangle 
\begin_inset Formula $DEF$
\end_inset

 is equilateral.
 Note that we heavily used that cosine and sine of 
\begin_inset Formula $30^{\mathrm{o}}$
\end_inset

 are algebraic numbers.
\end_layout

\end_inset

 since the theorem is valid for both outward and inward (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Napoleon1-1"

\end_inset

) triangles.
 (Rotations are not completely implemented in GeoGebra's prover subsytem
 yet.)
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Napoleon1.png
	width 30text%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Napoleon's theorem (outward case)
\begin_inset CommandInset label
LatexCommand label
name "fig:Napoleon1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Napoleon2.png
	width 30text%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Napoleon's theorem (inward case)
\begin_inset CommandInset label
LatexCommand label
name "fig:Napoleon1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

The other limitation is that GeoGebra can start proving only such statements
 which are 
\emph on
constructive
\emph default
.
 That is, the user needs to draw a construction first to explain what statement
 is to be checked or proven.
 In fact, this limitation helps to avoid some extreme situations where complex
 coordinates are allowed in statements, but these statements actually fail
 in real geometry.
 See more on this in 
\begin_inset CommandInset citation
LatexCommand cite
key "sturmfels"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "TraversoConti"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "wherethetruth"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "sturmfels-counter"

\end_inset

.
\end_layout

\begin_layout Standard
At the moment, the prover subsystem in GeoGebra can handle most geometrical
 operations and relations taught in secondary school: 
\emph on
point and line equality
\emph default
, 
\emph on
midpoint of a segment
\emph default
, 
\emph on
intersection
\emph default
, 
\emph on
parallelism
\emph default
, 
\emph on
perpendicularity
\emph default
, 
\emph on
collinearity
\emph default
, 
\emph on
concurrency
\emph default
, 
\emph on
concircularity
\emph default
.
 Basically, the Euclidean construction system is fully covered, however
 not all GeoGebra tools are translated into the prover machine yet.
 This simply means that sometimes we need to create the construction by
 substituting a GeoGebra tool with one or more equivalent or similar ones.
\end_layout

\begin_layout Standard
Statements which require a non-Euclidean construction cannot be stated.
 For example, Morley's theorem
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Morley's
\end_layout

\end_inset

 (which requires trisecting angles) cannot be constructed via Euclidean
 steps, thus it cannot be formulated and sent to the prover subsystem, either.
 Therefore GeoGebra cannot help in symbolical checking of this theorem---even
 if algebraically it would not be a problem to handle the situation.
 This issue could be resolved later by allowing use of algebraic expressions
 in the prover input.
\end_layout

\begin_layout Standard
To prove geometry problems, that is, we need to manipulate on algebraic
 equation systems, usually in 
\emph on
many
\emph default
 variables, which is a difficult problem in general.
\end_layout

\begin_layout Subsubsection
Which computer algebra system to choose?
\end_layout

\begin_layout Standard
There are numerous references how to manipulate a symbolic equation system.
 The most obvious breakthrough for automatizing equation system solving
 symbolically was Bruno 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Gröbner basis
\end_layout

\end_inset

 Buchberger's 1965 PhD thesis (
\begin_inset CommandInset citation
LatexCommand cite
key "Buchberger65"

\end_inset

) on Gröbner bases and the finite algorithm for generating the solutions.
 Despite to have other methods for solving this kind of problem, the Buchberger
 algorithm is considered as the most popular way for solving equation systems
 symbolically.
 Here we use the word 
\begin_inset Quotes eld
\end_inset

solving
\begin_inset Quotes erd
\end_inset

, although actually we will not be interested in the 
\emph on
exact solutions
\emph default
 but rather other properties of the equation system, for example its 
\emph on
solvability
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Index idx
status open

\begin_layout Plain Layout
algorithm!--, Buchberger
\end_layout

\end_inset

Buchberger's original algorithm is finite, but not very fast for many inputs.
 In fact, the problem itself is a difficult problem in complexity theory,
 and this means there will always be examples which cannot be computed 
\begin_inset Quotes eld
\end_inset

fast enough”.
 On the other hand, there are many implementations of the Buchberger algorithm
 with several improvements and speedups.
 To solve an equation system efficiently, is in fact, a complete research
 field for several years already.
 One example of the importance of this question is that Smale's 17th problem,
 
\begin_inset Quotes eld
\end_inset

solving polynomial equations in polynomial time in the average case
\begin_inset Quotes erd
\end_inset

, is listed as one of the most difficult mathematical problems of the 21st
 century (
\begin_inset CommandInset citation
LatexCommand cite
key "beltran,smale17"

\end_inset

).
\end_layout

\begin_layout Standard
This simply explains why GeoGebra does not have an own implementation for
 the Buchberger algorithm.
 There are experts who already worked several years on perfecting their
 own algorithms and handle several special cases to offer the output for
 the user as fast as possible.
 Thus GeoGebra should rather use one existing implementation by embedding
 it, our to outsource the computation to a specific system.
\end_layout

\begin_layout Standard
There are big differences between the several implementations.
 Easy questions are usually answerred quickly by all implementations, but
 hard questions may cause several magnitudes between the computation time
 in the various pieces of software.
 During the preparation step for creating Botana's prover in GeoGebra, we
 carefully tested several open source implementations with such inputs which
 can be expected normal questions during the classroom use.
\end_layout

\begin_layout Standard
We can make a priority list for the practical point of view for the computer
 algebra system to use:
\end_layout

\begin_layout Itemize
Be fast enough for secondary school geometry problems.
 The crucial timeout in the classroom is 5 seconds, over this time most
 students lose their interest and cannot wait and concentrate any longer.
\end_layout

\begin_layout Itemize
Be embeddable in GeoGebra both in desktop and the tablet versions.
\end_layout

\begin_layout Itemize
Be maintained by a community and also maintainable in long term.
 The GeoGebra Team has an experience mainly in the 
\emph on
Java
\emph default
 programming language, but most candidates of CAS are written in a different
 programming language which can be not well supported in the next years.
\end_layout

\begin_layout Standard
We will see in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:The-candidates"

\end_inset

 that we need to make some compromises, because no candidate can fulfill
 all requirements.
 
\end_layout

\begin_layout Subsubsection
The tests
\begin_inset CommandInset label
LatexCommand label
name "sub:The-tests"

\end_inset


\end_layout

\begin_layout Standard
In 2011 first we created 9 tests in elementary geometry and converted them
 into algebraic equation systems at 
\begin_inset CommandInset citation
LatexCommand cite
key "TheoremProvingPlanning"

\end_inset

, and ran manual benchmarking to have an impression of the magnitudes of
 the speed of the different implementations.
 Later, to be able to get more precise results, we created 
\begin_inset CommandInset citation
LatexCommand cite
key "gbt"

\end_inset

 to make it possible to test the same inputs with many implementations at
 the same time automatically on a virtual server.
\end_layout

\begin_layout Standard
Our test suite contains the following elementary geometry theorems:
\end_layout

\begin_layout Enumerate
Thales' (circle) theorem.
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Thales'
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Bisectors of a triangle are concurrent.
\end_layout

\begin_layout Enumerate
Altitudes of a triangle are concurrent.
\end_layout

\begin_layout Enumerate
Medians of a triangle are concurrent.
\end_layout

\begin_layout Enumerate
Euler's line.
\begin_inset Index idx
status open

\begin_layout Plain Layout

\series medium
line!--, Euler's
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Nine-point circle.
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, nine point circle
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Angle bisector theorem.
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, angle bisector
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Simson line.
\begin_inset Index idx
status open

\begin_layout Plain Layout

\series medium
line!--, Simson
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pappus' hexagon theorem.
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Pappus' hexagon
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The last two theorems were proven computationally much more difficult than
 the former ones, thus finally we added two extra tests for these two last
 ones with a simplified algebraic background.
 For simplicity we will refer these tests by using their first words, namely
 
\begin_inset Quotes eld
\end_inset

Thales
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Bisectors
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Altitudes
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Medians
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Euler
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Nine
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Angle
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Simson
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Pappus
\begin_inset Quotes erd
\end_inset

---and 
\begin_inset Quotes eld
\end_inset

Simson-R
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Pappus-R
\begin_inset Quotes erd
\end_inset

 for the reduced theorems.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Gröbner-basis"

\end_inset

 we will give a detailed explanation how a geometry theorem can be turned
 into an equation system.
 
\begin_inset CommandInset citation
LatexCommand cite
key "TheoremProvingPlanning"

\end_inset

 shows the detailed mathematical background and 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Remarks-on-the"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:castest-eqs"

\end_inset

 lists the corresponding equation system for each test.
 The equation systems and the benchmarking system (written in PHP and Linux
 shell scripts) itself can also be found in a ready-to-use format in 
\begin_inset CommandInset citation
LatexCommand cite
key "gbt-tgz"

\end_inset

.
\end_layout

\begin_layout Subsubsection
The candidates
\begin_inset CommandInset label
LatexCommand label
name "sub:The-candidates"

\end_inset


\end_layout

\begin_layout Standard
The reader may have some experience in various computer algebra systems
 which have different user interface and command line syntax.
 
\begin_inset CommandInset citation
LatexCommand cite
key "wiki:cas"

\end_inset

 gives a list of about 30 different computer algebra software, of which
 many are free software.
\end_layout

\begin_layout Standard
GeoGebra itself has a built-in but minimal computer algebra system which
 is, however, not really capable of difficult algebraic computations in
 several variables.
 Instead, GeoGebra has been using embedded systems for many typical tasks,
 including equation solving.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cas-history"

\end_inset

 we summarize the various CAS which were used in different GeoGebra versions.
 Decisions to change an embedded CAS to a different one were because of
 the growing demands of the GeoGebra community to use more general, robust
 or faster computations inside GeoGebra.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cas-history"

\end_inset

 does not show some other systems which were candidates to be other embedded
 systems.
 Such systems were
\end_layout

\begin_layout Itemize

\emph on
Maxima 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Maxima
\end_layout

\end_inset


\emph default
(
\begin_inset CommandInset citation
LatexCommand cite
key "maxima"

\end_inset

) and
\end_layout

\begin_layout Itemize

\emph on
JAS
\emph default
 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
JAS
\end_layout

\end_inset


\emph default
(
\begin_inset CommandInset citation
LatexCommand cite
key "JAS"

\end_inset

) 
\end_layout

\begin_layout Standard
which were published only in test development versions of GeoGebra and not
 released publicly.
 See more on the released embedded systems 
\end_layout

\begin_layout Itemize

\emph on
JSCL
\emph default
 in 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
JSCL
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "jscl"

\end_inset

,
\end_layout

\begin_layout Itemize

\emph on
Jasymca
\emph default
 in 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Jasymca
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "jasymca"

\end_inset

 ,
\end_layout

\begin_layout Itemize

\emph on
JAMA
\emph default
 in 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
JAMA
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "wiki:jama"

\end_inset

, 
\end_layout

\begin_layout Itemize

\emph on
YaCAS
\emph default
/
\emph on
Mathpiper
\emph default
 in 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
YaCAS
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "yacas"

\end_inset

 and 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Mathpiper
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "mathpiper"

\end_inset

, 
\end_layout

\begin_layout Itemize

\emph on
Reduce
\emph default
 in 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Reduce
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "reduce"

\end_inset

 and 
\end_layout

\begin_layout Itemize

\emph on
Giac
\emph default
 in 
\emph on

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Giac
\end_layout

\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "giac"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename geogebra-cas.png
	lyxscale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Argument
status open

\begin_layout Plain Layout
History of embedded CAS in GeoGebra
\end_layout

\end_inset

History of embedded CAS in GeoGebra.
\begin_inset CommandInset label
LatexCommand label
name "fig:cas-history"

\end_inset


\begin_inset Newline newline
\end_inset

Red bars show active development; orange extensions show end user activity
 between two release announcements.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first attempts to implement theorem proving in GeoGebra were done in
 2012 by using Reduce, but these attempts were preceded by Arbeo's locus
 equation project in 2010 (see page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "Arbeo"

\end_inset

).
 Arbeo used JAS version 1, but finally the 
\series bold
LocusEquation
\series default
 command was not included in the final release of GeoGebra 4.0 in 2011 due
 to lack of maturity and stability (and JAS was not embedded in GeoGebra
 4.0 for this reason).
 In 2012 Arbeo decided to rewrite his implementation using the embedded
 system Reduce to avoid adding an extra layer into GeoGebra 4.2 (thus JAS
 was still not used in this release, either).
 Concerning our theorem proving project, the question was basically that
 Reduce could also be capable of computing Gröbner bases for geometry theorem
 proving in general, or not.
 If not, what other options could we have?
\end_layout

\begin_layout Standard
The possible candidates were definitely 
\end_layout

\begin_layout Enumerate
to embed
\end_layout

\begin_deeper
\begin_layout Enumerate
Reduce or
\end_layout

\begin_layout Enumerate
JAS (its version 2 was preferred due to its better speed), 
\end_layout

\end_deeper
\begin_layout Enumerate
or to outsource the computations to a standalone CAS.
 
\end_layout

\begin_layout Standard
We wanted to avoid embedding another full computer algebra system to minimize
 size (and as such, the download time) and complexity, so we wanted to prefer
 the first option.
 For the second option, we considered open source systems Maxima, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Singular
\end_layout

\end_inset


\emph on
Singular
\emph default
 (
\begin_inset CommandInset citation
LatexCommand cite
key "Singular"

\end_inset

), the 
\emph on

\begin_inset Index idx
status open

\begin_layout Plain Layout
CoCoAlib
\end_layout

\end_inset

CoCoAlib
\emph default
 framework (
\begin_inset CommandInset citation
LatexCommand cite
key "CoCoALib"

\end_inset

) and Giac.
\end_layout

\begin_layout Standard
Unfortunately the CoCoAlib framework was accidentally left from the first
 tests despite that this system had a very good reputation in Gröbner basis
 computation already.
 But later it turned out that Giac is shipped in two different versions:
 
\emph on
with CoCoAlib
\emph default
 and 
\emph on
without it
\emph default
.
 Thus our final tests already included the benchmarking for the CoCoAlib
 as well (via Giac).
\end_layout

\begin_layout Standard
A detailed analysis (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Output-of-Gröbner"

\end_inset

) showed that Maxima is far the slowest in solving algebraic equation systems
 for theorem proving problems.
 JAS was able to compute many tests, but Reduce was faster in most cases.
\begin_inset Foot
status open

\begin_layout Plain Layout
Here for testing we used the 
\emph on
PSL
\emph default
 version which stands for 
\emph on
Portable Standard LISP
\emph default
.
 Reduce can be run on different LISP dialects.
 PSL seemed to be the fastest one, this is why we used it for the reference.
 Unfortunately in GeoGebra this dialect cannot be used due to technological
 issues.
 In sum, worse performance could be expected in our case when using Reduce
 in GeoGebra.
\end_layout

\end_inset

 However, for the more difficult tests, Reduce was still too slow.
 With no doubt Singular won all tests with significantly less time spent
 in the computations.
 Thus our decision was to use Singular remotely from GeoGebra, preferred
 as a web service, since we did not want to add yet another computer algebra
 system than Reduce into the installation package.
 We decided this step before changing the embedded CAS in GeoGebra to Giac---the
 decision was done in January 2012 and the change in March 2013.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="7">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="decimal" decimal_point="." valignment="top" width="0">
<column alignment="decimal" decimal_point="." valignment="top" width="0">
<column alignment="decimal" decimal_point="." valignment="top" width="0">
<column alignment="decimal" decimal_point="." valignment="top" width="0">
<column alignment="left" valignment="middle" width="0pt">
<column alignment="decimal" decimal_point="." valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Test
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Maxima
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
JAS 2
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Reduce
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Singular
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
CoCoA
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Giac
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Thales
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.46
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.11
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.00
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.08
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.03
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Altitudes
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.29
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.51
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.11
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.00
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.29
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.03
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Medians
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.65
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.12
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.00
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.14
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.09
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Bisectors
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.42
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.5
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.00
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.09
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.01
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Euler
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.66
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.01
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.14
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.01
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nine
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.19
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.5
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.11
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.01
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.13
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.01
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Angle
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
36.08
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.74
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.75
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.01
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.31
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.04
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Simson
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pappus
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.37
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9.28
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Simson-R
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.77
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6.07
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.07
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.87
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pappus-R
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.33
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.18
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.02
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.34
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Average
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
6.43
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
1.85
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
1.08
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
0.06
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
1.17
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
0.57
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
Average*
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
56.43
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
7.85
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
14.41
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
6.06
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
7.17
\end_layout

\end_inset
</cell>
<cell alignment="decimal" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
6.56
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Argument
status open

\begin_layout Plain Layout
Output of Gröbner basis benchmarking
\end_layout

\end_inset

Output of Gröbner basis benchmarking
\begin_inset CommandInset label
LatexCommand label
name "tab:Output-of-Gröbner"

\end_inset


\begin_inset Newline newline
\end_inset

in seconds on an Intel Xeon CPU E3-1220 V2 @ 3.10GHz running Ubuntu Linux
 11.10 in VirtualBox 4.2.10 on an Ubuntu 12.04.1 host.
 Timeout is 60 seconds, timed out tests are shown with empty cells.
 Average* shows the average by computing 60 seconds computation time for
 tests being timed out.
 The test 
\begin_inset Quotes eld
\end_inset

Simson
\begin_inset Quotes erd
\end_inset

 failed for each computer algebra system.
 The background reason of this problem will be explained in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Changing-the-analytical"

\end_inset

.
 Singular solved the first four tests below 0.01---the benchmarking system
 was unable to measure timing under this precision.
 The CoCoA column shows the results of CoCoAlib via Giac.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The availability of Giac introduced a new situation in 2013.
 It seemed a perfect candidate to be used as an embedded system, but it
 could not outperform Singular.
 Giac was definitely faster than Reduce for the more difficult tests even
 without Giac's optionally embedded CoCoAlib, so lead GeoGebra developer
 
\emph on
Michael Borcherds
\emph default
 suggested that Giac should be used as the definitive CAS in GeoGebra for
 all purposes.
\end_layout

\begin_layout Standard
Here we need to emphasize that another issue played an important role for
 choosing the best fitting CAS for the new versions of GeoGebra.
 From the technical point of view, GeoGebra is a 
\emph on
Java application
\emph default
 which requires an underlying system, the 
\emph on
Java Virtual Machine
\emph default
 (
\emph on
JVM
\emph default
), installed on each computer which runs GeoGebra.
 JVM seemed to be a long term technology for desktop computers since its
 start in 1995 until the acquisition of 
\emph on
Sun Microsystems
\emph default
 by 
\emph on
Oracle Corporation
\emph default
 in 2010.
 Oracle had a slightly different vision concerning Java (
\begin_inset CommandInset citation
LatexCommand cite
key "wiki:Java"

\end_inset

):
\end_layout

\begin_layout Quote
Sun's vice-president Rich Green said that Sun's ideal role with regard to
 Java was as an 
\begin_inset Quotes eld
\end_inset

evangelist
\begin_inset Quotes erd
\end_inset

.
 Following Oracle Corporation's acquisition of Sun Microsystems in 2009-2010,
 Oracle has described itself as the 
\begin_inset Quotes eld
\end_inset

steward of Java technology with a relentless commitment to fostering a community
 of participation and transparency
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
On the other hand, 
\begin_inset Quotes eld
\end_inset

this did not prevent Oracle from filing a lawsuit against Google shortly
 after that for using Java inside the Android SDK
\begin_inset Quotes erd
\end_inset

.
 Among other issues, this shift resulted in changes in confidence of the
 community in free availability of the Java technology for the long term.
 Visible consequences are that the Java technology is not supported by Apple
 since end of 2010
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.cnet.com/news/apple-not-committing-to-java-support-in-mac-os-x-10-7/
\end_layout

\end_inset


\end_layout

\end_inset

 and Google Chrome dropped Java applet support (among other related technologies
) since end of 2014
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://blog.chromium.org/2014/11/the-final-countdown-for-npapi.html
\end_layout

\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Instead, more important focus for software development is on JavaScript
 which has been supported in all modern web browser applications, and as
 such, it is available not only on desktop computers, but on tablets and
 mobile phones for the last years (
\begin_inset CommandInset citation
LatexCommand cite
key "GgW"

\end_inset

).
 Thus also the GeoGebra Team considered to convert GeoGebra (as a Java applicati
on) to be a JavaScript program.
 Initial attempts were started by 
\emph on
Gábor Ancsin
\emph default
 in this direction in 2009 and the GeoGebra source code was officially reorganiz
ed to support both major platforms 
\emph on
desktop
\emph default
 and 
\emph on
web
\emph default
 in 2011, after successful utilization of the 
\emph on
Google Web Toolkit
\begin_inset Index idx
status open

\begin_layout Plain Layout
Google Web Toolkit
\end_layout

\end_inset


\emph default
 (GWT, 
\begin_inset CommandInset citation
LatexCommand cite
key "gwt"

\end_inset

).
\end_layout

\begin_layout Standard
This shift required compilation of the embedded CAS from Java to JavaScript,
 too.
 Although we could compile Reduce by using GWT into JavaScript by using
 two steps (we needed to compile the underlying LISP framework to Java first,
 then the result had to be compiled again to JavaScript), its performance
 as a web application was poor (
\begin_inset CommandInset citation
LatexCommand cite
key "giacgeogebraspringer"

\end_inset

).
 By contrast, Giac could be compiled from C++ into Javascript directly by
 using the 
\emph on
emscripten
\emph default
 compiler (
\begin_inset CommandInset citation
LatexCommand cite
key "emscripten"

\end_inset

).
 Thus, Giac performs very well both in Java (via the 
\emph on
Java Native Interface
\emph default
 technology (
\begin_inset CommandInset citation
LatexCommand cite
key "jni"

\end_inset

), 
\begin_inset Index idx
status open

\begin_layout Plain Layout
JNI
\end_layout

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "JNI"
description "Java Native Interface"

\end_inset

JNI) and also in JavaScript, however its speed in a web browser may be at
 most 10 times slower than in native mode.
 For our typical use in GeoGebra this is still acceptable, since the response
 time for the theorem proving problem solving is still under 1 second in
 most cases.
\end_layout

\begin_layout Standard
Summarizing the above, Giac became the best choice for the embedded version
 in GeoGebra for 
\emph on
offline use
\emph default
 of the theorem prover, and Singular was proven to be the best performing
 symbolical equation system solver which can answer difficult questions
 as well.
 But to use Singular, the user needs 
\emph on
online
\emph default
 Internet connection.
 Although nowadays this is no longer a problem in most classrooms, for better
 portability Giac is used by default in GeoGebra 5 also for theorem proving.
\end_layout

\begin_layout Subsubsection
Singular WebService
\begin_inset Foot
status open

\begin_layout Plain Layout
This subsection (with minor differences) has already been published as a
 part of 
\begin_inset CommandInset citation
LatexCommand cite
key "amai"

\end_inset

, Section 2.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Singular is mostly written in C++.
 Embedding it into GeoGebra would be theoretically possible.
 GeoGebra is shipped as two kinds of main but completely different platforms:
 the classical, desktop based version, running in a JVM can include embedded
 systems written in different languages than Java.
 The standard technology here is JNI.
 Unfortunately, the Java standard is no longer well supported in the recent
 mobile devices including tablets and smartphones.
\end_layout

\begin_layout Standard
This is why GeoGebra has been moving towards a new platform, HTML5, since
 it is the de facto standard of many of the present developments world-wide.
 The HTML5
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HTML5"
description "hypertext markup language (version 5)"

\end_inset

 based web version of GeoGebra (
\begin_inset CommandInset citation
LatexCommand cite
key "GgW"

\end_inset

) may also include a compiled version of Singular via a 
\emph on
C++ to JavaScript
\emph default
 or 
\emph on
C++ to Native Client
\emph default
 compiler.
 This kind of embedding has already been succeeded with the Giac CAS, also
 being written in C++.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "giac-geogebra"

\end_inset

 for more details.
 Despite the theoretical possibility, for size and simplicity reasons using
 Singular from GeoGebra was definitely planned and implemented as an external
 service.
 According to site documentation
\begin_inset Foot
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.singular.uni-kl.de/index.php/singular-download/install-windows-single-fil
e.html
\end_layout

\end_inset


\end_layout

\end_inset

, the minimal Windows installer of 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Singular
\end_layout

\end_inset

Singular 3.1.6 is of size 36 MB which is about four times bigger than GeoGebra
 itself.
 For comparison, Giac can be compressed to fit in 4 MB as a native library
 and in 7 MB as JavaScript code.
 On the other hand, Giac is rather a general purpose CAS and it does not
 implement one of the fast algorithms that used in this dissertation in
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Using-transcendental-constants"

\end_inset

.
\begin_inset Foot
status open

\begin_layout Plain Layout
Since Singular is a modular system, it would still be possible to create
 an embedded minimal version of it and load the Singular kernel only for
 basic computations.
 Then, if additional functionality is needed, those could be loaded on demand.
 The compiled version of a minimal Singular executable is about 5 MB which
 must contain the GMP library (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://gmplib.org
\end_layout

\end_inset

, 500 kB compiled) as well to use arbitrary precision arithmetic.
 The detailed inevstigation of this way of using Singular may be subject
 of future work.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As a conclusion, we decided to use an outsourced solution by installing
 a Singular instance on a machine accessible via Internet (
\begin_inset CommandInset citation
LatexCommand cite
key "sws-eaca-paper"

\end_inset

).
 Our demonstrational public server (also used in GeoGebra 5 by default when
 Singular support is switched on) is currently at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

singularws.idm.jku.at
\end_layout

\end_inset

, what is more, its full software content is also available for downloading
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "sws"

\end_inset

 (375 MB .zip file).
 Thus a teacher has two options: he/she either uses our default public server,
 or has the opportunity to download the ISO image of SingularWS, install
 it into VirtualBox and set the remote machine to the locally installed
 Singular web service (SingularWS)
\size small

\begin_inset Index idx
status open

\begin_layout Plain Layout
SingularWS
\end_layout

\end_inset


\size default
 instance.
 This latter option gives more flexibility for heavy computations.
 A detailed documentation of this technical process can be read in 
\begin_inset CommandInset citation
LatexCommand cite
key "sws-geogebra"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "sws-readme"

\end_inset

.
 The end user (the student or the system administrator of the classroom)
 needs to add the command line argument 
\family typewriter
--SingularWS=remoteURL:http://...

\family default
 when using GeoGebra as in the second option; here 
\family typewriter
...

\family default
 is the IP address (or fully qualified domain name) of the SingularWS instance.
\end_layout

\begin_layout Standard
Besides the ISO
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ISO"
description "International Standards Organization"

\end_inset

 image, a port of SingularWS for ARM architecture can also be downloaded
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://193.146.36.205/pi_SingularWS_Sage5.8.img.zip
\end_layout

\end_inset


\end_layout

\end_inset

.
 This image (3 GB .zip file), specifically tailored for the low-cost Raspberry
 Pi computer, uses Singular through its embedding in Sage.
 Although computation times will rise by a factor of ten, this solution
 could be well suited for wireless use at schools with no Internet access
 and heavy budget constraints.
 By switching SingularWS caching
\begin_inset Foot
status open

\begin_layout Plain Layout
According to 
\begin_inset CommandInset citation
LatexCommand cite
key "wiki:Cache"

\end_inset

, 
\begin_inset Quotes eld
\end_inset

in computing, a 
\emph on
cache
\emph default
 is a component that stores data so future requests for that data can be
 served faster; the data stored in a cache might be the results of an earlier
 computation
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset

 on with command line argument 
\family typewriter
--SingularWS=caching:true
\family default
 in GeoGebra, the teacher can pre-generate the heavy computations for the
 local SingularWS instance before the classroom showtime and the students
 will use the pre-computed results on their workstations in an immediate
 time.
 In this case it is suggested that using such teaching materials where the
 free points are constrainted to a reduced set than the whole Euclidean
 plane, for example to grid points (in GeoGebra 
\emph on
Options
\emph default
 
\begin_inset Formula $\triangleright$
\end_inset

 
\emph on
Point Capturing
\emph default
 
\begin_inset Formula $\triangleright$
\end_inset

 
\emph on
Fixed to Grid
\emph default
).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename singularws1.png
	lyxscale 60
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Argument
status open

\begin_layout Plain Layout
GeoGebra communicates with SingularWS via the HTTP protocol
\end_layout

\end_inset

GeoGebra communicates with SingularWS via the HTTP protocol.
\begin_inset CommandInset label
LatexCommand label
name "fig:GeoGebra-communicates-with"

\end_inset


\begin_inset Newline newline
\end_inset

Caching layer software 
\emph on
Varnish
\emph default
 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Varnish
\end_layout

\end_inset

can also be inserted to speed up classroom usage when the same queries may
 be sent by more students, but only one computation is preferred for all
 of them.
 Newest version of SingularWS itself can maintain caching without any extra
 software required.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Communication with Singular is possible via a simple HTTP connection string
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:GeoGebra-communicates-with"

\end_inset

) which starts some simple PHP scripts in the background.
 The design of communication is created to be as simple as possible to have
 a working prototype within a short timeframe.
 We found, however, that this solution is robust enough for the current
 user community and the required computations of GeoGebra.
 Future work will consist of changing the HTTP/PHP interface to a more standard
 compliant one (for example to SOAP, the 
\emph on
Simple Object Access Protocol
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "SOAP"
description "Simple Object Access Protocol"

\end_inset


\emph default
, and SCSCP, 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "SCSCP"
description "Symbolic Computation Software Composability Protocol"

\end_inset

the 
\emph on
Symbolic Computation Software Composability Protocol
\emph default
).
 Also the input and output format (which is plain text at the moment) can
 be extended to 
\emph on
MathML
\emph default
 or 
\emph on
OpenMath
\emph default
 later, however, GeoGebra requires only a low level communication with SingularW
S, that is, this minimalistic approach is satisfactory for now.
\end_layout

\begin_layout Standard
For example, the HTTP
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HTTP"
description "hypertext transfer protocol"

\end_inset

 request 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://singularws.idm.jku.at/?c=s&p=ring%20R=0,(x,y),dp;ideal%20I=x^2,x;groebner(I)
;
\end_layout

\end_inset

 asks SingularWS to process the following Singular commands (
\begin_inset Quotes eld
\end_inset


\family typewriter
c=s
\family default

\begin_inset Quotes erd
\end_inset

): create the polynomial ring 
\begin_inset Formula $R$
\end_inset

 in variables 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 over the rational numbers (
\begin_inset Quotes eld
\end_inset


\family typewriter
p=ring
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{
\backslash
char32}
\end_layout

\end_inset

R=0,(x,y)
\family default

\begin_inset Quotes erd
\end_inset

), and then define the ideal 
\begin_inset Formula $I=\left\langle x^{2},x\right\rangle $
\end_inset

 (
\begin_inset Quotes eld
\end_inset


\family typewriter
ideal
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{
\backslash
char32}
\end_layout

\end_inset

I=x^2,x;
\family default

\begin_inset Quotes erd
\end_inset

), then finally print the Gröbner basis of 
\begin_inset Formula $I$
\end_inset

 (
\begin_inset Quotes eld
\end_inset


\family typewriter
groebner(I);
\family default

\begin_inset Quotes erd
\end_inset

) with respect to reverse lexicographical ordering, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset


\begin_inset Formula $x<y$
\end_inset

 (
\begin_inset Quotes eld
\end_inset


\family typewriter
dp
\family default

\begin_inset Quotes erd
\end_inset

, this is actually defined previously).
 (
\family typewriter
%20
\family default
 encodes the 
\begin_inset Quotes eld
\end_inset

space
\begin_inset Quotes erd
\end_inset

 character, that is 
\begin_inset Quotes eld
\end_inset


\family typewriter

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
texttt{
\backslash
char32}
\end_layout

\end_inset


\family default

\begin_inset Quotes erd
\end_inset

.)
\begin_inset Foot
status open

\begin_layout Plain Layout
See a detailed explanation of the meaning of these computations in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Gröbner-basis"

\end_inset

.
\end_layout

\end_inset

 The PHP wrapper rewrites the client side Singular query to a Unix shell
 command which will be directly forwarded to Singular, by starting the computati
ons inside the 
\emph on
timeout
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout

\emph on
timeout
\emph default
 is a standard Unix command written by Pádraig Brady and maintained by the
 Free Software Foundation.
\end_layout

\end_inset

 environment: for each HTTP request a separated Unix process.
 The output of the computations will be returned as a single text after
 all unnecessary extra comments of Singular (beginning with 
\family typewriter
//
\family default
 characters) are filtered out: in this example case the text 
\family typewriter
_[1]=x >
\family default
 will be the output (i.
\begin_inset space ~
\end_inset

e., the Gröbner basis is the one element set of 
\begin_inset Formula $x$
\end_inset

).
\end_layout

\begin_layout Standard
The timeout environment and the caching facility helps the SingularWS server
 not running out of resources when unusually heavy load occurs.
 The timeout parameter (the number of seconds to wait before killing the
 computation, 30 default) can be fine tuned in the configuration file in
 SingularWS.
 Since our demo server is a virtualized one (with 1 GB RAM and 1 CPU @ 3
 GHz installed), in case of extremely heavy loads its resources can even
 be increased.
 Also virtual disk capacity can be increased when the cache is growing too
 quickly: now outputs for the requests of the last 5 days are preserved.
 In the future we may also limit the number of concurrent processes either
 on operating system or application level.
\end_layout

\begin_layout Standard
For GeoGebra, in many cases, the computation time is below 10 milliseconds,
 and the communication (assuming acceptable Internet bandwidth between the
 student machine and the public Internet network of Johannes Kepler University
 of Linz, where the server takes place) is below 40 milliseconds.
 As a result, GeoGebra with SingularWS computes a wide range of geometry
 problems below 50 milliseconds.
 On the other hand, this technology offers new perspectives in real time
 locus or envelope equation computations, especially when lots of such consecuti
ve computations are needed.
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://ggb1.idm.jku.at/~kovzol/data/locusequ/singularws.ogv
\end_layout

\end_inset

 shows a short introductory video on using the 
\series bold
LocusEquation
\series default
 command
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://wiki.geogebra.org/en/LocusEquation_Command
\end_layout

\end_inset


\end_layout

\end_inset

 in GeoGebra 5 communicating with a locally installed SingularWS instance
 via the HTTP protocol.
\end_layout

\begin_layout Standard
We needed to restrict the Singular command set to prohibit harmful access
 to the SingularWS instance.
 Thus we made some internal modifications
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/kovzol/Sources/commits?author=kovzol
\end_layout

\end_inset


\end_layout

\end_inset

 on Singular to run it in sandboxed mode by using the command line option
 
\family typewriter
--no-shell
\family default
.
 This mode will be available in Singular 3.1.7.
 (SingularWS currently uses version 3.1.6.)
\end_layout

\begin_layout Subsection
New commands in GeoGebra: Prove and ProveDetails
\begin_inset CommandInset label
LatexCommand label
name "sub:New-commands-in"

\end_inset


\end_layout

\begin_layout Standard
One of the most important design principles in GeoGebra is to keep things
 as simple as possible (by following the KISS
\begin_inset Index idx
status open

\begin_layout Plain Layout
principle!--, KISS
\end_layout

\end_inset

 principle, see page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "KISS"

\end_inset

).
 This is why we planned to introduce the 
\series bold
Prove
\series default
 command to be very easy to use, and as an extra command for the advanced
 users, we created 
\series bold
ProveDetails
\series default
.
 Basically, mathematical relations are usually checked with GeoGebra visually
 (Level 1 verification, see page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:De-Villiers'-model"

\end_inset

) or by checking a Boolean relation (Level 2 verification, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

numerically).
 An example for a Boolean expression can be to create a construction with
 several points and lines, and checking if the lines 
\begin_inset Formula $l_{1}$
\end_inset

 and 
\begin_inset Formula $l_{2}$
\end_inset

 are perpendicular, the user should enter 
\begin_inset Formula $l_{1}\perp l_{2}$
\end_inset

; now GeoGebra will store this as an expression which can be true or false,
 depending on the current configuration of 
\begin_inset Formula $l_{1}$
\end_inset

 and 
\begin_inset Formula $l_{2}$
\end_inset

.
 The value of the expression is dynamic: if the construction objects change
 (Level 3 verification), then this expression will be recomputed.
 (See 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:gg1"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:gg2"

\end_inset

 for the former example on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:GeoGebra-4.4"

\end_inset

.)
\end_layout

\begin_layout Standard
The 
\series bold
Prove
\series default
 command works very similarly.
 If the user realizes that 
\begin_inset Formula $l_{1}$
\end_inset

 and 
\begin_inset Formula $l_{2}$
\end_inset

 seem to be always perpendicular, GeoGebra could be asked if this is really
 the case by entering 
\series bold
Prove[
\series default

\begin_inset Formula $l_{1}\perp l_{2}$
\end_inset


\series bold
]
\series default
 (Level 6 verification).
 Now GeoGebra may give answers 
\begin_inset Quotes eld
\end_inset

yes
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

no
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

undefined
\begin_inset Quotes erd
\end_inset

, depending on it finds a machine generated proof for the question, or the
 question turns to be false, or GeoGebra cannot find a way to decide the
 question.
\end_layout

\begin_layout Standard
Most users will be satisfied with this.
 But, unfortunately, elementary geometry is usually more complicated than
 it seems.
 Many statements are 
\begin_inset Quotes eld
\end_inset

almost always true
\begin_inset Quotes erd
\end_inset

, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

true under certain 
\emph on
general
\emph default
 conditions only.
 For example, a large set of theorems about triangles cannot even be formulated
 if we do not assume that the triangle is non-degenerate, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

their vertices are not lying on the same line.
 In many schools, this question is not discussed at all, but in some classes
 (including those which are specialized in mathematics) it is very natural
 to ask the question of the exceptional cases.
 For these users (including students and teachers) we introduced the 
\series bold
ProveDetails
\series default
 command as well.
 Its input is the same as for the 
\series bold
Prove
\series default
 command, but the output is a list:
\end_layout

\begin_layout Enumerate
A list with one element: 
\emph on
{true}
\emph default
, if the statement is always true.
 An example for this is the midline theorem (see page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "The-midline-theorem"

\end_inset

).
\end_layout

\begin_layout Enumerate
A list with more elements, containing the Boolean value 
\emph on
true
\emph default
 and another list for the degeneracy conditions, if the statement is true
 under certain conditions, e.
\begin_inset space ~
\end_inset

g.
\begin_inset space ~
\end_inset


\emph on
{true, {
\begin_inset Quotes erd
\end_inset

AreCollinear[A,B,C],AreEqual[C,D]
\begin_inset Quotes erd
\end_inset

}}
\emph default
.
 This means that if all of the conditions are false, then the statement
 will be true.
 For such a statement a straightforward example is the bisection of the
 diagonals of a parallelogram which was discussed in 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Proving-with-computer"

\end_inset

, here the only degeneracy condition is 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 are collinear
\begin_inset Quotes erd
\end_inset

 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:gg2"

\end_inset

 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "fig:gg2"

\end_inset

 and Example
\begin_inset CommandInset ref
LatexCommand ref
reference "parallelogram"

\end_inset

 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "parallelogram"

\end_inset

).
 That is, GeoGebra will return 
\emph on
{true,{
\begin_inset Quotes erd
\end_inset

AreCollinear[A,B,C]
\begin_inset Quotes erd
\end_inset

}}
\emph default
 in this example.
\begin_inset CommandInset label
LatexCommand label
name "enu:case2"

\end_inset


\end_layout

\begin_layout Enumerate
A list 
\emph on
{true,{"
\begin_inset Formula $\ldots$
\end_inset

"}}
\emph default
, if the statement is true under certain conditions, but these conditions
 cannot be translated to human readable form for some reasons.
 We will show some such kind of conditions later in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:eulerline"

\end_inset

 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "ex:eulerline"

\end_inset

.
\end_layout

\begin_layout Enumerate
A list with one element: 
\emph on
{false}
\emph default
, if the statement is not 
\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset

, that is the previous cases do not include it.
 An example for such a statement is that for arbitrary two free points 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 they are equal.
 Note that this statement can still be true 
\begin_inset Quotes eld
\end_inset

sometimes
\begin_inset Quotes erd
\end_inset

: if 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 accidentally coincide.
 This is, however, a very rare situation.
\end_layout

\begin_deeper
\begin_layout Standard
We can even introduce the notion of 
\begin_inset Quotes eld
\end_inset

always false
\begin_inset Quotes erd
\end_inset

 statement when considering the following example: Let point 
\begin_inset Formula $A$
\end_inset

 be arbitrary, and let point 
\begin_inset Formula $B$
\end_inset

 be a translation of 
\begin_inset Formula $A$
\end_inset

 with a constant non-zero vector.
 Now the statement 
\begin_inset Formula $A=B$
\end_inset

 is always false.
 GeoGebra does not distinguish 
\begin_inset Quotes eld
\end_inset

always false
\begin_inset Quotes erd
\end_inset

 cases from 
\begin_inset Quotes eld
\end_inset

generally false
\begin_inset Quotes erd
\end_inset

 ones.
\end_layout

\end_deeper
\begin_layout Enumerate
An empty list 
\emph on
{}
\emph default
 if GeoGebra cannot determine the answer because of lack of resources, missing
 steps in the implementation or any other error.
\end_layout

\begin_layout Standard
While the categories 
\begin_inset Quotes eld
\end_inset

always false
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

always true
\begin_inset Quotes erd
\end_inset

 are obvious, that is 
\begin_inset Quotes eld
\end_inset

black and white
\begin_inset Quotes erd
\end_inset

, it is not straightforward to determine the border between them.
 Strictly speaking, the theorem about the bisecting diagonals of the parallelogr
am (case 2 in our list above) could be considered 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

 if we do not add the non-degeneracy condition.
 Also, we could say that two free points 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 can be equal if they coincide, that is, our example in case 4 could actually
 be considered 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

 by thinking extremely.
 In the Gröbner basis method we explicitly define the falsity and the truth
 related to the maximal amount of possible exceptions in the term of dimensions
 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Statements-which-are"

\end_inset

), but this definition is different from GeoGebra's classification (see
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:generally-translation"

\end_inset

).
\end_layout

\begin_layout Standard
It is important to emphasize that different proving methods may have different
 definitions for falsity and truth.
 For example, the Gröbner basis method defines 
\begin_inset Quotes eld
\end_inset

always false
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

generally false
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

always true
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 classes.
 We can consider the class 
\begin_inset Quotes eld
\end_inset

always false
\begin_inset Quotes erd
\end_inset

 as a special case of 
\begin_inset Quotes eld
\end_inset

generally false
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

always true
\begin_inset Quotes erd
\end_inset

 as a special case of 
\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset

.
 But statements classified with 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 are neither 
\begin_inset Quotes eld
\end_inset

generally false
\begin_inset Quotes erd
\end_inset

, nor 
\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset

: they are somewhere in-between.
 For instance, let us consider the following
\end_layout

\begin_layout Example
Let 
\begin_inset Formula $c$
\end_inset

 be a circle with its center 
\begin_inset Formula $A=(0,0)$
\end_inset

 and its circumpoint 
\begin_inset Formula $B=(1,0)$
\end_inset

.
 Let 
\begin_inset Formula $l$
\end_inset

 be a line that joins 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

.
 Now let 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 the intersection points of 
\begin_inset Formula $c$
\end_inset

 and 
\begin_inset Formula $l$
\end_inset

.
 Let us investigate the truth of statement 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $B=C$
\end_inset


\begin_inset Quotes erd
\end_inset

.
 Clearly, this statement is not always true: we can choose 
\begin_inset Formula $C=(-1,0)$
\end_inset

 and 
\begin_inset Formula $D=(1,0)$
\end_inset

 as a counterexample.
 Since there are two solutions for 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

, statistically there is 50% chance to choose good set 
\begin_inset Formula $C=(1,0)$
\end_inset

 and 
\begin_inset Formula $D=(-1,0)$
\end_inset

, and also 50% to choose the 
\begin_inset Quotes eld
\end_inset

bad one
\begin_inset Quotes erd
\end_inset

.
 In this case the Gröbner basis approach will conclude that this statement
 is neither true, nor false, so it is 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

.
 In other words, it can be possible to find some additional conditions to
 make this statement true, for example by adding the condition 
\begin_inset Quotes eld
\end_inset

the distance of 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 is 
\begin_inset Formula $2$
\end_inset


\begin_inset Quotes erd
\end_inset

.
 That is, 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 statements are actually interesting in the sense of discovery: to find
 extra conditions to make a 
\begin_inset Quotes eld
\end_inset

not generally true
\begin_inset Quotes erd
\end_inset

 statement 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "ex:neither-nor"

\end_inset

 (In fact such conditions can be found automatically by using algorithms
 which are not discussed in this dissertation, see 
\begin_inset CommandInset citation
LatexCommand cite
key "tomas-discovery2"

\end_inset

 for details.)
\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

Harmonization
\begin_inset Quotes erd
\end_inset

 of the various methods is a crucial question in GeoGebra.
 That is, we hope that the various mathematical methods do not output essentiall
y different results for the same statements, or if there is a contradiction,
 GeoGebra intelligently works around the situation.
 This means that we expect that there are no results which are 
\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

not generally true
\begin_inset Quotes erd
\end_inset

 at the same time when using different methods for the same statement.
 If this expectation is not met, then GeoGebra cannot be accepted as a reliable
 theorem prover system.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gröbner basis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wu's
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Prove
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ProveDetails
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
always true
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{true}
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
generally true
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{true,{
\emph on
degeneracy conditions
\emph default
}}
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
other
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
--
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
false
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{false}
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
generally false
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
false
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
always false
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(error/unknown)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
undefined
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{}
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Argument
status open

\begin_layout Plain Layout
Translation of results of some proving methods to GeoGebra
\end_layout

\end_inset

Translation of results of some proving methods to GeoGebra.
\begin_inset CommandInset label
LatexCommand label
name "tab:generally-translation"

\end_inset


\begin_inset Newline newline
\end_inset

A description of the implementation of Wu's method in OpenGeoProver can
 be found at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://code.google.com/p/open-geo-prover/wiki/wu_method
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In case 2 (on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "enu:case2"

\end_inset

) we can suspect whether the output of the 
\series bold
ProveDetails
\series default
 command is universal enough to cover the outputs of the various methods
 achieving the degeneracy conditions of a certain question.
 We will see in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Readable-sufficient-conditions"

\end_inset

 that mathematically speaking, it can be not general enough, but for the
 educational use it will be sufficient.
 To be more precise, the general form of such an assumption is
\begin_inset Formula 
\[
(\neg C_{1,1}\wedge\neg C_{1,2}\wedge\ldots\wedge\neg C_{1,r_{1}})\vee\ldots\vee(\neg C_{s,1}\wedge\neg C_{s,2}\wedge\ldots\wedge\neg C_{1,r_{s}})
\]

\end_inset

i.
\begin_inset space ~
\end_inset

e., a disjunction of negated conjunctions.
 GeoGebra will show only one member of the disjunction (in many cases, the
 easiest one).
\end_layout

\begin_layout Remark
In Wu's method and the area method there will always be only one member
 of the disjunctions, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the condition is simply 
\begin_inset Formula $\neg C_{1}\wedge\neg C_{2}\wedge\ldots\wedge\neg C_{r}$
\end_inset

.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "Cox+Others/1991/Ideals"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "area"

\end_inset

 to read more on this.
\end_layout

\begin_layout Subsection
The Relation Tool
\begin_inset CommandInset label
LatexCommand label
name "sub:The-Relation-Tool"

\end_inset


\end_layout

\begin_layout Standard
From the educational point of view, these new commands, 
\series bold
Prove
\series default
 and 
\series bold
ProveDetails
\series default
 are not really visual, since the output of both commands looks 
\emph on
static
\emph default
.
 This means that for a given construction both commands will compute some
 result, but after dynamically changing the construction by dragging the
 free points, the outputs of 
\series bold
Prove
\series default
 and 
\series bold
ProveDetails
\series default
 will remain the same.
 This is, although, mathematically correct and transmits some kind of 
\begin_inset Quotes eld
\end_inset

theoretical stability
\begin_inset Quotes erd
\end_inset

, it may not reflect the importance of the result that we actually proved
 something for infinitely many cases.
 The fast computation (i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

that the result is shown almost immediately on the screen) gives the feeling
 that something easy is in the background, so in sum using these new commands
 can yield an opposite effect as expected.
 Finally, these commands cannot be reached from the toolbar: the keyboard
 is required to enter them.
 On the other hand, the output of the 
\series bold
ProveDetails
\series default
 command can still be inconvenient for many students since it is given in
 a list type object (which is not visual enough).
 Needless to say: this is not what we call a successful deployment of a
 newly introduced education tool.
\end_layout

\begin_layout Standard
Thus we found another way to bind the ATP results to the already existing
 user interface well known by many users already.
 The link is the Relation Tool, already shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:gg1"

\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:GeoGebra-4.4"

\end_inset

, which can be improved with non-numerical checks.
 But in our new approach we have to be careful: many types of checks cannot
 be done symbolically (not only those which are not algebraic), thus we
 still need to enable numerical checks.
 Also it is important to not confuse old users who already assume that a
 numerical check will be done (i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

we should ensure backward compatibility), and from the classroom perspective
 it is useful to get a lower level verification impression first than quickly
 the perfect answer (cf.
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Posa"

\end_inset

).
 (Here GeoGebra uses Level 2.)
\end_layout

\begin_layout Standard
So, the idea we come up with is as follows:
\begin_inset Index idx
status open

\begin_layout Plain Layout
algorithm!--, Relation Tool (symbolical)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Use the Relation Tool as previously (i.
\begin_inset space ~
\end_inset

e., a numerical check is still computed), but add an extra button 
\begin_inset Quotes eld
\end_inset


\shape smallcaps
More
\shape default

\begin_inset Formula $\ldots$
\end_inset


\begin_inset Quotes erd
\end_inset

 on the right to the output statement if the statement was found to be true
 numerically.
 (If the statement is not true numerically, then this extra button is not
 shown.)
\end_layout

\begin_layout Enumerate
If the student clicks this button, GeoGebra computes the result for the
 statement by using the 
\series bold
Prove
\series default
 command internally.
 Now (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:generally-translation"

\end_inset

) the answer can be 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

undefined
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
In the 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

undefined
\begin_inset Quotes erd
\end_inset

 cases GeoGebra will compute the result for the statement by using the 
\series bold
ProveDetails
\series default
 command as second step.
 Its output will be converted to a more user friendly format:
\end_layout

\begin_deeper
\begin_layout Enumerate
If the output is 
\begin_inset Quotes eld
\end_inset

{true}
\begin_inset Quotes erd
\end_inset

 and therefore there are no degeneracy conditions, the Relation Tool appends
 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

always true
\begin_inset Quotes erd
\end_inset


\shape default
 to the statement.
\end_layout

\begin_layout Enumerate
If the output is 
\begin_inset Quotes eld
\end_inset

{true,{
\begin_inset Formula $\ldots$
\end_inset

}}
\begin_inset Quotes erd
\end_inset

 and there is a list of readable conjuctions found as non-degeneracy conditions,
 then the list displayed as a sufficient condition for the statement.
\end_layout

\begin_layout Enumerate
If the output is 
\begin_inset Quotes eld
\end_inset

{true,{
\begin_inset Formula $\ldots$
\end_inset

}}
\begin_inset Quotes erd
\end_inset

, but non-degeneracy conditions were found which are not human readable,
 then the statement is appended with the message 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

under certain conditions
\shape default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
If the 
\series bold
ProveDetails
\series default
 command returned 
\begin_inset Quotes eld
\end_inset

{}
\begin_inset Quotes erd
\end_inset

, that is, it does not give a useful answer, 
\end_layout

\begin_deeper
\begin_layout Enumerate
but 
\series bold
Prove
\series default
 returned true, then the statement is proven to be 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset


\shape default
; 
\end_layout

\begin_layout Enumerate
otherwise GeoGebra appends the text 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

possibly generally true
\begin_inset Quotes erd
\end_inset


\shape default
.
\end_layout

\end_deeper
\begin_layout Enumerate
If the 
\series bold
ProveDetails
\series default
 command returns 
\begin_inset Quotes eld
\end_inset

{false}
\begin_inset Quotes erd
\end_inset

 and the 
\series bold
Prove
\series default
 command returned true, then GeoGebra realizes that an internal error occured
 since the result of the 
\series bold
Prove
\series default
 and 
\series bold
ProveDetails
\series default
 commands are contradictory.
 This case should not happen.
\end_layout

\end_deeper
\begin_layout Enumerate
In the 
\begin_inset Quotes eld
\end_inset

not generally true
\begin_inset Quotes erd
\end_inset

 case the Relation Tool appends 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

but not generally true
\begin_inset Quotes erd
\end_inset


\shape default
 to the statement.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename reltool-diag3.pdf
	lyxscale 60
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Argument
status open

\begin_layout Plain Layout
The Relation Tool algorithm as a flowchart
\end_layout

\end_inset

The Relation Tool algorithm as a flowchart.
\begin_inset CommandInset label
LatexCommand label
name "fig:reltool"

\end_inset


\begin_inset Newline newline
\end_inset

Dashed lines show the default procession flow (that is, the 
\begin_inset Quotes eld
\end_inset

otherwise
\begin_inset Quotes erd
\end_inset

 cases).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:reltool"

\end_inset

 explains this decision algorithm as a flowchart.
 We emphasize here that the algorithm is a 
\emph on
practical approach
\emph default
 to optimize computations to quickly get a useful report for the Relation
 Tool, based on the answers of the 
\series bold
Prove
\series default
 and 
\series bold
ProveDetails
\series default
 commands.
\end_layout

\begin_layout Standard
We account for using the text 
\begin_inset Quotes eld
\end_inset


\shape smallcaps
More
\shape default

\begin_inset Formula $\ldots$
\end_inset


\begin_inset Quotes erd
\end_inset

 on the button.
 Since we do not prove the statement by providing the student with a derivation,
 we should not use the word 
\begin_inset Quotes eld
\end_inset

prove
\begin_inset Quotes erd
\end_inset

.
 But we also do not want to diminish the importance of what we are doing
 here, so a word which is not strong enough, e.
\begin_inset space ~
\end_inset

g.
\begin_inset space ~
\end_inset


\begin_inset Quotes eld
\end_inset

verify
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

check
\begin_inset Quotes erd
\end_inset

 would be too less here.
 Also longer explanation like 
\begin_inset Quotes eld
\end_inset

checking symbolically
\begin_inset Quotes erd
\end_inset

 would make things too complicated for the student.
\end_layout

\begin_layout Standard
Another important detail is that we make a difference between cases a) iii.
\begin_inset space ~
\end_inset

and iv.
\begin_inset space ~
\end_inset

A.
 In the first case the student is informed that there should be conditions
 given, but they are difficult to explain.
 In the second case it is not sure that there are any conditions, that is
 the statement can be 
\begin_inset Quotes eld
\end_inset

always true
\begin_inset Quotes erd
\end_inset

 as well, but GeoGebra cannot compute the detailed answer.
 Here the teacher may need to explain this situation.
\end_layout

\begin_layout Standard
Also an intentional decision is the wording for case a) iv.
\begin_inset space ~
\end_inset

B.
 For the `too difficult' constructions both the 
\series bold
Prove
\series default
 and 
\series bold
ProveDetails
\series default
 commands return undefined which may mean that
\end_layout

\begin_layout Enumerate
one or more steps cannot be formulated, algebraized or processed by GeoGebra,
 or
\end_layout

\begin_layout Enumerate
the computation was too difficult (more memory or CPU
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CPU"
description "central processing unit"

\end_inset

 time would have been needed).
\end_layout

\begin_layout Standard
Since the numerical verification about the truth of the statement in one
 particular instance returned positive, it seems plausible that a symbolical
 computation with more resources could certify the numerical computation
 as well.
 Also in the first case there may be additional conditions found to make
 the conjecture generally true.
 This is why we use the word 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

possibly
\begin_inset Quotes erd
\end_inset


\shape default
 here.
 Of course this does not tell any certainty about the truth of the statement.
\end_layout

\begin_layout Standard
Using the Relation Tool is convenient: the student does not require to use
 the Input Bar to enter anything---only mouse clicks are sufficient for
 the investigation.
 We will find some examples in 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Application-and-examples"

\end_inset

 where using the Input Bar could still be useful, but in most cases the
 Relation Tool is a quick way for a Level 6 verification of the statement.
\end_layout

\begin_layout Standard
Let us see examples for each case.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-9pc"

\end_inset

 the nine point circle theorem
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, nine point circle
\end_layout

\end_inset

 is shown.
 Given the 
\begin_inset Formula $ABC$
\end_inset

 triangle, we construct feet points of altitudes 
\begin_inset Formula $d$
\end_inset

, 
\begin_inset Formula $e$
\end_inset

 and 
\begin_inset Formula $f$
\end_inset

 as points 
\begin_inset Formula $D$
\end_inset

, 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

, respectively.
 Intersection point of 
\begin_inset Formula $d$
\end_inset

 and 
\begin_inset Formula $e$
\end_inset

 is 
\begin_inset Formula $G$
\end_inset

.
 Midpoints of 
\begin_inset Formula $AG$
\end_inset

, 
\begin_inset Formula $BG$
\end_inset

 and 
\begin_inset Formula $CG$
\end_inset

 are 
\begin_inset Formula $H$
\end_inset

, 
\begin_inset Formula $I$
\end_inset

 and 
\begin_inset Formula $J$
\end_inset

, respectively.
 Finally, midpoints of sides 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 are 
\begin_inset Formula $K$
\end_inset

, 
\begin_inset Formula $L$
\end_inset

 and 
\begin_inset Formula $M$
\end_inset

, respectively.
 The statement is that points 
\begin_inset Formula $D,$
\end_inset

 
\begin_inset Formula $E$
\end_inset

, 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $H$
\end_inset

, 
\begin_inset Formula $I$
\end_inset

, 
\begin_inset Formula $J$
\end_inset

, 
\begin_inset Formula $K$
\end_inset

, 
\begin_inset Formula $L$
\end_inset

 and 
\begin_inset Formula $M$
\end_inset

 lie on the same circle.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ninepointcircle.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
The nine point circle theorem
\begin_inset CommandInset label
LatexCommand label
name "fig-9pc"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This statement can be formulated by various ways, for example one formalization
 is to create circle 
\begin_inset Formula $g$
\end_inset

 which is defined by circumference points 
\begin_inset Formula $K$
\end_inset

, 
\begin_inset Formula $L$
\end_inset

 and 
\begin_inset Formula $M$
\end_inset

.
 In this case the other six points should be checked if they are also elements
 of circle 
\begin_inset Formula $g$
\end_inset

.
 To get the answer from GeoGebra the student needs to select the Relation
 Tool, then one of the six points and finally the circle (or vice versa).
 GeoGebra will return answers like in 
\bar under
case a) ii.
\bar default
, for example
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
It is generally true that:
\end_layout

\begin_layout Itemize
\noindent
\begin_inset Formula $D$
\end_inset

 lies on 
\begin_inset Formula $g$
\end_inset

 
\end_layout

\begin_layout Plain Layout
\noindent
under the condition: 
\end_layout

\begin_layout Itemize
\noindent
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 are not equal
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
For points 
\begin_inset Formula $E$
\end_inset

, 
\begin_inset Formula $F$
\end_inset

 we get similar conditions, and for 
\begin_inset Formula $H$
\end_inset

, 
\begin_inset Formula $I$
\end_inset

 and 
\begin_inset Formula $J$
\end_inset

 we obtain that non-degeneracy of triangle 
\begin_inset Formula $ABC$
\end_inset

 is a sufficient condition for their belonging to circle 
\begin_inset Formula $g$
\end_inset

.
 On the other hand it is also possible to ask alignment of points 
\begin_inset Formula $K$
\end_inset

, 
\begin_inset Formula $L$
\end_inset

 and 
\begin_inset Formula $M$
\end_inset

 to 
\begin_inset Formula $g$
\end_inset

, in this case the trivial answer 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

always true
\begin_inset Quotes erd
\end_inset


\shape default
 will be returned (see 
\bar under
case a) i.
\bar default
).
 In fact in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-9pc"

\end_inset

 point 
\begin_inset Formula $K$
\end_inset

 coincides with point 
\begin_inset Formula $D$
\end_inset

, but actually the figure is not general enough: accidentally (here intentionall
y) the triangle was constructed to be isosceles.
 We can either ask if 
\begin_inset Formula $D=K$
\end_inset

 or 
\begin_inset Formula $b=c$
\end_inset

 and GeoGebra returns they are 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

but not generally
\begin_inset Quotes erd
\end_inset


\shape default
 (
\bar under
case b)
\bar default
).
\end_layout

\begin_layout Standard
Another formalization of the nine point circle theorem by defining the circle
 with circumference points 
\begin_inset Formula $D$
\end_inset

, 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

.
 Surprisingly, the underlying algebraic problem is completely different
 in this case and it requires more effective computations.
 Thus in GeoGebra 5 by default we may not get a result other than 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

possibly generally true
\begin_inset Quotes erd
\end_inset


\shape default
 because of the computational complexity of the problems (
\bar under
case a) iv.
\begin_inset space ~
\end_inset

B.
\bar default
).
 On the other hand, when using SingularWS (instead of the default embedded
 Giac system
\begin_inset Foot
status open

\begin_layout Plain Layout
Another option is to change Giac's timeout setting to more than the default
 5 seconds.
 This can be achieved by opening the 
\emph on
CAS View
\emph default
 (for example, in the 
\emph on
Options
\emph default
 menu), and then in 
\emph on
Options
\emph default
 
\begin_inset Formula $\vartriangleright$
\end_inset

 
\emph on
Advanced
\emph default

\begin_inset Formula $\ldots$
\end_inset

 
\begin_inset Formula $\vartriangleright$
\end_inset

 
\emph on
Preferences -- CAS
\emph default
 
\begin_inset Formula $\vartriangleright$
\end_inset

 
\emph on
CAS Timeout (in seconds)
\emph default
 change the default value to say 30 seconds.
 In addition, the user needs to start GeoGebra by using the command line
 and add the option 
\family typewriter
--prover=timeout:30
\family default
 to allow the prover subsystem to spend more time with computations than
 the default 5 seconds.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Command-line-options"

\end_inset

 for more details.
\end_layout

\end_inset

), elegant lists of sufficient conditions can be obtained, for example
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "55col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
It is generally true that:
\end_layout

\begin_layout Itemize
\begin_inset Formula $H$
\end_inset

 lies on 
\begin_inset Formula $g$
\end_inset

 
\end_layout

\begin_layout Plain Layout
under the condition: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are not perpendicular and
\end_layout

\begin_layout Itemize
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 are not perpendicular
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can also think of using circumference points 
\begin_inset Formula $H$
\end_inset

, 
\begin_inset Formula $I$
\end_inset

, 
\begin_inset Formula $J$
\end_inset

 or even, for example, 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $I$
\end_inset

, 
\begin_inset Formula $M$
\end_inset

 when defining the circle.
 In this latter case we obtain, for example
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "55col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
It is generally true that:
\end_layout

\begin_layout Itemize
\begin_inset Formula $L$
\end_inset

 lies on 
\begin_inset Formula $g$
\end_inset

 
\end_layout

\begin_layout Plain Layout
under the condition: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are not equal and
\end_layout

\begin_layout Itemize
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 are not perpendicular and
\end_layout

\begin_layout Itemize
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 are not perpendicular
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Under certain conditions:
\end_layout

\begin_layout Itemize
\begin_inset Formula $E$
\end_inset

 lies on 
\begin_inset Formula $g$
\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This last result is as described in 
\bar under
case a) iii
\bar default
.
\end_layout

\begin_layout Standard
Finally, when circle 
\begin_inset Formula $g$
\end_inset

 is defined as the circumcircle of points 
\begin_inset Formula $D,$
\end_inset

 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 then the statement 
\begin_inset Formula $F$
\end_inset

 lies on 
\begin_inset Formula $g$
\end_inset

 will be 
\shape smallcaps

\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset


\shape default
 (
\bar under
case a) iv.
\begin_inset space ~
\end_inset

A
\bar default
).
\end_layout

\begin_layout Standard
The examples discussed above are computationally more difficult cases than
 the most typical classroom situations.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Application-and-examples"

\end_inset

 we give some detailed examples to use the Relation Tool in GeoGebra 5,
 in concrete classroom problems.
\end_layout

\begin_layout Standard
However the Relation Tool in GeoGebra 5 is already ready to use in the classroom
 for helping the teaching process for proving, there are other possibilities
 for the future to implement.
 In GeoGebra between two objects there may be more kind of relationships:
 for example, two segments can be equal long and/or parallel independently.
 Now the Relation Tool reports numerical checks for all possible relationships
 in its output window.
 This idea could be further improved to collect relationships among a wider
 set of objects than two, and investigate all possible combinations of these
 objects to collect the relations (see also 
\begin_inset CommandInset citation
LatexCommand cite
key "DanSong"

\end_inset

).
 For example, the student could draw a triangle and its medians and select
 some (or eventually all) objects in the figure.
 In this case GeoGebra could give a list of all relationships among the
 selected objects, including the concurrency of the medians.
 Such a list can be, however, quite long.
 Thus it would be important to make it possible to filter out some trivial
 relations, or at least to show those first which seem to be interesting
 enough.
\end_layout

\begin_layout Subsection
Summary
\end_layout

\begin_layout Standard
Here we summarize the basic idea of this section by adding a hardcopy of
 
\begin_inset CommandInset citation
LatexCommand cite
key "portfolio"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includepdf[pages=-,nup=1x1,frame=true,noautoscale=true,scale=0.9]{paper13}
\end_layout

\end_inset


\end_layout

\begin_layout Section
The Gröbner basis method
\begin_inset CommandInset label
LatexCommand label
name "sec:The-Gröbner-basis"

\end_inset


\end_layout

\begin_layout Standard
In this section we give a general overview of 
\begin_inset Index idx
status open

\begin_layout Plain Layout
method!--, Botana's
\end_layout

\end_inset

Botana's method (i.
\begin_inset space ~
\end_inset

e., the Gröbner basis method), implemented inside GeoGebra.
 We do not assume that the reader has a deeper understanding of the underlying
 theory in mathematics, but some elementary knowledge about logic and equations.
 We will not define the notion of Gröbner bases in the first part of this
 section, but use some applications of it as black boxes.
\end_layout

\begin_layout Standard
For simplicity we will focus on the used logic for the 
\series bold
ProveDetails
\series default
 command first.
 This is somewhat different from the algorithm used by the 
\series bold
Prove
\series default
 command which is described later.
 Our first approach will still give some understanding of the difficulty
 of the applied theory and also the computation complexity.
\end_layout

\begin_layout Subsection
Logical consequence
\end_layout

\begin_layout Subsubsection
Definition and examples
\end_layout

\begin_layout Standard
We assume that we work in a number field.
 In the first examples it will be simpler to think about 
\begin_inset Formula $\mathbb{R}$
\end_inset

.
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $H_{1},H_{2},\ldots,H_{m}$
\end_inset

 be 
\emph on
\bar under
statements
\emph default
\bar default
 depending on 
\emph on
\bar under
variables
\emph default
\bar default
 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{n}$
\end_inset

.
 (We will call these statements 
\emph on
\bar under
hypotheses
\emph default
\bar default
, 
\emph on
premises
\emph default
 or 
\emph on
conditions
\emph default
.) Let 
\begin_inset Formula $T$
\end_inset

 be another statement depending on these variables.
 (We will call 
\begin_inset Formula $T$
\end_inset

 
\emph on
\bar under
thesis
\emph default
\bar default
 or 
\emph on
conclusion
\emph default
.) If for all specializations of the variables into numbers when all of the
 statements are true at the same time, 
\begin_inset Formula $T$
\end_inset

 is also true, then we call the thesis the 
\emph on
\bar under
logical consequence
\begin_inset Index idx
status open

\begin_layout Plain Layout
logical consequence
\end_layout

\end_inset


\emph default
\bar default
 of the statements and denote by 
\begin_inset Formula $H_{1},H_{2},\ldots,H_{m}\Rightarrow T$
\end_inset

.
 (In short, hypotheses 
\begin_inset Formula $H_{1},H_{2},\ldots,H_{m}$
\end_inset

 will be called 
\emph on
a system of conditions
\emph default
.
 In later sections we will call a logical consequence a 
\emph on
theorem
\emph default
, usually a 
\emph on
geometry theorem
\emph default
.)
\begin_inset CommandInset label
LatexCommand label
name "def-logcons"

\end_inset


\end_layout

\begin_layout Example
\begin_inset Formula $H_{1}:v=1\vee v=2$
\end_inset

, 
\begin_inset Formula $H_{2}:v=2\vee v=3$
\end_inset

, 
\begin_inset Formula $T:v=2$
\end_inset

.
 Here 
\begin_inset Formula $H_{1},H_{2}\Rightarrow T$
\end_inset

 because the only possibility for 
\begin_inset Formula $v$
\end_inset

 to satisfy both 
\begin_inset Formula $H_{1}$
\end_inset

 and 
\begin_inset Formula $H_{2}$
\end_inset

 is 
\begin_inset Formula $v=2$
\end_inset

, and this implies 
\begin_inset Formula $T$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "(1)"

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Example
\begin_inset Formula $H_{1}:v=1\vee v=2$
\end_inset

, 
\begin_inset Formula $H_{2}:v=2\vee v=3$
\end_inset

, 
\begin_inset Formula $T:v=1$
\end_inset

.
 Now 
\begin_inset Formula $H_{1},H_{2}\not\Rightarrow T$
\end_inset

 because, as in the first example, the only possibility for 
\begin_inset Formula $v$
\end_inset

 to satisfy both 
\begin_inset Formula $H_{1}$
\end_inset

 and 
\begin_inset Formula $H_{2}$
\end_inset

 is 
\begin_inset Formula $v=2$
\end_inset

, and 
\begin_inset Formula $T$
\end_inset

 is not true in this case.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Example
\begin_inset Formula $H_{1}:v=1\vee v=2\vee v=3$
\end_inset

, 
\begin_inset Formula $H_{2}:v=2\vee v=3\vee v=4$
\end_inset

, 
\begin_inset Formula $T:v=2$
\end_inset

.
 Again 
\begin_inset Formula $H_{1},H_{2}\not\Rightarrow T$
\end_inset

 because there are two possibilities for 
\begin_inset Formula $v$
\end_inset

 to satisfy both 
\begin_inset Formula $H_{1}$
\end_inset

 and 
\begin_inset Formula $H_{2}$
\end_inset

: 
\begin_inset Formula $v=2$
\end_inset

 or 
\begin_inset Formula $v=3$
\end_inset

, and 
\begin_inset Formula $T$
\end_inset

 is true only in one case.
\begin_inset CommandInset label
LatexCommand label
name "(3)"

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Example
\begin_inset Formula $H_{1}:v=1\vee v=2\vee v=3$
\end_inset

, 
\begin_inset Formula $H_{2}:v=2\vee v=3\vee v=4$
\end_inset

, 
\begin_inset Formula $T:v=2\vee v=3$
\end_inset

.
 Now 
\begin_inset Formula $H_{1},H_{2}\Rightarrow T$
\end_inset

 because, as in the previous example, there are two possibilities for 
\begin_inset Formula $v$
\end_inset

 to satisfy both 
\begin_inset Formula $H_{1}$
\end_inset

 and 
\begin_inset Formula $H_{2}$
\end_inset

: 
\begin_inset Formula $v=2$
\end_inset

 or 
\begin_inset Formula $v=3$
\end_inset

, and 
\begin_inset Formula $T$
\end_inset

 is true in both cases.
\end_layout

\begin_layout Standard
Clearly, Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(3)"

\end_inset

 can be extended in a different way to have a valid logical consequence,
 namely as in
\end_layout

\begin_layout Example
\begin_inset Formula $H_{1}:v=1\vee v=2\vee v=3$
\end_inset

, 
\begin_inset Formula $H_{2}:v=2\vee v=3\vee v=4$
\end_inset

, 
\begin_inset Formula $H_{3}:v^{2}=4$
\end_inset

, 
\begin_inset Formula $T:v=2$
\end_inset

.
 Here 
\begin_inset Formula $H_{1},H_{2}\Rightarrow T$
\end_inset

 because the only way for 
\begin_inset Formula $v$
\end_inset

 to satisfy the hypotheses is 
\begin_inset Formula $v=2$
\end_inset

 only, and this implies 
\begin_inset Formula $T$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "(5)"

\end_inset

 In this example we could have written 
\begin_inset Formula $H_{3}:v=2\vee v=-2$
\end_inset

 as well, assuming that our working domain is 
\begin_inset Formula $\mathbb{R}$
\end_inset

.
\end_layout

\begin_layout Standard
Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(5)"

\end_inset

 suggests an algebraic way to formalize our statements.
 E.
\begin_inset space ~
\end_inset

g., hypotheses of Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(1)"

\end_inset

 can be rewritten into the following algebraic form: 
\begin_inset Formula $H_{1}:(v-1)\cdot(v-2)=0$
\end_inset

, 
\begin_inset Formula $H_{2}:(v-2)\cdot(v-3)=0$
\end_inset

.
 We will find it convenient to formalize the thesis into a similar form,
 too: 
\begin_inset Formula $T:v-2=0$
\end_inset

.
\end_layout

\begin_layout Standard
Gröbner basis computation algorithms as external black boxes offer efficient
 ways to compute solutions of (or more precisely, 
\begin_inset Quotes eld
\end_inset

manipulating on
\begin_inset Quotes erd
\end_inset

) equation systems with many variables and equations.
 It will be useful to turn a logical consequence decision question into
 an equation solvability question to make it possible to get automatic answers
 for questions in elementary geometry.
\end_layout

\begin_layout Standard
We will find useful to deny Definition
\begin_inset CommandInset ref
LatexCommand ref
reference "def-logcons"

\end_inset

 and introduce another concept:
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $\mathcal{Q}=(H_{1},H_{2},\ldots,H_{m};T)$
\end_inset

 be an ordered pair of some hypotheses and a thesis.
 We call 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 a 
\emph on
\bar under
question
\emph default
\bar default

\begin_inset Index idx
status open

\begin_layout Plain Layout
question
\end_layout

\end_inset

.
 If 
\begin_inset Formula $H_{1},H_{2},\ldots,H_{m}\not\Rightarrow T$
\end_inset

, then we call 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 a 
\emph on
\bar under
logical non-consequence
\emph default
\bar default

\begin_inset Index idx
status open

\begin_layout Plain Layout
non-consequence
\end_layout

\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $\mathcal{N}=(H_{1},H_{2},\ldots,H_{m};T)$
\end_inset

 be a logical non-consequence depending on 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{n}$
\end_inset

.
 Let 
\begin_inset Formula $v'_{1},v'_{2},\ldots,v'_{n}$
\end_inset

 such variables for which 
\begin_inset Formula $H_{1},H_{2},\ldots,H_{m}$
\end_inset

 are all true but 
\begin_inset Formula $T$
\end_inset

 is false.
 Then we call 
\begin_inset Formula $v'_{1},v'_{2},\ldots,v'_{n}$
\end_inset

 a 
\emph on
\bar under
counterexample
\begin_inset Index idx
status open

\begin_layout Plain Layout
counterexample
\end_layout

\end_inset


\emph default
\bar default
 for 
\begin_inset Formula $\mathcal{N}$
\end_inset

.
\end_layout

\begin_layout Example
In Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(3)"

\end_inset

 
\begin_inset Formula $v'=3$
\end_inset

 is a counterexample.
\end_layout

\begin_layout Subsubsection
Rewriting a question into an equation system
\end_layout

\begin_layout Standard
We need two ideas to convert a question into an equation system:
\end_layout

\begin_layout Itemize
we need to deny the thesis and
\end_layout

\begin_layout Itemize
add its denied form to the hypotheses.
\end_layout

\begin_layout Standard
The validity of this method is a simple result of the reasoning method 
\begin_inset Index idx
status open

\begin_layout Plain Layout
reductio ad absurdum
\end_layout

\end_inset


\emph on
reductio ad absurdum
\emph default
, namely
\end_layout

\begin_layout Theorem
Given a hypothesis 
\begin_inset Formula $H$
\end_inset

 and a thesis 
\begin_inset Formula $T$
\end_inset

, 
\begin_inset Formula 
\[
H\Rightarrow T
\]

\end_inset

 is valid if and only if 
\begin_inset Formula 
\[
H,\neg T\Rightarrow\mathcal{F}
\]

\end_inset

 (where 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathcal{F}$
\end_inset

 denotes the false statement).
\end_layout

\begin_layout Standard
In other words, we will prove a theorem by denying the thesis and get a
 contradiction.
\end_layout

\begin_layout Standard
To deny an equation, we use Rabinowitsch's trick
\begin_inset Index idx
status open

\begin_layout Plain Layout
Rabinowitsch's trick
\end_layout

\end_inset

 (
\begin_inset CommandInset citation
LatexCommand cite
key "Rabinowitsch1929"

\end_inset

):
\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $f\in\mathbb{R}$
\end_inset

.
 Then 
\begin_inset Formula $f\neq0$
\end_inset

 is valid if and only if there exists 
\begin_inset Formula $y\in\mathbb{R}$
\end_inset

 such that 
\begin_inset Formula $y\cdot f-1=0$
\end_inset

.
\end_layout

\begin_layout Proof
Clearly, if 
\begin_inset Formula $f\neq0$
\end_inset

, choosing 
\begin_inset Formula $y=1/f$
\end_inset

 we get 
\begin_inset Formula $y\cdot f-1=0$
\end_inset

.
 On the other hand, if 
\begin_inset Formula $f=0$
\end_inset

, 
\begin_inset Formula $y\cdot f-1=y\cdot0-1=0-1=-1\neq0$
\end_inset

 for arbitrary choice of 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Remark
We could have used any non-zero number instead of 
\begin_inset Formula $-1$
\end_inset

 here.
 Also we could use any number field instead of 
\begin_inset Formula $\mathbb{R}$
\end_inset

.
 Later it will be crucial to change 
\begin_inset Formula $\mathbb{R}$
\end_inset

 to 
\begin_inset Formula $\mathbb{C}$
\end_inset

 for all theorems and corollaries because our computations require an algebraica
lly closed field.
 For simplicity we used 
\begin_inset Formula $\mathbb{R}$
\end_inset

 here, but from now on we deal with 
\begin_inset Formula $\mathbb{C}$
\end_inset

.
\end_layout

\begin_layout Corollary
Let 
\begin_inset Formula $f(x)$
\end_inset

 be a function in one variable over 
\begin_inset Formula $\mathbb{C}$
\end_inset

.
 Then 
\begin_inset Formula $f(x)\neq0$
\end_inset

 is valid if and only if there exists 
\begin_inset Formula $y\in\mathbb{C}$
\end_inset

 such that 
\begin_inset Formula $y\cdot f(x)-1=0$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
In other words, the following set equation is valid:
\begin_inset Formula 
\[
\left\{ x\mid f(x)\neq0\right\} =\left\{ x\mid\exists y\mathrm{\,\, such\,\, that\,\,}y\cdot f(x)-1=0\right\} .
\]

\end_inset


\end_layout

\begin_layout Corollary
Given hypotheses 
\begin_inset Formula $H_{1},H_{2},\ldots,H_{m}$
\end_inset

 and a thesis 
\begin_inset Formula $T$
\end_inset

,
\begin_inset CommandInset label
LatexCommand label
name "cor:reductio-ad-absurdum"

\end_inset

 
\begin_inset Formula 
\[
H_{1},H_{2},\ldots,H_{m}\Rightarrow T
\]

\end_inset

 is valid if and only if 
\begin_inset Formula 
\[
H_{1},H_{2},\ldots,H_{m},\neg T\Rightarrow\emptyset.
\]

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Corollary
Let 
\begin_inset Formula $f(v_{1},v_{2},\ldots,v_{n})$
\end_inset

 be a function over 
\begin_inset Formula $\mathbb{C}^{n}$
\end_inset

.
 Then 
\begin_inset Formula $f(v_{1},v_{2},\ldots,v_{n})\neq0$
\end_inset

 is valid if and only if there exists 
\begin_inset Formula $v_{n+1}\in\mathbb{C}$
\end_inset

 such that 
\begin_inset Formula $v_{n+1}\cdot f(v_{1},v_{2},\ldots,v_{n})-1=0$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "cor:rabinowitsch"

\end_inset


\end_layout

\begin_layout Example
Now we can rewrite the algebraic form of Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(1)"

\end_inset

 to an equation system:
\begin_inset Formula 
\begin{align*}
(v_{1}-1)\cdot(v_{1}-2) & =0,\\
(v_{1}-2)\cdot(v_{1}-3) & =0,\\
v_{2}\cdot(v_{1}-2)-1 & =0
\end{align*}

\end_inset

which leads to contradiction, and thus it means that Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(1)"

\end_inset

 is indeed a logical consequence.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Example
The same technique for Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(3)"

\end_inset

 yields
\begin_inset CommandInset label
LatexCommand label
name "(3)-eqs"

\end_inset

 
\begin_inset Formula 
\begin{align}
(v_{1}-1)\cdot(v_{1}-2)\cdot(v_{1}-3) & =0,\nonumber \\
(v_{1}-2)\cdot(v_{1}-3)\cdot(v_{1}-4) & =0,\label{eq:(3)}\\
v_{2}\cdot(v_{1}-2)-1 & =0\nonumber 
\end{align}

\end_inset

which leads to the solution 
\begin_inset Formula $v_{1}=3$
\end_inset

, 
\begin_inset Formula $v_{2}=1$
\end_inset

, thus Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(3)"

\end_inset

 is indeed a logical non-consequence.
 Here 
\begin_inset Formula $v_{1}'=3$
\end_inset

 is a counterexample.
\end_layout

\begin_layout Standard
These corollaries will help us to build geometry theorems into algebraic
 equation systems.
 In the first part of the following sections, however, we will not deal
 with the underlying algorithms which can manipluate on our equation systems
 in the background.
 Basically we assume that the computation is outsourced to a black box,
 that can automatically manipulate on the equation system in a reasonable
 time: blackboxing a subproblem is a well known situation in mathematics.
\end_layout

\begin_layout Standard
As mentioned earlier, in our case we do not really need to solve any equation
 systems, but to decide 
\emph on
if there is a solution
\emph default
 or not.
 Thus we simply conclude a yes/no answer from the black box computation.
 Later we will learn that sometimes this approach can be too rude for certain
 geometry theorems.
\end_layout

\begin_layout Example
The following CAS program will decide solvability of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:(3)"

\end_inset

 by simply solving it in Singular:
\begin_inset CommandInset label
LatexCommand label
name "grobner-cas"

\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
ring R=0,(v1,v2),dp;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal I=(v1-1)*(v1-2)*(v1-3),(v1-2)*(v1-3)*(v1-4),v2*(v1-2)-1;
\end_layout

\begin_layout LyX-Code

\size footnotesize
groebner(I);
\end_layout

\begin_layout Standard
A similar piece of code in Giac:
\end_layout

\begin_layout LyX-Code

\size footnotesize
gbasis([(v1-1)*(v1-2)*(v1-3),(v1-2)*(v1-3)*(v1-4),v2*(v1-2)-1],[v1,v2])
\end_layout

\begin_layout Standard
The outputs are 
\end_layout

\begin_layout LyX-Code

\size footnotesize
_[1]=v2-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
_[2]=v1-3
\end_layout

\begin_layout Standard
and
\end_layout

\begin_layout LyX-Code

\size footnotesize
[v2-1,v1-3]
\end_layout

\end_deeper
\begin_layout Example
respectively, both are in harmony with Example
\begin_inset CommandInset ref
LatexCommand ref
reference "(3)-eqs"

\end_inset

.
 
\end_layout

\begin_layout Remark
Giac also has a more user friendly command to explicitly solve an equation
 system:
\end_layout

\begin_layout LyX-Code

\size footnotesize
solve([(v1-1)*(v1-2)*(v1-3),(v1-2)*(v1-3)*(v1-4),v2*(v1-2)-1],[v1,v2])
\end_layout

\begin_layout Standard
returns
\end_layout

\begin_layout LyX-Code

\size footnotesize
list[[3,1]]
\end_layout

\begin_layout Remark
Singular operates with polynomial rings
\begin_inset Index idx
status open

\begin_layout Plain Layout
ring
\end_layout

\end_inset

, e.
\begin_inset space ~
\end_inset

g.
\begin_inset space ~
\end_inset

it does the computations in such 
\begin_inset Quotes eld
\end_inset

worlds
\begin_inset Quotes erd
\end_inset

 where the operations 
\emph on
addition
\emph default
, 
\emph on
subtraction
\emph default
 and 
\emph on
multiplication
\emph default
 are valid for polynomial elements.
 In the program code 
\begin_inset Quotes eld
\end_inset


\family typewriter
0
\family default

\begin_inset Quotes erd
\end_inset

 means that the used coefficient constants are rationals numbers.
 
\begin_inset Quotes eld
\end_inset


\family typewriter
dp
\family default

\begin_inset Quotes erd
\end_inset

 is an option for the black box on how it should exactly order the monomials
 of a polynomial.
 This is not interesting here yet, but will be important later in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Interlude-1:-The"

\end_inset

.
 We will, however, not change this option (since it ensures the best result
 in speed), but set the variable ordering instead to get the best fitting
 output.
\end_layout

\begin_layout Remark
We do not use the mathematical notion of 
\emph on
ring
\emph default
 and 
\emph on
ideal
\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
ideal
\end_layout

\end_inset


\emph default
 in this PhD thesis, to emphasize that our general approach can also be
 discussed without these definitions, at least to demonstrate the general
 concept.
 Hereafter we call 
\emph on
ideal theory
\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
ideal!-- theory
\end_layout

\end_inset


\emph default
 the part of mathematics which deals with those notions which are not discussed
 in this PhD thesis, but important to get a deeper understanding of solving
 polynomial equation systems.
 Since Singular deals with ideals of polynomial rings as terms for user
 input, here we still give a short introduction.
 
\end_layout

\begin_layout Remark
Roughly speaking, an 
\emph on
ideal
\emph default
 is set of all polynomials which takes on the value zero in case a given
 equation system holds.
 Here in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "grobner-cas"

\end_inset

 the ideal 
\begin_inset Formula $I$
\end_inset

 contains the basis polynomials 
\begin_inset Formula $p_{1}=(v_{1}-1)\cdot(v_{1}-2)\cdot(v_{1}-3)$
\end_inset

, 
\begin_inset Formula $p_{2}=(v_{1}-2)\cdot(v_{1}-3)\cdot(v_{1}-4)$
\end_inset

 and 
\begin_inset Formula $p_{3}=v_{2}\cdot(v_{1}-2)-1$
\end_inset

, and all their possible polynomial combinations 
\begin_inset Formula $q_{1}p_{1}+q_{2}p_{2}+q_{3}p_{3}$
\end_inset

 where 
\begin_inset Formula $q_{1},q_{2}$
\end_inset

 and 
\begin_inset Formula $q_{3}$
\end_inset

 are polynomials in variables 
\begin_inset Formula $v_{1}$
\end_inset

 and 
\begin_inset Formula $v_{2}$
\end_inset

 with rational coefficients.
 It is easy to see that 
\begin_inset Formula $I$
\end_inset

 can also be written as polynomial combinations of 
\begin_inset Formula $p'_{1}=v_{2}-1$
\end_inset

 and 
\begin_inset Formula $p'_{2}=v_{1}-3$
\end_inset

 since 
\begin_inset Formula $p_{1}=0\cdot p'_{1}+(v_{1}-1)(v_{1}-2)\cdot p'_{2}$
\end_inset

, 
\begin_inset Formula $p_{2}=0\cdot p'_{1}+(v_{1}-2)(v_{1}-4)\cdot p'_{2}$
\end_inset

 and 
\begin_inset Formula $p_{3}=1\cdot p'_{1}+v_{2}\cdot p'_{2}$
\end_inset

.
 Now we can say that we found another basis for 
\begin_inset Formula $I$
\end_inset

 than 
\begin_inset Formula $B_{1}=\{p_{1},p_{2},p_{3}\}$
\end_inset

, namely 
\begin_inset Formula $B_{2}=\{p'_{1},p'_{2}\}$
\end_inset

, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the equation system 
\begin_inset Formula $\{p'_{1}=0,p'_{2}=0\}$
\end_inset

 is equivalent with the original system.
 Clearly, if the equation system is contradictory, such a basis for 
\begin_inset Formula $I$
\end_inset

 can also be 
\begin_inset Formula $\{1\}$
\end_inset

 since it describes the 
\begin_inset Formula $1=0$
\end_inset

 equation as an equivalent equation system.
 The 
\emph on
groebner
\emph default
 command in Singular (and 
\emph on
gbasis
\emph default
 in Giac) will always compute the 
\begin_inset Formula $\{1\}$
\end_inset

 basis in such cases, and this will be a sufficient output for us to decide
 a geometry question, at least for the moment.
\end_layout

\begin_layout Remark
Nevertheless, we need to give a definition at least for the equivalence
 of equation systems:
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $S_{1}$
\end_inset

 and 
\begin_inset Formula $S_{2}$
\end_inset

 be polynomial equation systems with complex coefficients and variables
 
\begin_inset Formula $v_{1},\ldots,v_{n}$
\end_inset

.
 We call 
\begin_inset Formula $S_{1}$
\end_inset

 and 
\begin_inset Formula $S_{2}$
\end_inset

 
\bar under

\begin_inset Index idx
status open

\begin_layout Plain Layout
equivalent equation systems
\end_layout

\end_inset

equivalent equation systems
\bar default
 if the solution sets 
\begin_inset Formula $V_{1}\subseteq\mathbb{C}^{n}$
\end_inset

 and 
\begin_inset Formula $V_{2}\subseteq\mathbb{C}^{n}$
\end_inset

, respectively, are equal.
\end_layout

\begin_layout Remark
Here complex coefficients can be changed to rational numbers in our particular
 topic about automated deduction in geometry.
 Also we can use integers instead of rationals without loss of generality.
 In the next sections we will always use integer coefficients for simplicity.
 (This has also been fruitful in low level implementation in GeoGebra as
 well.) Later, in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Using-transcendental-constants"

\end_inset

 we will extend the rational coefficients to a superset of 
\begin_inset Formula $\mathbb{Q}$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Remark
Precisely speaking, our definition for the equation system equivalence is
 not the same as in ideal theory since we cannot explicitly handle multiple
 roots.
 For example, the systems 
\begin_inset Formula $S_{1}=\{v=0\}$
\end_inset

 and 
\begin_inset Formula $S_{2}=\{v^{2}=0\}$
\end_inset

 are equivalent here, but not in ideal theory.
 The notion of equation system equivalence is, actually, more strict in
 ideal theory.
 For the geometry theorem application, however, multiplicity is not important
 (and studying ideal theory there may be a need to handle this situation
 by computing the 
\emph on
radical
\emph default
 of an ideal, actually).
 On the other hand, both Singular and Giac assume the ideal theory definition,
 thus they will return their output that way if we ask for an equivalent
 equation system of the input.
 But since our definition is more permissive, we will still get an equivalent
 system (according to our definition) from both CAS, so this is not an issue
 anyway.
\end_layout

\begin_layout Subsection
Structure of geometry theorems
\end_layout

\begin_layout Example
The 
\emph on
midline theorem
\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
theorem!--, midline
\end_layout

\end_inset


\emph default
 claims that cutting along the midline of a triangle creates a segment that
 is parallel to the base and half as long.
 In this example we will deal with the first part of the thesis, namely
 that a midline itself is parallel to the base.
\begin_inset CommandInset label
LatexCommand label
name "The-midline-theorem"

\end_inset


\end_layout

\begin_layout Example
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ProveDetails/triangle-midsegment1.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Midline theorem
\begin_inset CommandInset label
LatexCommand label
name "fig-midline"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-midline"

\end_inset

 we set up three 
\emph on

\begin_inset Index idx
status open

\begin_layout Plain Layout
free point
\end_layout

\end_inset

free points
\emph default
 with arbitrary coordinates: 
\begin_inset Formula $A(v_{1},v_{2})$
\end_inset

, 
\begin_inset Formula $B(v_{3},v_{4})$
\end_inset

 and 
\begin_inset Formula $C(v_{5},v_{6})$
\end_inset

.
 The midpoints of segments 
\begin_inset Formula $AB$
\end_inset

 and 
\begin_inset Formula $AC$
\end_inset

 will be denoted by 
\begin_inset Formula $D(v_{7},v_{8})$
\end_inset

 and 
\begin_inset Formula $E(v_{9},v_{10})$
\end_inset

.
 By definition 
\begin_inset Formula $v_{7}=\frac{v_{1}+v_{3}}{2}$
\end_inset

, 
\begin_inset Formula $v_{8}=\frac{v_{2}+v_{4}}{2}$
\end_inset

, 
\begin_inset Formula $v_{9}=\frac{v_{1}+v_{5}}{2}$
\end_inset

 and 
\begin_inset Formula $v_{10}=\frac{v_{2}+v_{6}}{2}$
\end_inset

.
 These equations
\begin_inset Index idx
status open

\begin_layout Plain Layout
equations!--, midpoint
\end_layout

\end_inset

 can be written as
\begin_inset Formula 
\begin{align}
2v_{7}-v_{3}-v_{1} & =0,\label{eq:midline-def1}\\
2v_{8}-v_{4}-v_{2} & =0,\label{eq:midline-def2}\\
2v_{9}-v_{5}-v_{1} & =0,\label{eq:midline-def3}\\
2v_{10}-v_{6}-v_{2} & =0.\label{eq:midline-def4}
\end{align}

\end_inset


\end_layout

\begin_layout Example
Here we preferred the equations in such a form where there are no fractions
 and right hand side of the equation, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

we simplified the equations to a polynomial equation with integer coefficients
 which is reduced to zero.
\end_layout

\begin_layout Example
We also need to check if 
\begin_inset Formula $DE$
\end_inset

 is parallel to 
\begin_inset Formula $BC$
\end_inset

 by using an analytical equation.
 It can be easily proven that a suitable equation is
\begin_inset Index idx
status open

\begin_layout Plain Layout
equation!--, parallelism
\end_layout

\end_inset

 
\begin_inset Formula 
\[
(v_{7}-v_{9})\cdot(v_{4}-v_{6})-(v_{8}-v_{10})\cdot(v_{3}-v_{5})=0.
\]

\end_inset


\end_layout

\begin_layout Example
Now by applying Corollaries
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:reductio-ad-absurdum"

\end_inset

 and
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:rabinowitsch"

\end_inset

 we need to add an extra equation to express the algebraic form of checking
 parallelism:
\begin_inset Formula 
\[
v_{11}\cdot((v_{7}-v_{9})\cdot(v_{4}-v_{6})-(v_{8}-v_{10})\cdot(v_{3}-v_{5}))-1=0,
\]

\end_inset


\end_layout

\begin_layout Example
or, in equivalent form as a polynomial equation,
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\begin{align}
-1-v_{11}v_{9}v_{6}+v_{11}v_{7}v_{6}+v_{11}v_{10}v_{5}-v_{11}v_{8}v_{5}\nonumber \\
-v_{11}v_{9}v_{4}+v_{11}v_{7}v_{4}-v_{11}v_{10}v_{3}+v_{11}v_{8}v_{3} & =0.\label{eq:midline-th}
\end{align}

\end_inset


\end_layout

\begin_layout Example
Now the numbered equations in this section lead to a contradictory equation
 system which means that the first part of the midline theorem is true.
 This can be checked by expressing variables 
\begin_inset Formula $v_{7}$
\end_inset

, 
\begin_inset Formula $v_{8}$
\end_inset

, 
\begin_inset Formula $v_{9}$
\end_inset

 and 
\begin_inset Formula $v_{10}$
\end_inset

 in the first four numbered equations and plugging them into the analytical
 equation---we will get 
\begin_inset Formula $0=0$
\end_inset

, that is, in the final numbered equation 
\begin_inset Formula $-1=0$
\end_inset

 holds.
\end_layout

\begin_layout Remark
We will call the variables of the free points 
\emph on
independent
\emph default

\begin_inset Index idx
status open

\begin_layout Plain Layout
variable!--, independent
\end_layout

\end_inset

, and the other ones 
\emph on
dependent
\emph default

\begin_inset Index idx
status open

\begin_layout Plain Layout
variable!--, dependent
\end_layout

\end_inset

.
 Each new point introduces two new variables, and the final thesis introduces
 an extra variable.
\end_layout

\begin_layout Remark
Practically, the number of variables can be reduced by two if we put one
 of the free points into a fix place on the Euclidean plane.
 Usually point 
\begin_inset Formula $A$
\end_inset

 (i.
\begin_inset space ~
\end_inset

e., the first user defined free point) is fixed, namely to 
\begin_inset Formula $(0,0)$
\end_inset

 to ease some computations.
 In many cases another point, usually 
\begin_inset Formula $B$
\end_inset

, can also be fixed without loss of generality since elementary geometry
 theorems are invariant of similarity.
 We usually fix 
\begin_inset Formula $B$
\end_inset

 to 
\begin_inset Formula $(0,1)$
\end_inset

.
 Later in Remark
\begin_inset CommandInset ref
LatexCommand ref
reference "B(1,1)"

\end_inset

 we will see that this can result in losing important pieces of information
 about sufficient or necessary conditions for the statement.
 Thus we will not fix the second point for the 
\series bold
ProveDetails
\series default
 command (even if this could save significant amount of computation time
 for certain theorems), but do that for the 
\series bold
Prove
\series default
 command where we do not need extra information exactly when the thesis
 true is.
\end_layout

\begin_layout Remark
This example also shows some details of the possible complexity of the geometry
 problems in general.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Bardet02"

\end_inset

 mentions that solving an equation system in 
\begin_inset Formula $n$
\end_inset

 variables can be done in 
\begin_inset Formula $2^{2^{O(n)}}$
\end_inset

 steps in general, but for specific systems this estimation is too large.
 Nevertheless, there are sample 
\begin_inset Quotes eld
\end_inset

badly behaving
\begin_inset Quotes erd
\end_inset

 equation systems which cannot be solved in less steps than the general
 case.
\end_layout

\begin_layout Remark
All of these considerations mean that by setting up the equation system
 for the black box to decide solvability, we must be careful to keep the
 number of variables as low as possible, and sometimes it may be required
 to re-formalize the problem to a different form to help the black box to
 give the answer fast enough.
\end_layout

\begin_layout Subsection
Elimination instead of equation solving
\begin_inset CommandInset label
LatexCommand label
name "sub:Elimination-instead-of"

\end_inset


\end_layout

\begin_layout Standard
In some cases we cannot get a simple contradiction from the equation system.
 The following example shows a case which is easy to observe.
\end_layout

\begin_layout Example
As we did in 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Proving-with-computer"

\end_inset

 in details as end users, now we investigate the parallelogram theorem from
 our mathematical approach once more (
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig-parallelogram-diagonals"

\end_inset

).
\begin_inset CommandInset label
LatexCommand label
name "parallelogram"

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ProveDetails/parallelogram-diagonals.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Diagonals of a parallelogram bisect each other
\begin_inset CommandInset label
LatexCommand label
name "fig-parallelogram-diagonals"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here we set up three free points again, 
\begin_inset Formula $A(v_{1},v_{2})$
\end_inset

, 
\begin_inset Formula $B(v_{3},v_{4})$
\end_inset

 and 
\begin_inset Formula $C(v_{5},v_{6})$
\end_inset

.
 Then the parallel lines with 
\begin_inset Formula $AB$
\end_inset

 and 
\begin_inset Formula $BC$
\end_inset

, going through 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $A$
\end_inset

, respectively, will intersect each other in the dependent point 
\begin_inset Formula $D$
\end_inset

.
 One can find that the parallel lines are constructed by defining two technical
 points, namely 
\begin_inset Formula $T_{1}(v_{7},v_{8})$
\end_inset

 and 
\begin_inset Formula $T_{2}(v_{9},v_{10})$
\end_inset

 which are simple vector translations: 
\begin_inset Formula $\overrightarrow{CT_{1}}=\overrightarrow{BA}$
\end_inset

 and 
\begin_inset Formula $\overrightarrow{AT_{2}}=\overrightarrow{BC}$
\end_inset

.
 Surprisingly, these equations yield 
\begin_inset Formula $T_{1}=T_{2}=D$
\end_inset

 in this special case, but in general GeoGebra may not realize any correlations
 after automatically creating the equations.
 Also in this case 
\begin_inset Formula $D$
\end_inset

 is just defined by lying on both parallels, claiming that both 
\begin_inset Formula $A,\, T_{1},\, D$
\end_inset

 and 
\begin_inset Formula $A,\, T_{2},\, D$
\end_inset

 are collinear.
 This is how the defining equations for 
\begin_inset Formula $D(v_{11},v_{12})$
\end_inset

 have been created.
\end_layout

\begin_layout Remark
\begin_inset CommandInset label
LatexCommand label
name "For-checking-collinearity,"

\end_inset

For checking collinearity
\begin_inset Index idx
status open

\begin_layout Plain Layout
equation!--, collinearity
\end_layout

\end_inset

, we simply used that the area of the triangle with coordinates 
\begin_inset Formula $(a,b)$
\end_inset

, 
\begin_inset Formula $(c,d)$
\end_inset

 and 
\begin_inset Formula $(e,f)$
\end_inset

 is
\begin_inset Formula 
\[
\frac{\left|\begin{array}{ccc}
a & b & 1\\
c & d & 1\\
e & f & 1
\end{array}\right|}{2}
\]

\end_inset

which is zero if and only if 
\begin_inset Formula $ad+be+cf-af-bc-de=0$
\end_inset

.
 Obviously, the area of a triangle is zero if and only if the triangle is
 degenerate, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

its vertices are collinear.
\end_layout

\begin_layout Standard
The same type collinearities can be set up for dependent point 
\begin_inset Formula $E(v_{13},v_{14})$
\end_inset

: points 
\begin_inset Formula $B,\, E,\, D$
\end_inset

 and 
\begin_inset Formula $A,\, E,\, C$
\end_inset

 are collinear since the definition of 
\begin_inset Formula $E$
\end_inset

 is being the intersection of 
\begin_inset Formula $BD$
\end_inset

 and 
\begin_inset Formula $AC$
\end_inset

.
 Finally, we can set up two more equations to define the coordinates for
 dependent point 
\begin_inset Formula $F(v_{15},v_{16})$
\end_inset

 which is a midpoint of 
\begin_inset Formula $AC$
\end_inset

.
\end_layout

\begin_layout Standard
Now we are ready to formalize the thesis.
 We have two possibilites to tell analytically that 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 are the same points:
\end_layout

\begin_layout Enumerate
We claim that the Cartesian distance of 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 is zero.
\end_layout

\begin_layout Enumerate
We claim that the Cartesian coordinates of 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 are the same, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset


\begin_inset Formula $v_{13}=v_{15}$
\end_inset

 and 
\begin_inset Formula $v_{14}=v_{16}$
\end_inset

.
\end_layout

\begin_layout Standard
In the first case our analytical equation
\begin_inset Index idx
status open

\begin_layout Plain Layout
equation!--, point equality
\end_layout

\end_inset

 would be 
\begin_inset Formula 
\begin{equation}
(v_{13}-v_{15})^{2}+(v_{14}-v_{16})^{2}=0,\label{eq:cartesian}
\end{equation}

\end_inset

but in the second case we need to show both 
\begin_inset Formula $v_{13}-v_{15}=0$
\end_inset

 and 
\begin_inset Formula $v_{14}-v_{16}=0$
\end_inset

.
 The first way seems easier, but unfortunately it may introduce a black
 box related problem: all equation solvers based on Gröbner bases use algebraica
lly closed fields in the background computations.
 Theoretically there is no possibility to stay in 
\begin_inset Formula $\mathbb{R}$
\end_inset

 during the algorithm; typically the solutions will be given in 
\begin_inset Formula $\mathbb{C}$
\end_inset

 in our case.
 This means that even if there is no way to solve 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:cartesian"

\end_inset

 with real coordinates on the Euclidean plane, there may be complex value
 solutions for 
\begin_inset Formula $v_{13},\, v_{14},\, v_{15}$
\end_inset

 and 
\begin_inset Formula $v_{16}$
\end_inset

 which have, of course, no geometrical meaning, but the black box still
 accepts them because of the algebraic possibility.
 (E.
\begin_inset space ~
\end_inset

g., since 
\begin_inset Formula $i^{2}+1=0$
\end_inset

, for example 
\begin_inset Formula $v_{13}=i$
\end_inset

, 
\begin_inset Formula $v_{14}=1$
\end_inset

, 
\begin_inset Formula $v_{15}=v_{16}=0$
\end_inset

 would satisfy 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:cartesian"

\end_inset

, but without any meaning in the Euclidean geometry.)
\end_layout

\begin_layout Standard
That is why we will prefer the second way to describe point equality.
 This may require, however, solving two equation systems, but finally we
 can be sure that the result is acceptable from the geometrical point of
 view.
 Another possible way is to assemble the two theses into one (see Remark
\begin_inset CommandInset ref
LatexCommand ref
reference "We-can-also"

\end_inset

 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "We-can-also"

\end_inset

 for more details on this).
\end_layout

\begin_layout Standard
Now we have the following equation systems to solve:
\begin_inset Formula 
\begin{align}
v_{7}-v_{5}-v_{3}+v_{1} & =0,\label{eq:par1}\\
v_{8}-v_{6}-v_{4}+v_{2} & =0,\nonumber \\
v_{9}+v_{5}-v_{3}-v_{1} & =0,\nonumber \\
v_{10}+v_{6}-v_{4}-v_{2} & =0,\nonumber \\
v_{11}v_{8}-v_{12}v_{7}-v_{11}v_{6}+v_{7}v_{6}+v_{12}v_{5}-v_{8}v_{5} & =0,\label{eq:par12}\\
v_{12}v_{10}-v_{12}v_{9}-v_{11}v_{2}+v_{9}v_{2}+v_{12}v_{1}-v_{10}v_{1} & =0,\label{eq:par13}\\
-v_{13}v_{6}+v_{14}v_{5}+v_{13}v_{2}-v_{5}v_{2}-v_{14}v_{1}+v_{6}v_{1} & =0,\nonumber \\
-v_{13}v_{12}+v_{14}v_{11}+v_{13}v_{4}-v_{11}v_{4}-v_{14}v_{3}+v_{12}v_{3} & =0,\nonumber \\
2v_{15}-v_{5}-v_{1} & =0,\nonumber \\
2v_{16}-v_{6}-v_{2} & =0,\nonumber \\
-1-v_{17}v_{15}+v_{17}v_{13} & =0;\nonumber 
\end{align}

\end_inset

and
\begin_inset Formula 
\begin{align*}
v_{7}-v_{5}-v_{3}+v_{1} & =0,\\
v_{8}-v_{6}-v_{4}+v_{2} & =0,\\
v_{9}+v_{5}-v_{3}-v_{1} & =0,\\
v_{10}+v_{6}-v_{4}-v_{2} & =0,\\
v_{11}v_{8}-v_{12}v_{7}-v_{11}v_{6}+v_{7}v_{6}+v_{12}v_{5}-v_{8}v_{5} & =0,\\
v_{12}v_{10}-v_{12}v_{9}-v_{11}v_{2}+v_{9}v_{2}+v_{12}v_{1}-v_{10}v_{1} & =0,\\
-v_{13}v_{6}+v_{14}v_{5}+v_{13}v_{2}-v_{5}v_{2}-v_{14}v_{1}+v_{6}v_{1} & =0,\\
-v_{13}v_{12}+v_{14}v_{11}+v_{13}v_{4}-v_{11}v_{4}-v_{14}v_{3}+v_{12}v_{3} & =0,\\
2v_{15}-v_{5}-v_{1} & =0,\\
2v_{16}-v_{6}-v_{2} & =0,\\
-1-v_{18}v_{16}+v_{18}v_{14} & =0.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Both equation systems have solutions which means that the thesis is not
 true in all cases.
 In other words, there are some positions of the parallelogram when points
 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 differ.
\end_layout

\end_deeper
\begin_layout Standard
Now we will introduce an improved technique to handle such situations: Instead
 of getting a yes/no answer from the black blox, we ask it to eliminate
 the dependent variables from the equation system, and return with an equivalent
 system which contains only independent variables.
 Basically, such a request needs similar computations in the background,
 namely computing Gröbner bases again, but here we may need to specify some
 ordering of the independent variables.
 In general, different orderings may give different (but equivalent) equation
 systems.
\end_layout

\begin_layout Standard
Here we explain the basic idea of this elimination technique:
\end_layout

\begin_layout Enumerate
Obviously, the dependent figure variables (here 
\begin_inset Formula $v_{7},v_{8},\ldots,v_{16}$
\end_inset

) can be expressed by the free variables (here 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{6}$
\end_inset

) because of the definitions of the geometrical construction steps, as usual
 in analytical geometry.
 For example in the first system 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:par1"

\end_inset

 yields 
\begin_inset Formula $v_{7}=-v_{1}+v_{3}+v_{5}$
\end_inset

, and similar simple results can be obtained for 
\begin_inset Formula $v_{8},v_{9},v_{10}$
\end_inset

, and after substituting these results into 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:par12"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:par13"

\end_inset

 we will get two parametric equations with variables 
\begin_inset Formula $v_{11}$
\end_inset

 and 
\begin_inset Formula $v_{12}$
\end_inset

 and parameters 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{6}$
\end_inset

.
 This system can be solved then: 
\begin_inset Formula $v_{11}=p_{11}/q_{11}$
\end_inset

 where 
\begin_inset Formula $p_{11}=-v_{1}^{2}v_{4}+v_{1}^{2}v_{6}+v_{1}v_{2}v_{3}-v_{1}v_{2}v_{5}+v_{1}v_{2}v_{6}+v_{1}v_{3}v_{4}-2v_{1}v_{3}v_{6}+v_{1}v_{4}v_{6}+v_{1}v_{5}v_{6}-v_{1}v_{6}^{2}-v_{2}^{2}v_{5}-v_{2}v_{3}^{2}+2v_{2}v_{3}v_{5}-v_{2}v_{3}v_{6}-v_{2}v_{5}^{2}+$
\end_inset


\begin_inset Formula $v_{2}v_{5}v_{6}+v_{3}^{2}v_{6}-v_{3}v_{4}v_{5}-v_{3}v_{4}v_{6}-v_{3}v_{5}v_{6}+v_{3}v_{6}^{2}+v_{4}^{2}v_{5}+v_{4}v_{5}^{2}-v_{4}v_{5}v_{6}$
\end_inset

 and 
\begin_inset Formula $q_{11}=v_{1}v_{2}-v_{2}^{2}-v_{2}v_{5}+v_{2}v_{6}-v_{3}v_{4}+v_{4}^{2}+v_{4}v_{5}-v_{4}v_{6}$
\end_inset

, 
\begin_inset Formula $v_{12}=p_{12}/q_{12}$
\end_inset

 where 
\begin_inset Formula $p_{12}=-v_{1}v_{2}v_{4}+2v_{1}v_{2}v_{6}+v_{1}v_{4}^{2}-v_{1}v_{4}v_{6}+v_{2}^{2}v_{3}-2v_{2}^{2}v_{5}-v_{2}v_{3}v_{4}-v_{2}v_{3}v_{6}+2v_{2}v_{4}v_{5}$
\end_inset

 and 
\begin_inset Formula $q_{12}=q_{11}$
\end_inset

.
 Similarly, 
\begin_inset Formula $v_{13},v_{14},v_{15},v_{16}$
\end_inset

 can also be expressed.
 We can provide an acceptable justification for this by mentioning the construct
ive definition of the geometrical figure, and thus the equations as well.
 
\begin_inset Foot
status open

\begin_layout Plain Layout
Here we omit the general justification.
 Some more details are discussed in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Interlude-2:-Usability"

\end_inset

 without being rigorous.
\end_layout

\end_inset

 Finally, 
\begin_inset Formula $v_{17}$
\end_inset

 (and also 
\begin_inset Formula $v_{18}$
\end_inset

) are linear equations and therefore these last variables can also be expressed
 by the free variables.
\begin_inset CommandInset label
LatexCommand label
name "enu:Obviously,-the-dependent"

\end_inset


\end_layout

\begin_layout Enumerate
During the elimination steps there may be extra equations occurring due
 to possible exotic positions of some points.
 Here point 
\begin_inset Formula $E$
\end_inset

 is sometimes not explicitly defined since it is an intersection of two
 lines, but what happens if these two lines are actually the same? Geometrically
 in this case 
\begin_inset Formula $(v_{13},v_{14})$
\end_inset

 is not one point, but a line, thus we need to add an equation to explain
 the constrained relationship between 
\begin_inset Formula $v_{13}$
\end_inset

 and 
\begin_inset Formula $v_{14}$
\end_inset

.
 After expressing both 
\begin_inset Formula $v_{13}$
\end_inset

 and 
\begin_inset Formula $v_{14}$
\end_inset

 by the free variables, geometrically we will have to get a constraint between
 points 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 to be collinear as this constrained relationship.
 Practically speaking, we want to force showing a contradiction, but the
 equation system like an organism wants to find an excuse (a counterexample),
 and simplifying the whole in the free variables only, the natural result
 is to get a collinearity equation of 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 as the equivalent equation system.
\end_layout

\begin_layout Standard
The mini-example in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:centroid"

\end_inset

 explains the situation even more.
 Let us consider a special case of the theorem claiming the medians of a
 triangle are concurrent.
 Now the vertices of the triangle are 
\begin_inset Formula $(0,0)$
\end_inset

, 
\begin_inset Formula $(6,0)$
\end_inset

 and 
\begin_inset Formula $(0,6v)$
\end_inset

.
 Clearly, midpoints of the segments are 
\begin_inset Formula $(3,0)$
\end_inset

, 
\begin_inset Formula $(0,3v)$
\end_inset

 and 
\begin_inset Formula $(3,3v)$
\end_inset

.
 Now by using the collinearity equation for 
\begin_inset Formula $(0,6v)$
\end_inset

, 
\begin_inset Formula $(x,y)$
\end_inset

 and 
\begin_inset Formula $(3,0)$
\end_inset

, and also for 
\begin_inset Formula $(0,0)$
\end_inset

, 
\begin_inset Formula $(x,y)$
\end_inset

 and 
\begin_inset Formula $(3,3v)$
\end_inset

 we get equations 
\begin_inset Formula $18v-6vx-3y=0$
\end_inset

 and 
\begin_inset Formula $3xv-3y=0$
\end_inset

; we can also get similar equations for 
\begin_inset Formula $(0,3v)$
\end_inset

, 
\begin_inset Formula $(x',y')$
\end_inset

 and 
\begin_inset Formula $(6,0)$
\end_inset

, and also for 
\begin_inset Formula $(0,0)$
\end_inset

, 
\begin_inset Formula $(x',y')$
\end_inset

 and 
\begin_inset Formula $(3,3v)$
\end_inset

: 
\begin_inset Formula $18v-3vx'-6y'=0$
\end_inset

 and 
\begin_inset Formula $3x'v-3y'=0$
\end_inset

 (4 equations).
 Now we want to investigate two cases: if 
\begin_inset Formula $v\neq0$
\end_inset

, then 
\begin_inset Formula $x=x'=y/v=y'/v$
\end_inset

 and 
\begin_inset Formula $y=y'=2v$
\end_inset

 since 
\begin_inset Formula $18v-6v\cdot y/v-3y=18v-9y=0$
\end_inset

 and 
\begin_inset Formula $18v-3v\cdot y'/v-6y'=18v-9y'$
\end_inset

, thus also 
\begin_inset Formula $x=x'=2$
\end_inset

.
 But if 
\begin_inset Formula $v=0$
\end_inset

, both 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $x'$
\end_inset

 can be arbitrary.
 Now if we want to prove, for example, that 
\begin_inset Formula $x=x'$
\end_inset

 (as a necessary step to prove 
\begin_inset Formula $(x,y)=(x',y')$
\end_inset

 by equality of coordinates), another equation 
\begin_inset Formula $z(x-x')-1=0$
\end_inset

 (the 5th equation) is needed for the negated thesis.
 Of course, when assuming 
\begin_inset Formula $v\neq0$
\end_inset

 there is indeed no solution of this equation system, but when we want to
 substitute our 5 equations with an equivalent system by using only variable
 
\begin_inset Formula $v$
\end_inset

, it is indeed the 
\begin_inset Formula $v=0$
\end_inset

 
\begin_inset Quotes eld
\end_inset

system
\begin_inset Quotes erd
\end_inset

 (consisting of 1 equation): this system has a solution exactly when the
 original system (consisting of 5 equations) is solvable.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename centroid06.pdf
	lyxscale 140
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Mini-example: possible need for extra equations on elimination
\begin_inset CommandInset label
LatexCommand label
name "fig:centroid"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Remark
Division by 
\begin_inset Formula $v$
\end_inset

 shows the necessity for adding an extra equation after eliminating the
 appropriate variable.
 In fact, above the same technical issue was present when a division was
 required by 
\begin_inset Formula $q_{11}$
\end_inset

 (since 
\begin_inset Formula $v_{11}=p_{11}/q_{11},$
\end_inset

 see above).
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Remark
As mentioned in Remark
\begin_inset CommandInset ref
LatexCommand ref
reference "For-checking-collinearity,"

\end_inset

, we can also 
\begin_inset CommandInset label
LatexCommand label
name "We-can-also"

\end_inset

 assemble more theses into one.
 In the mini-example in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:centroid"

\end_inset

 we prefer to prove 
\begin_inset Formula $x=x'$
\end_inset

 and 
\begin_inset Formula $y=y'$
\end_inset

 at the same time.
 Now, by using Rabinowitsch's trick twice, 
\begin_inset Formula 
\begin{align*}
\neg(x=x' & \hspace{4em}\wedge & y=y') &  & \Leftrightarrow\\
\neg(x=x') & \hspace{4em}\vee & \neg(y=y') &  & \Leftrightarrow\\
\neg(x-x'=0) & \hspace{4em}\vee & \neg(y-y'=0) &  & \Leftrightarrow\\
x-x'\neq0 & \hspace{4em}\vee & y-y'\neq0 &  & \Leftrightarrow\\
z(x-x')-1=0 & \hspace{4em}\vee & z'(y-y')-1=0 &  & \Leftrightarrow\\
(z(x-x')-1) & \hspace{4em}\,\cdot & (z'(y-y')-1) & \,\,\,=0,
\end{align*}

\end_inset

that is, it is possible to construct just one negated equation for the two
 theses.
 Also actually 
\begin_inset Formula $z'$
\end_inset

 must not necessarily be different from 
\begin_inset Formula $z$
\end_inset

 (because it is enough to find one counterexample either for 
\begin_inset Formula $x\neq x'$
\end_inset

 or 
\begin_inset Formula $y\neq y'$
\end_inset

), so we do not need an extra variable, however the equation may be more
 complicated than having two equations (for two systems, as in Remark
\begin_inset CommandInset ref
LatexCommand ref
reference "For-checking-collinearity,"

\end_inset

).
 See Appendix of 
\begin_inset CommandInset citation
LatexCommand cite
key "tomas-discovery2"

\end_inset

 (Proposition 6 and Corollary 2) for a generalization.
\end_layout

\begin_layout Standard
The clear advantage of elimination instead of simple equation solving is
 that we may have three kinds of answers (not only two):
\end_layout

\begin_layout Enumerate
The equation system is contradictory, we simply get 
\begin_inset Formula $1=0$
\end_inset

 as the equivalent system.
 In this case the thesis is a logical consequence of the hypotheses: the
 geometry theorem is always true, independently from the position of the
 free points.
\end_layout

\begin_layout Enumerate
The equation system has a solution, and there is an equivalent equation
 system (consisting at least of one equation which is not 
\begin_inset Formula $0=0$
\end_inset

) being expressable by the independent variables.
 In this case the thesis is a logical consequence of the hypotheses, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the theorem is true, but only under certain conditions.
 If we can satisfy all equations in the equivalent system, then we found
 a counterexample for the theorem which means if we put the free points
 into such positions as the counterexample suggests, then the thesis will
 fail.
\end_layout

\begin_layout Enumerate
The equation system has a solution, but there is no extra equation generated
 during the elimination.
 Here the thesis is not a logical consequence of the hypotheses, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the theorem fails, simply because all of the free variables can be arbitrary
 chosen to get a counterexample.
 (In fact the equivalent system here is the 
\begin_inset Formula $0=0$
\end_inset

 system.)
\end_layout

\begin_layout Standard
By defining the variable ordering to 
\begin_inset Formula $v_{1},v_{2},v_{3},v_{4},v_{5},v_{6}$
\end_inset

 for both questions, we get the following equivalent system in both cases:
\begin_inset Formula 
\[
-v_{5}v_{4}+v_{5}v_{2}+v_{4}v_{1}-v_{2}v_{3}+v_{3}v_{6}-v_{6}v_{1}=0,
\]

\end_inset

which has the geometrical meaning 
\begin_inset Formula $A,\, B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 are collinear.
 In other words, we found the sufficient and necessary condition to make
 the thesis work.
 In secondary school, we can formulate our results as follows:
\end_layout

\begin_layout Quote
Let 
\begin_inset Formula $ABCD$
\end_inset

 be a parallelogram.
 Its diagonals bisect each other if and only if the parallelogram is non-degener
ate.
\begin_inset Index idx
status open

\begin_layout Plain Layout
degeneracy conditions
\end_layout

\end_inset


\end_layout

\begin_layout Remark
What happens in the degenerate case? As we already saw, if 
\begin_inset Formula $A,\, B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 are collinear, then 
\begin_inset Formula $D$
\end_inset

 is still uniquely defined, but intersection of 
\begin_inset Formula $AC$
\end_inset

 and 
\begin_inset Formula $BD$
\end_inset

 is not a single point, but a whole line.
 Thus 
\begin_inset Formula $E$
\end_inset

 is not uniquely determined.
 On the other hand, 
\begin_inset Formula $F$
\end_inset

 is still a unique point.
 In the concept of counterexamples, this means that we can set up points
 
\begin_inset Formula $A,\, B,\, C,\, D,\, E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 to satisfy all hypotheses, but not the thesis: let 
\begin_inset Formula $A,\, B,\, C$
\end_inset

 collinear, construct 
\begin_inset Formula $D$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 by definition, and choose an arbitrary 
\begin_inset Formula $E\neq F$
\end_inset

 on the 
\begin_inset Formula $ABC$
\end_inset

 line.
 Now we can conclude that in the collinear (degenerate) case the thesis
 indeed fails.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Remark
By using a different variable ordering, we may get the 
\begin_inset Formula $q_{11}=0$
\end_inset

 equation as the equivalent system, too, among possibly others.
 That is, there can be different conditions for a statement to be true.
\end_layout

\begin_layout Subsection
\begin_inset Quotes eld
\end_inset

Generally false
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 statements, discovery
\begin_inset CommandInset label
LatexCommand label
name "sub:Statements-which-are"

\end_inset


\end_layout

\begin_layout Standard
Although in GeoGebra we do not distinguish between 
\begin_inset Quotes eld
\end_inset

generally false
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 types of statements (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:generally-translation"

\end_inset

), but we classify them as 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

 theses, the algebraic geometry approach makes it possible to make a difference.
 This may be fruitful for further developments of GeoGebra towards discovery.
\end_layout

\begin_layout Standard
In this subsection we use the examples from 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:New-commands-in"

\end_inset

  for further investigation.
 We concentrate on the number of free variables to make it possible to visualize
 the set of free points where the statement is actually true.
 Then we will conclude a 
\begin_inset Quotes eld
\end_inset

visual answer
\begin_inset Quotes erd
\end_inset

 about the falsity/truth of the statement.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Always true
\begin_inset Quotes erd
\end_inset

 statements.
 Here we use the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, midline
\end_layout

\end_inset

midline theorem (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-midline"

\end_inset

 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "fig-midline"

\end_inset

) again, but with fixed points 
\begin_inset Formula $B=(0,0)$
\end_inset

, 
\begin_inset Formula $C=(1,0)$
\end_inset

.
 Let 
\begin_inset Formula $A=(v_{1},v_{2})$
\end_inset

 arbitrary, here we assume that 
\begin_inset Formula $v_{1}$
\end_inset

 and 
\begin_inset Formula $v_{2}$
\end_inset

 are real numbers, but in theory these may be complex numbers, too.
 By assuming real numbers we can draw a coordinate system with axes 
\begin_inset Formula $v_{1}$
\end_inset

 and 
\begin_inset Formula $v_{2}$
\end_inset

 and mark the suitable points 
\begin_inset Formula $(v_{1},v_{2})$
\end_inset

 which provide a true special case for the statement.
 In this case all points of the coordinate system are marked, so we conclude
 that the statement is 
\begin_inset Quotes eld
\end_inset

always true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[2--3.]
\backslash
setcounter{enumi}{3}
\end_layout

\end_inset


\begin_inset Quotes eld
\end_inset

Generally true
\begin_inset Quotes erd
\end_inset

 statements.
 We use the bisection of the diagonals of a parallelogram again as in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "parallelogram"

\end_inset

 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "parallelogram"

\end_inset

.
 Now we assume that 
\begin_inset Formula $B=(0,0)$
\end_inset

, 
\begin_inset Formula $C=(1,0)$
\end_inset

 and let 
\begin_inset Formula $A=(v_{1},v_{2})$
\end_inset

 arbitrary.
 Since the degeneracy condition is collinearity of 
\begin_inset Formula $A,$
\end_inset

 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

, the unmarked set of falsity is the 
\begin_inset Formula $v_{1}$
\end_inset

-axis (that is, where 
\begin_inset Formula $v_{2}=0$
\end_inset

).
 The 
\begin_inset Quotes eld
\end_inset

majority
\begin_inset Quotes erd
\end_inset

 of the coordinate system, a two-dimensional set shows the set of 
\begin_inset Quotes eld
\end_inset

truth
\begin_inset Quotes erd
\end_inset

, and a minor subset, a one-dimensional line shows the set of 
\begin_inset Quotes eld
\end_inset

falsity
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Generally false
\begin_inset Quotes erd
\end_inset

 statements.
 We use the example for arbitrary two free points 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 to decide if they are equal.
 Let us assume that 
\begin_inset Formula $B=(0,0)$
\end_inset

 and let 
\begin_inset Formula $A=(v_{1,}v_{2})$
\end_inset

 arbitrary.
 Now the 
\begin_inset Quotes eld
\end_inset

majority
\begin_inset Quotes erd
\end_inset

 of the coordinate system is unmarked, the only marked point is 
\begin_inset Formula $(0,0)$
\end_inset

 which is a zero-dimensional subset of 
\begin_inset Formula $\mathbb{R}^{2}$
\end_inset

, while the set of unmarked points is two-dimensional.
\end_layout

\begin_layout Standard
We used here a two-dimensional coordinate system, but this model can be
 generalized to more variables.
 Visualization can however be a problem over 3 dimensions.
\end_layout

\begin_layout Standard
Now let us distinguish between the 
\begin_inset Quotes eld
\end_inset

generally false
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 cases by extending Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:neither-nor"

\end_inset

 (page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "ex:neither-nor"

\end_inset

).
 As mentioned earlier, GeoGebra does not make a difference here.
 We generalize Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:neither-nor"

\end_inset

 by putting point 
\begin_inset Formula $B$
\end_inset

 to 
\begin_inset Formula $(b,0)$
\end_inset

 instead of 
\begin_inset Formula $(1,0)$
\end_inset

.
 By using elimination we investigate the situation as follows:
\end_layout

\begin_layout Enumerate
We set up equations 
\begin_inset Formula 
\begin{equation}
y=0\label{eq:nor1}
\end{equation}

\end_inset

 for line 
\begin_inset Formula $l$
\end_inset

 and 
\begin_inset Formula 
\begin{equation}
x^{2}+y^{2}=b^{2}\label{eq:nor2}
\end{equation}

\end_inset

 for circle 
\begin_inset Formula $c$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
We set up negated thesis 
\begin_inset Formula $x=b$
\end_inset

 by using Rabinowitsch's trick as 
\begin_inset Formula 
\begin{equation}
z\cdot(x-b)-1=0.\label{eq:nor3}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
Now 
\begin_inset Formula $b$
\end_inset

 is the only free variable, so we eliminate all variables but 
\begin_inset Formula $b$
\end_inset

 from the equation system {
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor1"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor2"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor3"

\end_inset

}.
 The equivalent system is 
\begin_inset Formula $\{0=0\}$
\end_inset

, thus the statement is 
\begin_inset Quotes eld
\end_inset

not generally true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Now we check if the negation of the negated thesis is true, so we change
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:nor3"

\end_inset

 simply to the thesis
\begin_inset Formula 
\begin{equation}
x=b.\label{eq:nor3n}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
Now 
\begin_inset Formula $b$
\end_inset

 is the only free variable again.
 By eliminating all variables but 
\begin_inset Formula $b$
\end_inset

 from the equation system {
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor1"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor2"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor3n"

\end_inset

} we get 
\begin_inset Formula $\{0=0\}$
\end_inset

 again, thus the statement is 
\begin_inset Quotes eld
\end_inset

not generally false
\begin_inset Quotes erd
\end_inset

, either.
 So we concluded that this statement is of 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 type.
\end_layout

\begin_layout Standard
These computations can be done either with Singular or Giac by using the
 following inputs for steps 1--3:
\end_layout

\begin_layout LyX-Code

\size footnotesize
ring R=0,(b,x,y,z),dp;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal I=y,x^2+y^2-b^2,z*(x-b)-1;
\end_layout

\begin_layout LyX-Code

\size footnotesize
eliminate(I,x*y*z);
\end_layout

\begin_layout Standard
in Singular results in 
\family typewriter
_[1]=0
\family default
.
 Here the 
\emph on
product
\emph default
 of the 
\emph on
non-free
\emph default
 variables must be set as the second parameter for the 
\emph on
eliminate
\emph default
 command.
 A similar piece of code in Giac is
\end_layout

\begin_layout LyX-Code

\size footnotesize
eliminate([y,x^2+y^2-b^2,z*(x-b)-1],[x,y,z])
\end_layout

\begin_layout Standard
which returns 
\family typewriter
[]
\family default
.
\end_layout

\begin_layout Standard
Now we may be interested of what kind of extra hypotheses could be added
 to make this statement 
\begin_inset Quotes eld
\end_inset

generally true
\begin_inset Quotes erd
\end_inset

.
 Let us follow Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:neither-nor"

\end_inset

 again and try to express that points 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 should have a distance of 
\begin_inset Formula $2b$
\end_inset

:
\end_layout

\begin_layout Enumerate
Let us assume that 
\begin_inset Formula $C=(x,y)$
\end_inset

 and 
\begin_inset Formula $D=(x',y')$
\end_inset

.
\end_layout

\begin_layout Enumerate
We need to set up equations 
\begin_inset Formula 
\begin{align}
y' & =0,\label{eq:norok1b}\\
x'^{2}+y'^{2} & =b^{2}\label{eq:norok2b}
\end{align}

\end_inset

to define 
\begin_inset Formula $D$
\end_inset

 as an intersection point of 
\begin_inset Formula $l$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

.
\end_layout

\begin_layout Enumerate
We distinguish 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 by adding
\begin_inset Formula 
\begin{equation}
z'\cdot((x-x')^{2}+(y-y')^{2})-1=0\label{eq:norok3}
\end{equation}

\end_inset

by using Rabinowitsch's trick to deny having a zero Cartesian distance between
 them.
\end_layout

\begin_layout Enumerate
We define distance of 
\begin_inset Formula $2b$
\end_inset

 between 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 by adding
\begin_inset Formula 
\begin{equation}
(x'-b)^{2}+(y'-0)^{2}=(2b)^{2}.\label{eq:norok4}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
Now after checking system {
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor1"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor2"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:norok1b"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:norok2b"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:norok3"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:norok4"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:nor3"

\end_inset

} we get contradiction, so we indeed found suitable extra hypotheses to
 make a 
\begin_inset Quotes eld
\end_inset

not generally true
\begin_inset Quotes erd
\end_inset

 statement 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

.
 (Note that for technical reason here we needed 4 hypotheses to express
 the extra condition.)
\end_layout

\begin_layout Subsection
Readable sufficient conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Readable-sufficient-conditions"

\end_inset


\end_layout

\begin_layout Standard
The Gröbner basis method is basically a conversion of a geometry theorem
 into an algebraic form.
 When we get some extra conditions for a thesis to satisfy, we need to convert
 the achieved equations to such geometrical meanings which make sense for
 the education as well.
 Unfortunately, this conversion step is not straightforward and various
 problems can come up.
\end_layout

\begin_layout Subsubsection
More possible sets of conditions
\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "Heights-of-a"

\end_inset

Altitudes of a triangle are concurrent, as seen in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-orthocenter"

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ProveDetails/orthocenter5.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Altitudes of a triangle are concurrent
\begin_inset CommandInset label
LatexCommand label
name "fig-orthocenter"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
We use a similar technique here as in the previous example.
 After setting up the three free points 
\begin_inset Formula $A,\, B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

, we implicitely introduce technical points 
\begin_inset Formula $T_{1}(v_{7},v_{8})$
\end_inset

 and 
\begin_inset Formula $T_{2}(v_{9},v_{10})$
\end_inset

 which are the foot points of 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

, respectively.
 To define, for example, the foot point 
\begin_inset Formula $T_{1}$
\end_inset

, we used the fact that 
\begin_inset Formula $A,\, T_{1}$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 must be collinear, and 
\begin_inset Formula $AC\perp T_{1}B$
\end_inset

.
\end_layout

\begin_layout Remark
An equation for the perpendicularity
\begin_inset Index idx
status open

\begin_layout Plain Layout
equations!--, perpendicularity
\end_layout

\end_inset

 can be set up by using the scalar product of two vectors, i.
\begin_inset space ~
\end_inset

e.
\begin_inset Formula 
\[
(v_{7}-v_{3})\cdot(v_{1}-v_{5})+(v_{8}-v_{4})\cdot(v_{2}-v_{6})=0.
\]

\end_inset


\end_layout

\begin_layout Standard
Intersection of altitudes are again described by collinearities.
 Equality for points 
\begin_inset Formula $D$
\end_inset

 and 
\begin_inset Formula $E$
\end_inset

 is tested exactly like in the previous example.
 By requesting an equivalent system of the original one (which has 11 equations
 in 17 variables, but can be reduced to 15 variables by fixing 
\begin_inset Formula $A$
\end_inset

 to 
\begin_inset Formula $(0,0)$
\end_inset

) from the black box with variable ordering 
\begin_inset Formula $v_{3},v_{4},v_{5},v_{6}$
\end_inset

 we get the following equations:
\begin_inset Formula 
\begin{align*}
(v_{4}v_{5}-v_{3}v_{6})^{2} & =0,\\
(v_{4}v_{5}-v_{3}v_{6})\cdot(-v_{3}v_{5}+v_{5}^{2}-v_{4}v_{6}+v_{6}^{2}) & =0,\\
(v_{4}v_{5}-v_{3}v_{6})\cdot(-v_{3}^{2}-v_{4}^{2}+v_{5}^{2}+v_{6}^{2})\cdot v_{6} & =0.
\end{align*}

\end_inset

Note that the equations have been written in factorized form to separate
 the possible geometrical meanings.
 Before we convert these set of equations back to have geometrical meanings,
 we need to understand that all of these equations must be true to find
 a counterexample for the thesis not to work.
 In general, if any of the equations here is not true, it means there will
 be no counterexample, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

then the thesis will always be true.
 In other words, if we want to get a sufficient condition for the thesis
 to work, it is enough to choose only one of the equations and mess up all
 its factors to be non-zero.
\end_layout

\begin_layout Standard
In this case we can get three different geometry theorems by choosing one
 of the equation to mess up.
 Since 
\begin_inset Formula $v_{1}=v_{2}=0$
\end_inset

 due to the fixed point 
\begin_inset Formula $A$
\end_inset

, one can simply realize that the factor 
\begin_inset Formula $v_{4}v_{5}-v_{3}v_{6}$
\end_inset

 is about collinearity of 
\begin_inset Formula $A,\, B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 again.
 Factor 
\begin_inset Formula $-v_{3}v_{5}+v_{5}^{2}-v_{4}v_{6}+v_{6}^{2}(=0)$
\end_inset

 turns out to be a perpendicularity condition for segments 
\begin_inset Formula $AC$
\end_inset

 and 
\begin_inset Formula $BC$
\end_inset

.
 Factor 
\begin_inset Formula $-v_{3}^{2}-v_{4}^{2}+v_{5}^{2}+v_{6}^{2}(=0)$
\end_inset

 has the meaning that the triangle 
\begin_inset Formula $ABC$
\end_inset

 is isosceles with segments 
\begin_inset Formula $AB=AC$
\end_inset

.
 Finally, the geometrical meaning of 
\begin_inset Formula $v_{6}(=0)$
\end_inset

 in this case the same as 
\begin_inset Formula $v_{6}=v_{2}$
\end_inset

 (or, in other words 
\begin_inset Formula $v_{6}-v_{2}=0$
\end_inset

) which simply means that the 
\begin_inset Formula $y$
\end_inset

-coordinates of 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $A$
\end_inset

 are the same.
\end_layout

\begin_layout Standard
After all we get the following geometry theorems:
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $ABC$
\end_inset

 a non-degenerate triangle.
 Then its altitudes are concurrent.
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $ABC$
\end_inset

 a non-degenerate triangle with 
\begin_inset Formula $AC\not\perp BC$
\end_inset

.
 Then its altitudes are concurrent.
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $ABC$
\end_inset

 a non-degenerate, non-isosceles triangle so that the 
\begin_inset Formula $y$
\end_inset

-coordinate of 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $A$
\end_inset

 are different.
 Then the altitudes of the triangle are concurrent.
\end_layout

\end_deeper
\begin_layout Remark
The following CAS program (generated by GeoGebra automatically) is used
 to get the equivalent equation system in factorized form from Singular:
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
ring r=0,(
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v3,v4,v5,v6,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17),dp;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal i=
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v7*v6+-1*v8*v5,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v8*v6+v7*v5+-1*v6*v4+-1*v5*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v9*v4+v10*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v10*v4+v6*v4+-1*v9*v3+v5*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v11*v8+-1*v12*v7+-1*v11*v4+v7*v4+v12*v3+-1*v8*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v11*v10+-1*v12*v9+-1*v11*v6+v9*v6+v12*v5+-1*v10*v5,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v13*v6+v14*v5+v13*v4+-1*v5*v4+-1*v14*v3+v6*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v14*v6+-1*v13*v5+v14*v4+v13*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v15*v14+-1*v16*v13,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v15*v10+-1*v16*v9+-1*v15*v6+v9*v6+v16*v5+-1*v10*v5,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1+-1*v17*v15+v17*v11;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal e=eliminate(i,v17*v16*v15*v14*v13*v12*v11*v10*v9*v8*v7);
\end_layout

\begin_layout LyX-Code

\size footnotesize
list o;
\end_layout

\begin_layout LyX-Code

\size footnotesize
int s=size(e);
\end_layout

\begin_layout LyX-Code

\size footnotesize
int j;
\end_layout

\begin_layout LyX-Code

\size footnotesize
for (j=1; j<=s; j=j+1) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
 o[j]=factorize(e[j]); }
\end_layout

\begin_layout LyX-Code

\size footnotesize
o;
\end_layout

\begin_layout Standard
The output is:
\end_layout

\begin_layout LyX-Code

\size footnotesize
[1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v4*v5-v3*v6
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,2
\end_layout

\begin_layout LyX-Code

\size footnotesize
[2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v4*v5-v3*v6
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=-v3*v5+v5^2-v4*v6+v6^2
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[3]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v4*v5-v3*v6
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=-v3^2-v4^2+v5^2+v6^2
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=v6
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1
\end_layout

\end_deeper
\begin_layout Standard
In Giac we can write similar code with the same mathematical content:
\end_layout

\begin_layout LyX-Code

\size footnotesize
[[aa:=eliminate([
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v7*v6+-1*v8*v5,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 ...
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1+-1*v17*v15+v17*v11],
\end_layout

\begin_layout LyX-Code

\size footnotesize
 [v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17])],
\end_layout

\begin_layout LyX-Code

\size footnotesize
[bb:=size(aa)],
\end_layout

\begin_layout LyX-Code

\size footnotesize
[for ii from 0 to bb-1 do
\end_layout

\begin_layout LyX-Code

\size footnotesize
 cc[ii]:=factors(aa[ii]); 
\end_layout

\begin_layout LyX-Code

\size footnotesize
 od],
\end_layout

\begin_layout LyX-Code

\size footnotesize
cc][3]
\end_layout

\begin_layout Standard
but unfortunately this equation system is too difficult to investigate by
 Giac before timeout.
 (In 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Remarks-on-the"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Freedom-of-choice"

\end_inset

 we show the complete Giac code to obtain literally the same output from
 Giac like Singular produces its output.
 This is mandatory for GeoGebra for handling the blackbox outputs in a unified
 way.
 Note that Giac, at least for the moment, does not require any ordering
 to be set.
 At the end of our investigation we will see that Giac internally sets an
 ordering automatically which seems to be fruitful in most cases, too.)
\end_layout

\begin_layout Standard
Let us observe the obtained theorems.
 Clearly, the most good-looking theorem here is the first one.
 It is the simplest, and in fact the other two ones are just restricted
 versions of it.
 This idea suggests comparing the possible equations and give a score for
 their usability in the classroom.
\end_layout

\begin_layout Standard
Another suggestion is to avoid showing such geometrical meanings which are
 not synthetic, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

that contain conditions which can only be described analytically.
 For example, the condition 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $y$
\end_inset

-coordinates of two points are the same
\begin_inset Quotes erd
\end_inset

 is like that.
 Why we need only synthetic geometry conditions? The answer is, simply,
 that in the classroom by using no computers, the Euclidean theorems are
 purely synthetic, always.
 We do not want to confuse the students by introducing a non-synthetic condition
 which is, in fact, completely technical, and is just a side effect of using
 an algebraic method as a long bypass.
\end_layout

\begin_layout Standard
Now we can already agree on giving some usability scores to each type of
 geometrical meaning.
 For example, collinearity can get 1 point, parallelism and perpendicularity
 just 3/4, point equality 1/2, segment equality (a triangle is isosceles)
 5/4, coordinate equality 
\begin_inset Formula $\infty$
\end_inset

.
 By using this scoring, the theorems above can get 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $1.75=1+3/4$
\end_inset

 and 
\begin_inset Formula $\infty=1+5/4+\infty$
\end_inset

 points as total, the less the better.
 Finally, GeoGebra will choose the first one since it is the simplest, according
 to the scoring as well.
 (Weights for scoring here are somehow subjective, however, in our opinion
 they reflect the difficulty of a property notion faithfully.)
\end_layout

\begin_layout Remark
Here we did essentially the same what Recio & Vélez reported in 
\begin_inset CommandInset citation
LatexCommand cite
key "RecioVelez99"

\end_inset

, but without mentioning any details about ideal theory and Gröbner bases.
 Of course, the black box implementations heavily use both the theory and
 its algorithms to compute the answers quickly enough for the GeoGebra end
 user.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Remark
In this special example we could have said that the collinear property is
 a sufficient and necessary condition of the negation of the statement.
 Clearly, by assuming 
\begin_inset Formula $v_{4}v_{5}-v_{3}v_{6}=0$
\end_inset

 all the three equations are true since the left hand sides are zero, thus
 collinearity is a sufficient counterexample.
 Conversely, if collinearity is not assumed, the first equation is false,
 so we get a contradiction, and the logical consequence will be correct.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Remark
Another algebraic way to check concurrency is to introduce another technical
 point and set up three collinearity equations for the lines to be tested.
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $\mathcal{N}=(H_{1},H_{2},\ldots,H_{m};T)$
\end_inset

 be a logical non-consequence.
 We call the set 
\begin_inset Formula $\{C_{1},C_{2},\ldots,C_{r}\}$
\end_inset

 
\emph on
\bar under
degeneracy conditions
\begin_inset Index idx
status open

\begin_layout Plain Layout
degeneracy conditions
\end_layout

\end_inset


\emph default
\bar default
 for 
\begin_inset Formula $\mathcal{N}$
\end_inset

 if 
\begin_inset Formula $\mathcal{C}=(H_{1},H_{2},\ldots,H_{m},\neg C_{1}\wedge\neg C_{2}\wedge\ldots\wedge\neg C_{r};T)$
\end_inset

 is a logical consequence.
\begin_inset CommandInset label
LatexCommand label
name "ndg-def"

\end_inset


\end_layout

\begin_layout Standard
The three obtained geometry theorems include three different degeneracy
 conditions as sufficient conditions to satisfy the thesis.
\end_layout

\begin_layout Standard
Let us summarize the above steps in the following algorithm:
\begin_inset Index idx
status open

\begin_layout Plain Layout
algorithm!--, Recio-Vélez (extended)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Turn the input question 
\begin_inset Formula $\mathcal{Q}=(H_{1},H_{2},\ldots,H_{m};T)$
\end_inset

 to an equation system 
\begin_inset Formula $S$
\end_inset

 with variables 
\begin_inset Formula $v_{1},\ldots,v_{n}$
\end_inset

 by using reductio ad absurdum, Rabinowitsch's trick and the fixed point
 
\begin_inset Formula $A(0,0)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Send 
\begin_inset Formula $S$
\end_inset

 with some ordering of the independent variables as input to the black box
 for computing an equivalent equation system by eliminating the dependent
 variables.
\end_layout

\begin_layout Enumerate
Get an equivalent equation system 
\begin_inset Formula $S'$
\end_inset

 back as set of equations with polynomial factors on the left hand side
 and 
\begin_inset Formula $0$
\end_inset

 on the right hand side.
 (If there is a factor with a higher exponent, then that exponent can be
 omitted.)
\begin_inset CommandInset label
LatexCommand label
name "enu:black-box-returns"

\end_inset


\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $S'=\{1=0\}$
\end_inset

, then show 
\begin_inset Quotes eld
\end_inset

the answer to the question is always true
\begin_inset Quotes erd
\end_inset

 as output, and stop.
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $S'=\{0=0\}$
\end_inset

, then show 
\begin_inset Quotes eld
\end_inset

the answer to the question is false
\begin_inset Quotes erd
\end_inset

 as output, and stop.
\end_layout

\begin_layout Enumerate
Otherwise, for each polynomial 
\begin_inset Formula $p$
\end_inset

 of the left hand side of equation 
\begin_inset Formula $p=0$
\end_inset

 in 
\begin_inset Formula $S'$
\end_inset

,
\end_layout

\begin_deeper
\begin_layout Enumerate
let score 
\begin_inset Formula $s_{p}:=0$
\end_inset

 initially,
\end_layout

\begin_layout Enumerate
for each factor 
\begin_inset Formula $f$
\end_inset

 in 
\begin_inset Formula $p$
\end_inset

,
\end_layout

\begin_deeper
\begin_layout Itemize
if 
\begin_inset Formula $f$
\end_inset

 has a usable geometrical meaning,
\end_layout

\begin_deeper
\begin_layout Itemize
then add the educational usability score 
\begin_inset Formula $u_{f}$
\end_inset

 to 
\begin_inset Formula $s_{p}$
\end_inset

,
\end_layout

\begin_layout Itemize
else remove 
\begin_inset Formula $p=0$
\end_inset

 from 
\begin_inset Formula $S'$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Enumerate
Choose the best polynomial 
\begin_inset Formula $p$
\end_inset

 in 
\begin_inset Formula $S'$
\end_inset

 with the lowest score 
\begin_inset Formula $s_{p}<\infty$
\end_inset

 and show the geometrical meanings of its factors in denied form as conjuctions
 for the output.
 (If there are more equations with the same score, choose one of them determinis
tically.) Stop.
\end_layout

\begin_layout Remark
Deterministic choice may be important for classroom use.
 It can be confusing that the same software returns different results for
 different students for the same geometry problem.
\end_layout

\begin_layout Subsubsection
Non-synthetic conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Non-synthetic-conditions"

\end_inset


\end_layout

\begin_layout Standard
We already learned that some elementary geometry theorems may have different
 degeneracy conditions.
 In the previous example one of the obtained degeneracy conditions contained
 a condition which was non-synthetic, namely the equality of the 
\begin_inset Formula $y$
\end_inset

-coordinates.
 Fortunately, we found two other sets for degeneracy conditions which do
 not contain any non-synthetic conditions, and all factors of the matching
 equation can be translated back into elementary geometry relations.
 Unfortunately, this is not the case for all elementary geometry problems.
\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "ex:thales"

\end_inset

Thales' (circle) theorem
\begin_inset Foot
status open

\begin_layout Plain Layout
In some countries (including France, Spain and Italy) Thales' theorem
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Thales'
\end_layout

\end_inset

 describes a different one than here discussed, as known as 
\emph on
intercept theorem
\emph default
 
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, intercept
\end_layout

\end_inset

 in English.
\end_layout

\end_inset

 can be formulated in many ways.
 
\begin_inset CommandInset label
LatexCommand label
name "Thales'-theorem-can"

\end_inset

A possible approach can be seen in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-thales"

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ProveDetails/Thales3.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Thales' (circle) theorem
\begin_inset CommandInset label
LatexCommand label
name "fig-thales"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
A circle will be defined with center 
\begin_inset Formula $A$
\end_inset

 and circle point 
\begin_inset Formula $B$
\end_inset

.
 An arbitrary 
\begin_inset Formula $C$
\end_inset

 point will help to create a diameter for the circle by defining a line
 fitting 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

.
 Now dependent intersection points (
\begin_inset Formula $D$
\end_inset

 and 
\begin_inset Formula $E$
\end_inset

) of the line and the circle will build up the triangle 
\begin_inset Formula $DBE$
\end_inset

.
 The thesis is whether this triangle has a right angle at point 
\begin_inset Formula $B$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Example
The equations for the hypotheses are drawn in the figure.
 Intersection is described as previously, but here we use equality of Cartesian
 distances to tell that 
\begin_inset Formula $D$
\end_inset

 and 
\begin_inset Formula $E$
\end_inset

 are lying on the same circle which are already defined by 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

.
 For 
\begin_inset Formula $E$
\end_inset

 we also add an extra criterion, namely that it is different from point
 
\begin_inset Formula $D$
\end_inset

, also by using a Cartesian distance.
 After fixing 
\begin_inset Formula $A$
\end_inset

 to the origin, finally we will have 9 variables and 6 equations before
 the elimination step.
\end_layout

\begin_layout Example
The black box returns two equations after elimination (independently of
 the variable ordering):
\begin_inset Formula 
\begin{align*}
v_{5} & =0,\\
v_{6} & =0
\end{align*}

\end_inset

which are simply about 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 coordinates of 
\begin_inset Formula $C$
\end_inset

, they must be equal to the appropriate coordinates of 
\begin_inset Formula $A$
\end_inset

.
 In this case, we cannot simply apply the algorithm described in the previous
 subsection since it will not find an equation having a score 
\begin_inset Formula $<\infty$
\end_inset

.
 This simply means our algorithm cannot be used directly for every geometry
 theorems at the moment.
\end_layout

\begin_layout Example
In this specific example, of course, we can resolve the problem by argumenting
 that 
\begin_inset Formula $(v_{5},v_{6})$
\end_inset

 is a counterexample if and only if 
\begin_inset Formula $C=(0,0)=A$
\end_inset

.
 This means that the geometry theorem in its simplest form is:
\end_layout

\begin_layout Quote
If 
\begin_inset Formula $AC$
\end_inset

 is a non-degenerate segment, then angle 
\begin_inset Formula $DBE$
\end_inset

 is right.
\end_layout

\begin_layout Standard
According to Thales' theorem, this degeneracy condition seems still rather
 technical, because without assuming it, the thesis cannot even be formulated.
 In fact, this is a very similar situation to the bisecting diagonals of
 the parallelogram.
 Nevertheless, it is worth to add an extra step in our algorithm between
 steps 6 and 7:
\begin_inset Index idx
status open

\begin_layout Plain Layout
algorithm!--, Recio-Vélez (extended)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[6+.]
\backslash
setcounter{enumi}{7}
\end_layout

\end_inset

If 
\begin_inset Formula $S'=\{x_{P}-x_{Q}=0,\, y_{P}-y_{Q}=0\}$
\end_inset

 for the variables of the free points 
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

, then show 
\begin_inset Quotes eld
\end_inset

the answer is true if 
\begin_inset Formula $P\neq Q$
\end_inset


\begin_inset Quotes erd
\end_inset

 as output.
 Stop.
\end_layout

\begin_layout Standard
In this geometry problem we were finally able to add some extra reasoning
 to convert the black box output to an educationally usable form.
 Unfortunately, there are even worse cases where this is impossible in this
 way.
\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "ex:eulerline"

\end_inset

Euler's line
\begin_inset Index idx
status open

\begin_layout Plain Layout

\series medium
line!--, Euler's
\end_layout

\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-euler"

\end_inset

) is a line in each non-equilateral triangle which passes through the orthocente
r, the circumcenter and the centroid of the triangle.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ProveDetails/EulerLine.pdf
	lyxscale 20
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Euler's line
\begin_inset CommandInset label
LatexCommand label
name "fig-euler"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
After fixing 
\begin_inset Formula $A$
\end_inset

 to the origin, GeoGebra creates 23 equations in 27 variables to answer
 the question whether dependent points 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 are collinear.
 Our algorithm after Step 3 gets the following equations from the black
 box with variable ordering 
\begin_inset Formula $v_{3},v_{4},v_{5},v_{6}$
\end_inset

:
\begin_inset Formula 
\begin{align*}
(v_{4}v_{5}-v_{3}v_{6})\cdot v_{6} & =0,\\
(v_{4}v_{5}-v_{3}v_{6})\cdot v_{5} & =0,\\
(-v_{3}^{2}-v_{4}^{2}+v_{3}v_{5}+v_{4}v_{6})\cdot v_{6}^{2} & =0,\\
v_{3}\cdot(-v_{3}v_{5}+v_{5}^{2}-v_{4}v_{6}+v_{6}^{2})\cdot v_{6} & =0,\\
(v_{3}-v_{5})\cdot v_{3}\cdot(v_{5}^{2}+v_{6}^{2}) & =0.
\end{align*}

\end_inset

Clearly, all equations contain a non-synthetic factor here.
 In this case we may think of changing the variable ordering to a different
 one, but unfortunately this will not really help---in most cases there
 will always be a non-synthetic factor in all equations, and in the other
 cases there will be the factor 
\begin_inset Formula $-v_{6}^{2}v_{4}^{2}+v_{4}v_{6}^{3}-v_{5}^{3}v_{3}+v_{5}^{2}v_{3}^{2}$
\end_inset

 of degree 4 which has no straightforward geometrical meaning.
 One may think that the reason behind this problem is that the denial of
 the simplest sufficient condition, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

that triangle 
\begin_inset Formula $ABC$
\end_inset

 is not equilateral, cannot be simply expressed by using the algebraic approach.
 It is not really the case here, as we will soon learn, but rather the look
 of the equations we set up for the hypotheses.
 On the other hand, in some cases the real problem is indeed the geometrical
 complexity even if the question is a good-looking one.
 One example for an exceptional complex geometrical degeneracy condition
 is motivated by the generalized 
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Steiner-Lehmus
\end_layout

\end_inset

Steiner-Lehmus theorem (actually, its negation, see 
\begin_inset CommandInset citation
LatexCommand cite
key "LoReVa10"

\end_inset

): 
\emph on
Given a triangle there are not two bisector segments of equal length correspondi
ng to two different vertices.

\emph default
 This statement is generically true, but when putting two vertices to 
\begin_inset Formula $(-1,1)$
\end_inset

 and 
\begin_inset Formula $(1,1)$
\end_inset

, and the third one is a free point then there exists a degree 35 curve
 (made up of three degree 10 irreducible curves, plus a line and two circles)
 for which two bisector segments are equal.
\end_layout

\begin_layout Standard
Actually, it may not be exceptionally important for the student to get a
 beautiful set with degeneracy conditions, or at least not for the student
 with average skills.
 It is more important to know that the answer to the question is true 
\emph on
under certain conditions
\emph default
.
 These conditions, as the deeper theory in algebraic geometry explains,
 are usually covering just a very minimal set of the possible configurations.
 For Euler's line this simply means that by randomly choosing a triangle,
 we can be 100% sure that it will not be an equilateral one, thus Euler's
 line may be constructed without any problems.
 (In this sense, of course, 100% is not the sure event.)
\begin_inset CommandInset label
LatexCommand label
name "100%"

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout

\series medium
line!--, Euler's
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Of course, this will raise the question of the importance of showing degeneracy
 conditions for the student at all.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Using-transcendental-constants"

\end_inset

 we will learn another way to decide a 
\series bold
Prove
\series default
 question without using any elimination, but this is important from the
 theoretical and technological approach only.
 From the educational point of view we can emphasize that the computer's
 help to set up a precise logical consequence with correct hypotheses and
 thesis is a step forward in teaching 
\emph on
systematization
\emph default
 (see 
\begin_inset CommandInset ref
LatexCommand eqref
reference "chap:Proofs-in-education"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:De-Villiers'-model"

\end_inset

).
\begin_inset CommandInset label
LatexCommand label
name "Prove-mentioning"

\end_inset


\end_layout

\begin_layout Remark
We could simply append our algorithm with an extra step, namely
\begin_inset Index idx
status open

\begin_layout Plain Layout
algorithm!--, Recio-Vélez (extended)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[8.]
\backslash
setcounter{enumi}{8}
\end_layout

\end_inset

If there is no polynomial 
\begin_inset Formula $p$
\end_inset

 in 
\begin_inset Formula $S'$
\end_inset

 with score 
\begin_inset Formula $s_{p}<\infty$
\end_inset

, then show 
\begin_inset Quotes eld
\end_inset

the answer is true under certain conditions
\begin_inset Quotes erd
\end_inset

 as output.
 Stop.
\end_layout

\begin_layout Subsubsection
Changing the analytical approach
\begin_inset CommandInset label
LatexCommand label
name "sub:Changing-the-analytical"

\end_inset


\end_layout

\begin_layout Standard
In some cases the same geometrical meaning can be translated into different
 algebraic descriptions.
 The different algebraic descriptions may result in simpler or more difficult
 computations, and sometimes different non-degeneracy conditions will be
 obtained.
\end_layout

\begin_layout Standard
Also the previous example can be handled differently when changing the approach
 in the analyitical geometry details for the perpendicularity
\begin_inset Index idx
status open

\begin_layout Plain Layout
equations!--, perpendicularity
\end_layout

\end_inset

 check.
 By changing the collinearity equation and the scalar product to a vector
 rotation by 90 degrees, we can turn 4 quadratic equations to 4 linear equations
, namely
\begin_inset Formula 
\begin{align*}
v_{13}v_{6}-v_{14}v_{5}-v_{13}v_{4}+v_{5}v_{4}+v_{14}v_{3}-v_{6}v_{3} & =0,\\
v_{14}v_{6}+v_{13}v_{5}-v_{14}v_{4}-v_{13}v_{3}-v_{6}v_{2}+v_{4}v_{2}-v_{5}v_{1}+v_{3}v_{1} & =0
\end{align*}

\end_inset

to
\begin_inset Formula 
\begin{align*}
-v_{14}-v_{5}+v_{3}+v_{2} & =0,\\
-v_{13}+v_{6}-v_{4}+v_{1} & =0
\end{align*}

\end_inset

and similarly
\begin_inset Formula 
\begin{align*}
-v_{15}v_{14}+v_{16}v_{3}+v_{15}v_{2}-v_{3}v_{2}-v_{16}v_{1}+v_{4}v_{1} & =0,\\
-v_{16}v_{4}+v_{6}v_{4}-v_{15}v_{3}+v_{5}v_{3}+v_{16}v_{2}-v_{6}v_{2}+v_{15}v_{1}-v_{5}v_{1} & =0
\end{align*}

\end_inset

to 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
-v_{16}+v_{6}+v_{3}-v_{1} & =0,\\
-v_{15}+v_{5}-v_{4}+v_{2} & =0.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
After elimination with ordering 
\begin_inset Formula $v_{6},v_{5},v_{4},v_{3}$
\end_inset

 we get the equation system
\begin_inset Formula 
\begin{align*}
v_{5}v_{4}-v_{3}v_{6} & =0,\\
(v_{5}-v_{3})\cdot v_{5}\cdot v_{3} & =0,\\
v_{6}\cdot(v_{5}-v_{3})\cdot v_{3} & =0,\\
(-v_{6}^{2}-v_{5}^{2}+v_{6}v_{4}+v_{5}v_{3})\cdot v_{3} & =0,\\
v_{6}\cdot(-v_{6}v_{4}+v_{4}^{2}-v_{5}v_{3}+v_{3}^{2}) & =0
\end{align*}

\end_inset

which contains the collinearity condition for points 
\begin_inset Formula $A,\, B,\, C$
\end_inset

 as the only necessary degeneracy condition as the first equation.
\end_layout

\begin_layout Standard
The general use of the simpler equations are usually fruitful not only in
 getting usable degeneracy conditions, but the computation time is drastically
 decreased.
 While Singular is usually fast enough in computing the elimination step
 for the first approach as well, Giac is too slow for many tests.
 By using the different analytical approach, Giac gives the results in reasonabl
e time, and makes it possible to use the proving facilities in an offline
 environment, even on tablet machines.
 (For example, the computations in both previous examples take only 200
 milliseconds instead of 15-16 seconds).
\end_layout

\begin_layout Standard
Finding the 
\begin_inset Quotes eld
\end_inset

best
\begin_inset Quotes erd
\end_inset

 algebraic description for a geometrical property is usually not a trivial
 task.
 There is no guarantee that a description which results in a simple computation
 for one statement will also result in simple computations for a different
 statement.
 Also it is important that an algebraic description may not be a one-to-one
 mapping of the geometrical property, that is, it may introduce extra points
 for which the statement should be true.
 As a result, the algebraic description will express a more strict statement
 which may not be true anymore.
\end_layout

\begin_layout Remark
The achieved condition may be strange since the theorem should have assumed
 some more complicated degeneracy condition.
 Now we obtained that the theorem is true even if the triangle is equilateral.
 In this case the orthocenter, the circumcenter and the centroid are the
 same point.
 Strictly speaking, these three points are lying on the same line, which
 can be of, of course, infinitely many possibilities (thus Euler's line
\begin_inset Index idx
status open

\begin_layout Plain Layout

\series medium
line!--, Euler's
\end_layout

\end_inset

 is not uniquely determined).
\end_layout

\begin_layout Subsubsection
Interlude 1: The Buchberger algorithm
\begin_inset CommandInset label
LatexCommand label
name "sub:Interlude-1:-The"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
This part of the dissertation is a detailed introduction of the notion of
 Gröbner bases.
 In scientific sense it does not introduce any new concepts since all of
 its definitions and theorems can be found in well-known textbooks (like
 e.
\begin_inset space ~
\end_inset

g.
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "LinAlgGS"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "Cox+Others/1991/Ideals"

\end_inset

).
 Readers who are familiar with the Buchberger algorithm can skip this part
 and continue with reading 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Permuting-the-independent"

\end_inset

 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Permuting-the-independent"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Up to this point we managed to avoid the definition of a Gröbner basis.
 The main reason to do so was that our general concept can be understood
 without the notion of Gröbner basis, thus the minimalistic mathematical
 approach was important here to allow non-mathematician readers to understand
 the most with minimal effort.
\end_layout

\begin_layout Standard
To continue with achieving the most of the available technical methods,
 it is now time to go one step further and introduce the concept of Buchberger's
 1965 PhD thesis, namely the notion of Gröbner basis
\begin_inset Index idx
status open

\begin_layout Plain Layout
Gröbner basis
\end_layout

\end_inset

.
 Here we still remain as minimalistic as possible, and demonstrate the theory
 mostly via examples.
\begin_inset Foot
status open

\begin_layout Plain Layout
A similar approach is 
\begin_inset CommandInset citation
LatexCommand cite
key "bruno-noideal"

\end_inset

 which avoids using the notion of ideal.
\end_layout

\end_inset

 Despite this, our arguments will be mathematically correct.
\end_layout

\begin_layout Standard
In this part of the thesis we focus on solving an equation system by bringing
 it to a row echelon form
\begin_inset Index idx
status open

\begin_layout Plain Layout
row echelon form
\end_layout

\end_inset

.
 A row echelon form will be helpful later to omit some of the variables
 and express the rest with some other equations.
\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "ex:lindemo"

\end_inset

Let us consider the following linear equation system:
\begin_inset Formula 
\begin{align}
3a+2b+c-5 & =0,\label{eq:lindemo1}\\
2a+3b-4c+2 & =0,\label{eq:lindemo2}\\
5a-b+2c-7 & =0.\label{eq:lindemo3}
\end{align}

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Its standard solving procedure is the 
\emph on
Gauss elimination
\begin_inset Index idx
status open

\begin_layout Plain Layout
Gauss elimination
\end_layout

\end_inset


\emph default
 which transforms the equation to 
\emph on
row echelon form
\emph default
 first.
 For this example, the first part of the procedure consists of 3 steps:
\end_layout

\begin_layout Enumerate
eliminating 
\begin_inset Formula $2a$
\end_inset

 (second row, first column) by subtracting 
\begin_inset Formula $\frac{2}{3}$
\end_inset

 times the first row from the second row,
\end_layout

\begin_layout Enumerate
eliminating 
\begin_inset Formula $5a$
\end_inset

 (third row, first column) by subtracting 
\begin_inset Formula $\frac{5}{3}$
\end_inset

 times the first row from the third row,
\end_layout

\begin_layout Enumerate
eliminating the number in the third row, second column, produced in the
 2.
\begin_inset space ~
\end_inset

step.
\end_layout

\begin_layout Standard
The results after the first two steps are as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
3a+2b+c-5 & =0,\label{eq:lindemo1-1}\\
0+\frac{5}{3}b-\frac{14}{3}c+\frac{16}{3} & =0,\label{eq:lindemo2-1}\\
0-\frac{13}{3}b+\frac{1}{3}c+\frac{4}{3} & =0.\label{eq:lindemo3-1}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Finally, the third step needs to eliminate 
\begin_inset Formula $-\frac{13}{3}b$
\end_inset

 which can be solved by adding 
\begin_inset Formula $\frac{3}{5}\cdot\frac{13}{3}$
\end_inset

 times the 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo2-1"

\end_inset

 to 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo3-1"

\end_inset

, here 
\begin_inset Formula $\frac{3}{5}$
\end_inset

 is the reciprocal of the coefficient of 
\begin_inset Formula $b$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo2-1"

\end_inset

 and 
\begin_inset Formula $\frac{13}{3}$
\end_inset

 is the coeffecient of 
\begin_inset Formula $b$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo3-1"

\end_inset

.
 Now we achieved a row echelon form of the example:
\begin_inset Formula 
\begin{align}
3a+2b+c-5 & =0,\label{eq:lindemo1-1-1}\\
0+\frac{5}{3}b-\frac{14}{3}c+\frac{16}{3} & =0,\label{eq:lindemo2-1-1}\\
0+0-\frac{59}{5}c+\frac{76}{5} & =0.\label{eq:lindemo3-1-1}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
By using 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo3-1-1"

\end_inset

 the solution 
\begin_inset Formula $c=\frac{76}{59}$
\end_inset

 can be read off.
 Then, by using consecutive substitions, solutions for 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $a$
\end_inset

 can also be achieved.
 We can even omit 
\begin_inset Formula $c$
\end_inset

 and set up two equations with variables 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 after substitution 
\begin_inset Formula $c\mapsto\frac{76}{59}$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo1"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo2"

\end_inset

.
\end_layout

\end_deeper
\begin_layout Example
We highlight the elimination step 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo2"

\end_inset


\begin_inset Formula $-\frac{2}{3}$
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo1"

\end_inset

, or by using a similar algorithm (to avoid divisions) 
\begin_inset Formula $3$
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo2"

\end_inset


\begin_inset Formula $-2$
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lindemo1"

\end_inset

, the latter is more widely used in secondary school.
 Buchberger's concept of solving multivariate (but higher order) equation
 systems is a similar idea: to define a generalized elimination step for
 polynomials 
\begin_inset Formula $p_{1}$
\end_inset

 and 
\begin_inset Formula $p_{2}$
\end_inset

 to cancel their 
\begin_inset Quotes eld
\end_inset

first term
\begin_inset Quotes erd
\end_inset

 by using a suitable 
\begin_inset Formula $q_{1}p_{1}-q_{2}p_{2}$
\end_inset

 product.
 In Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:lindemo"

\end_inset

 we automatically assumed that the variables 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 have a natural order, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset


\begin_inset Formula $a$
\end_inset

 has to be cancelled first, and then 
\begin_inset Formula $b$
\end_inset

, but this kind of ordering is not trivial when the equations have non-linear
 terms.
\end_layout

\begin_layout Example
For example, given an equation consisting of 
\emph on
monomials
\begin_inset Index idx
status open

\begin_layout Plain Layout
monomial
\end_layout

\end_inset


\emph default
 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $a^{2}$
\end_inset

, 
\begin_inset Formula $ab^{2}$
\end_inset

, 
\begin_inset Formula $a^{2}b$
\end_inset

 and 
\begin_inset Formula $b^{3}$
\end_inset

 one needs to agree on which is considered 
\begin_inset Quotes eld
\end_inset

less
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

greater
\begin_inset Quotes erd
\end_inset

.
 It is possible to define several 
\begin_inset Quotes eld
\end_inset

logical
\begin_inset Quotes erd
\end_inset

 orders, since the only requirements are that the compatibility with multiplicat
ion must be respected, that is:
\end_layout

\begin_layout Enumerate
if 
\begin_inset Formula $u<v$
\end_inset

 and 
\begin_inset Formula $w$
\end_inset

 is any other monomial, then 
\begin_inset Formula $uw<vw$
\end_inset

,
\end_layout

\begin_layout Enumerate
\begin_inset Formula $1<u$
\end_inset

 for any 
\begin_inset Formula $u$
\end_inset

 monomial.
\end_layout

\begin_layout Standard
Well known and widely used 
\begin_inset Index idx
status open

\begin_layout Plain Layout
ordering
\end_layout

\end_inset

orderings are, for example:
\end_layout

\begin_layout Itemize
Lexicographic order: it first compares exponents of 
\begin_inset Formula $a$
\end_inset

 in monomials, and in case of equality compares exponents of 
\begin_inset Formula $b$
\end_inset

, and so forth.
 In our case, it produces 
\begin_inset Formula $a^{2}b>a^{2}>ab^{2}>a>b^{3}>1$
\end_inset

, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

power of 
\begin_inset Formula $a$
\end_inset

 dominates.
\end_layout

\begin_layout Itemize
Graded lexicographic order: it first compares the total degree (sum of exponents
), and in case of a tie applies lexicographic order.
 In our case, it produces 
\begin_inset Formula $a^{2}b>ab^{2}>b^{3}>a^{2}>a>1$
\end_inset

.
\end_layout

\begin_layout Itemize
Graded reverse lexicographic order: it first the total degree, but then
 compares exponents like the variables had a reverse order.
 In our case, it produces 
\begin_inset Formula $b^{3}>ab^{2}>a^{2}b>a^{2}>a>1$
\end_inset

.
\end_layout

\begin_layout Standard
Now we can define the crucial elimination step of Buchberger's.
 Assume that we fix the monomial ordering to be 
\begin_inset Quotes eld
\end_inset

lexicographic
\begin_inset Quotes erd
\end_inset

 for this example.
 Let 
\begin_inset Formula $p_{1}=a^{2}+b^{2}$
\end_inset

, 
\begin_inset Formula $p_{2}=ab+b^{3}$
\end_inset

; note that the monomials are written accordingly to the defined ordering.
 Now by choosing 
\begin_inset Formula $q_{1}=b$
\end_inset

 and 
\begin_inset Formula $q_{2}=a$
\end_inset

, 
\begin_inset Formula $q_{1}p_{1}-q_{2}p_{2}=b\cdot(a^{2}+b^{2})-a\cdot(ab+b^{3})=-ab^{3}+b^{3}$
\end_inset

.
 This way of elimination will be called 
\emph on
S-polynomial
\begin_inset Index idx
status open

\begin_layout Plain Layout
S-polynomial
\end_layout

\end_inset


\emph default
 and denoted by 
\begin_inset Formula $spol$
\end_inset

, in this case
\begin_inset Formula 
\[
spol(p_{1},p_{2})=q_{1}p_{1}-q_{2}p_{2}.
\]

\end_inset


\end_layout

\begin_layout Standard
For a more precise definition we need to define the notions as follows (here
 we use the naming convention of the Singular system).
\end_layout

\begin_layout Itemize
Leading monomial (
\begin_inset Formula $leadmonom$
\end_inset

): the first monomial in a polynomial, without any coefficient.
 E.
\begin_inset space ~
\end_inset

g.: 
\begin_inset Formula $leadmonom(p_{1})=a^{2}$
\end_inset

, 
\begin_inset Formula $leadmonom(p_{2})=ab$
\end_inset

, 
\begin_inset Formula $leadmonom(2a^{2}+b^{2})=a^{2}$
\end_inset

.
\end_layout

\begin_layout Itemize
Leading coefficient (
\begin_inset Formula $leadcoef$
\end_inset

): the coefficient of the first monomial.
 E.
\begin_inset space ~
\end_inset

g.: 
\begin_inset Formula $leadcoef(p_{1})=leadcoef(p_{2})=1$
\end_inset

, 
\begin_inset Formula $leadcoef(2a^{2}+3b^{2})=2$
\end_inset

.
\end_layout

\begin_layout Standard
When the least common multiple is denoted by 
\begin_inset Formula $lcm$
\end_inset

, we can express 
\begin_inset Formula $spol$
\end_inset

 for arbitrary pair of polynomials as follows:
\begin_inset Formula 
\begin{align*}
spol(p_{1},p_{2})= & \, lcm(leadmonom(f),leadmonom(g))\cdot\\
 & \left(\frac{f}{leadcoef(f)\cdot leadmonom(f)}-\frac{g}{leadcoef(g)\cdot leadmonom(g)}\right).
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The 
\emph on

\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
operation!--, 
\shape slanted
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout

$spol$
\end_layout

\end_inset


\end_layout

\end_inset


\emph default

\begin_inset Formula $spol$
\end_inset

 operation is an atomic step in the Buchberger algorithm.
 When computing 
\begin_inset Formula $spol$
\end_inset

 multiple times on a chain of consecutive polynomial pairs, we usually 
\emph on
reduce
\emph default
 the starting element of the chain to an ending polynomial (which does not
 have smaller total degree by all means---reduction has a different meaning
 here, as later discussed).
 However, the 
\begin_inset Formula $red$
\end_inset

 operation
\emph on

\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
operation!--, 
\shape slanted
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout

$red$
\end_layout

\end_inset


\end_layout

\end_inset


\emph default
 requires not two polynomials as its input, but one polynomial 
\begin_inset Formula $p$
\end_inset

 and a set of polynomials 
\begin_inset Formula $\{p_{1},p_{2},\ldots,p_{n}\}$
\end_inset

.
 When computing 
\begin_inset Formula $red(p;\{p_{1},p_{2},\ldots,p_{n}\})$
\end_inset

 we check in each step if the leading monomial of the current element of
 the chain is a 
\emph on
multiple
\emph default
 of any of the leading monomials of the set, if yes, an 
\begin_inset Formula $spol$
\end_inset

 operation is computed and the result is appended to the chain.
 (It is important here, that a multiple of 
\begin_inset Formula $p$
\end_inset

 is any other polynomial 
\begin_inset Formula $pq$
\end_inset

 where 
\begin_inset Formula $q$
\end_inset

 is some polynomial.
 This relation is usually denoted by writing 
\begin_inset Formula $p\mid pq$
\end_inset

.) We will see later that this 
\begin_inset Formula $red$
\end_inset

 operation is finite, and this is the essential criteria of the usability
 of Buchberger's algorithm.
\begin_inset Foot
status open

\begin_layout Plain Layout
Even later in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Interlude-2:-Usability"

\end_inset

, we will discuss a generalization of the 
\begin_inset Formula $red$
\end_inset

 operation which allows removal of a non-leading term of 
\begin_inset Formula $p$
\end_inset

 as well.
 In the literature sometimes the generalized reduction is called reduction,
 and our definition is called 
\emph on
lead-reduction
\emph default
 instead.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "wiki:gb"

\end_inset

, section 
\begin_inset Quotes eld
\end_inset

Reduction
\begin_inset Quotes erd
\end_inset

 for details.
 In this PhD thesis we use the terminology of 
\begin_inset CommandInset citation
LatexCommand cite
key "singularbook"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For simplicity, we denote the 
\begin_inset Formula $spol(p,p_{1})=p'$
\end_inset

 operation by writing
\begin_inset Formula 
\[
p\underset{p_{1}}{\rightarrow}p'.
\]

\end_inset

This helps us to write reduction chains into a form like
\begin_inset Formula 
\[
p\underset{p_{1}}{\rightarrow}p'\underset{p_{2}}{\rightarrow}p''\underset{p_{3}}{\rightarrow}\ldots
\]

\end_inset


\end_layout

\begin_layout Standard
We note here that the 
\begin_inset Formula $red$
\end_inset

 operation is not uniquely defined, because there is a freedom of choice
 between the polynomials of the set.
\end_layout

\begin_layout Standard
If there is a set of polynomials 
\begin_inset Formula $P=\{p_{1},p_{2},\ldots,p_{n}\}$
\end_inset

, one can consider computing the reduction chain for each 
\begin_inset Formula $p_{i}\neq p_{j}$
\end_inset

 by computing 
\begin_inset Formula $red(spol(p_{i},p_{j}))$
\end_inset

.
 If all of these reduction chains
\begin_inset Index idx
status open

\begin_layout Plain Layout
reduction chain
\end_layout

\end_inset

 end in 0, we call 
\begin_inset Formula $P$
\end_inset

 a 
\bar under
Gröbner basis
\bar default
.
\emph on
\bar under

\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
\bar no
Gröbner basis
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now we are ready to define the 
\bar under
Buchberger algorithm
\emph on

\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
\bar no
algorithm!--, Buchberger
\end_layout

\end_inset


\emph default
\bar default
:
\end_layout

\begin_layout Enumerate
Consider input equations (1), (2), 
\begin_inset Formula $\ldots$
\end_inset

 as polynomials 
\begin_inset Formula $p_{1},p_{2},\ldots$
\end_inset


\end_layout

\begin_layout Enumerate
Consider every 2-element set of the equation polynomials, for each set 
\begin_inset Formula $\{p_{i},p_{j}\}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
compute 
\begin_inset Formula $red(spol(p_{i},p_{j});\{p_{1},p_{2},\ldots\})$
\end_inset

,
\end_layout

\begin_layout Enumerate
if the last element of the chain (
\begin_inset Formula $p$
\end_inset

) is non-zero,
\end_layout

\begin_deeper
\begin_layout Enumerate
divide 
\begin_inset Formula $p$
\end_inset

 by 
\begin_inset Formula $leadcoef(p)$
\end_inset

,
\end_layout

\begin_layout Enumerate
add 
\begin_inset Formula $p$
\end_inset

 to the input equations,
\end_layout

\begin_layout Enumerate
add each 
\begin_inset Formula $\{p_{i},p\}$
\end_inset

 set to the 2-element sets to consider.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
The output of the algorithm is the result set of equations (i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

polynomials).
 Obviously this output is necessarily a Gröbner basis by construction.
\end_layout

\begin_layout Standard
We note here also that the selection order of the 2-element sets may definitely
 change the output of the Buchberger algorithm.
 That is, here is another freedom of choice.
\end_layout

\begin_layout Standard
In the following example we select the 
\begin_inset Quotes eld
\end_inset

first
\begin_inset Quotes erd
\end_inset

 fitting polynomial from the set for the 
\begin_inset Formula $red$
\end_inset

 operation, and we use the order 
\begin_inset Formula $\{p_{1},p_{2}\}$
\end_inset

,
\begin_inset Formula $\{p_{1},p_{3}\}$
\end_inset

, 
\begin_inset Formula $\ldots$
\end_inset

, 
\begin_inset Formula $\{p_{2},p_{3}\}$
\end_inset

, 
\begin_inset Formula $\ldots$
\end_inset

 for the 2-element sets; our input is the same as in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:lindemo"

\end_inset

.
 The output is generated by a Singular program (see its source code 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:The-Buchberger-algorithm"

\end_inset

)
\begin_inset Foot
status open

\begin_layout Plain Layout
Of course (as shown in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "grobner-cas"

\end_inset

), Singular has a simple statement as well to compute the Gröbner basis
 of a set a polynomials with respect to an ordering.
\end_layout

\end_inset

.
 We use the notation 
\begin_inset Formula $p\sim q$
\end_inset

 if for some constant 
\begin_inset Formula $c$
\end_inset

 
\begin_inset Formula $p=cq$
\end_inset

 holds.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "linout-dp-1-1-mini.tex"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
The algorithm produced equations (4) and (5) which, together with (1), build
 up a row echelon form, similar to which was obtained by Gauss elimination
 in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:lindemo"

\end_inset

.
\end_layout

\begin_layout Standard
It is easy to see that (4) and (5) are such equations which have the same
 solutions as for the input system: atomically only the 
\begin_inset Formula $spol$
\end_inset

 operation (and a division by the leading coefficient) was used, which is
 esentially elimination, thus it preserves the solutions (i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

it does not remove roots or adds false roots).
\end_layout

\begin_layout Standard
It is more difficult to see why exactly the Buchberger algorithm is useful.
 Since 
\begin_inset Formula $spol(p_{1},p_{2})$
\end_inset

 is about to eliminate the leading term in 
\begin_inset Formula $p_{1}$
\end_inset

 and 
\begin_inset Formula $p_{2}$
\end_inset

, the reduction processes practically try to do some kind of 
\begin_inset Quotes eld
\end_inset

deep search
\begin_inset Quotes erd
\end_inset

 for such linear combinations of the input equations which contain as small
 monomials (with respect to the assumed ordering, here lexicographic) as
 possible.
 In our example the 
\begin_inset Quotes eld
\end_inset

theoretically smallest possible
\begin_inset Quotes erd
\end_inset

 monomial is 
\begin_inset Formula $c$
\end_inset

, therefore we expect to obtain an ending chain element in the form 
\begin_inset Formula $c\pm\alpha$
\end_inset

 (where 
\begin_inset Formula $\alpha\in\mathbb{Q}$
\end_inset

), as seen in the reduction chain when eliminating terms of (2) and (3).
 If we choose a suitable monomial ordering, we have good chances to get
 useful new equations before the last equation as well: if 
\begin_inset Formula $b$
\end_inset

 directly precedes 
\begin_inset Formula $c$
\end_inset

 in the ordering, then for the last two candidates for the smallest polynomials
 are 
\begin_inset Formula $b+\alpha'c\pm\alpha''$
\end_inset

 (here 
\begin_inset Formula $\alpha',\alpha\in\mathbb{Q}$
\end_inset

) and 
\begin_inset Formula $c\pm\alpha$
\end_inset

.
 The graded lexicographical order is exactly what here helpful can be, hence
 by using it we usually get a row echelon form of the equation.
\end_layout

\begin_layout Standard
It is even more difficult to see why the Buchberger algorithm is finite.
 For this purpose, we consider another example.
\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "ex:2conics"

\end_inset

Let us consider hyperbolas 
\begin_inset Formula $c:2x^{2}-y^{2}=5$
\end_inset

, 
\begin_inset Formula $d:x^{2}-2y^{2}=1$
\end_inset

.
 We are interested in finding their intersection points symbolically (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-2conics1"

\end_inset

).
 Clearly these intersections are 
\begin_inset Formula $(\pm\sqrt{3},\pm1)$
\end_inset

, 4 points which are easy to compute.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename 2conics1.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Intersection of two hyperbolas
\begin_inset CommandInset label
LatexCommand label
name "fig-2conics1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now we slightly change the hyperbolas by considering 
\begin_inset Formula $c':2x^{2}-y^{2}+x=5$
\end_inset

 and 
\begin_inset Formula $d':x^{2}-2y^{2}+y=1$
\end_inset

, and test the Buchberger algorithm with input 
\begin_inset Formula $p_{1}=2x^{2}-y^{2}+x-5$
\end_inset

 and 
\begin_inset Formula $p_{2}=x^{2}-2y^{2}+y-1$
\end_inset

 by using the lexicographic order again (by choosing the same selection
 algorithms at both freedom of choices).
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "2conics-lp-1-1-mini.tex"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
Though the solution of Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:lindemo"

\end_inset

 via the Buchberger algorithm produced strangely long reduction chains (because
 non-linear polynomials appeared in them---they seem irrelevant to solve
 a linear equation system), here we experience that they can be horrifying
 long.
 This shows not only the computational complexity of the deep searching
 of 
\begin_inset Quotes eld
\end_inset

nice looking
\begin_inset Quotes erd
\end_inset

 linear combinations, but in our example also the finite property of it
 can be understood.
\end_layout

\begin_layout Standard
For example, the reduction chain 
\begin_inset Formula $e_{1}\rightarrow e_{2}\rightarrow\ldots$
\end_inset

 started by 
\begin_inset Formula $spol((2),(4))$
\end_inset

 contains the following leading monomials (from the second element of the
 chain, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset


\begin_inset Formula $leadmonom(e_{2})=x^{2}y^{3}$
\end_inset

):
\begin_inset Formula 
\[
x^{2}y^{3},x^{2}y^{2},x^{2}y,x^{2},xy^{3},xy^{2},xy,x,y^{6},y^{5},y^{4},
\]

\end_inset


\end_layout

\begin_layout Standard
each of them will be eliminated in the subsequent element of the chain.
\end_layout

\begin_layout Standard
The first element of this list, 
\begin_inset Formula $x^{2}y^{3}$
\end_inset

 cannot be followed by any greater monomial because of the following reason.
 Let us assume that in the step when processing the second element of the
 chain, the 
\begin_inset Formula $red$
\end_inset

 operation selects some 
\begin_inset Formula $p_{i}$
\end_inset

 for which 
\begin_inset Formula $leadmonom(p_{i})|x^{2}y^{3}$
\end_inset

, thus 
\begin_inset Formula $p_{i}=\alpha x^{2-A}y^{3-B}+\ldots$
\end_inset

 for some 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 integers such that 
\begin_inset Formula $0\leq A\leq2$
\end_inset

, 
\begin_inset Formula $0\leq B\leq3$
\end_inset

 (and 
\begin_inset Formula $\alpha\in\mathbb{Z}$
\end_inset

), and 
\begin_inset Formula $p_{i}$
\end_inset

 is written in a form where its leading monomial is in the first written
 term here.
 Thus if there is a monomial 
\begin_inset Formula $x^{C}y^{D}$
\end_inset

 in the 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\ldots$
\end_inset


\begin_inset Quotes erd
\end_inset

 (
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 are non-negative integers), 
\begin_inset Formula 
\begin{equation}
x^{2-A}y^{3-B}>x^{C}y^{D}\label{eq:dickson}
\end{equation}

\end_inset

must hold.
 When computing 
\begin_inset Formula $spol(e_{2},p_{i})$
\end_inset

, the eliminated monomial is 
\begin_inset Formula $x^{2}y^{3}$
\end_inset

, therefore 
\begin_inset Formula $p_{i}$
\end_inset

 will be multiplied by 
\begin_inset Formula $x^{A}y^{B}$
\end_inset

 according to convert 
\begin_inset Formula $x^{2-A}y^{3-B}$
\end_inset

 to 
\begin_inset Formula $x^{A}y^{B}$
\end_inset

, so 
\begin_inset Formula $x^{C}y^{D}$
\end_inset

 will be changed to 
\begin_inset Formula $x^{C+A}y^{D+B}$
\end_inset

.
 If 
\begin_inset Formula $x^{C+A}y^{D+B}$
\end_inset

 does not precede 
\begin_inset Formula $x^{2}y^{3}$
\end_inset

, then the monomial 
\begin_inset Formula $x^{C}y^{D}$
\end_inset

 cannot appear as 
\begin_inset Formula $leadmonom(e_{3})$
\end_inset

.
 Indeed, by multiplying 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dickson"

\end_inset

 by 
\begin_inset Formula $x^{A}y^{B}$
\end_inset

 we yield 
\begin_inset Formula $x^{2}y^{3}>x^{C+A}y^{D+B}$
\end_inset

.
 Of course, similar reasoning can be given for each leading monomial of
 the reduction chain, thus the leading monomials are decreasing with respect
 to the given ordering.
\end_layout

\begin_layout Standard
Now 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:redchain"

\end_inset

 explains why the decreasing sequence of the leading monomials must be finite.
 After 
\begin_inset Formula $x^{2}y^{3}$
\end_inset

, the later appearing exponent of 
\begin_inset Formula $x$
\end_inset

 must be 2 or less.
 The next leading monomial has the same exponent when a 
\begin_inset Quotes eld
\end_inset

red
\begin_inset Quotes erd
\end_inset

 arrow appears, but less than before if a 
\begin_inset Quotes eld
\end_inset

blue
\begin_inset Quotes erd
\end_inset

 arrow is shown.
 The red steps are clearly decrease the degree of 
\begin_inset Formula $y$
\end_inset

 of the previous monomial, but the blue ones may increase it, however, the
 exponent of 
\begin_inset Formula $x$
\end_inset

 will be less.
 Nevertheless, there can be at most as many blue 
\begin_inset Quotes eld
\end_inset

jumps
\begin_inset Quotes erd
\end_inset

 as the exponent of 
\begin_inset Formula $x$
\end_inset

 in 
\begin_inset Formula $leadmonom(e_{2})$
\end_inset

, and the sum of the exponents of 
\begin_inset Formula $y$
\end_inset

 after the jumps is an upper limit for the total number of reduction steps.
 The blue jumps can be, however, rather big, and it is difficult to predict
 how big they will be.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename dickson.png
	lyxscale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Leading monomials of a reduction chain
\begin_inset CommandInset label
LatexCommand label
name "fig:redchain"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

Now we can see why a reduction chain is necessarily finite.
 But it is still a question if the number of the reduction chains remains
 finite during the whole Buchberger algorithm.
 To answer this question we consider another example.
\end_layout

\begin_layout Example
\begin_inset CommandInset label
LatexCommand label
name "ex:noisy"

\end_inset

We add some extra noise to Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:2conics"

\end_inset

, namely to get the input polynomials 
\begin_inset Formula $p_{1}=2x^{2}-y^{2}+x+x^{3}-5$
\end_inset

 and 
\begin_inset Formula $p_{2}=x^{2}-2y^{2}+y+y^{4}-1$
\end_inset

.
 Since the reduction chains now become extremely long, we prefer to use
 the notation 
\begin_inset Formula $\underset{n\times}{p\dashrightarrow p'}$
\end_inset

 to report the number 
\begin_inset Formula $n$
\end_inset

 of elements of the chain, but ignore the elements, except the first 
\begin_inset Formula $p$
\end_inset

 and the last 
\begin_inset Formula $p'$
\end_inset

 polynomials.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "noisy-mini.tex"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
Since we have plenty of newly added equations, we can investigate them,
 in particular to check their leading monomials:
\begin_inset Formula 
\[
xy^{4},xy^{2},y^{12},xy,x.
\]

\end_inset


\end_layout

\begin_layout Standard
When comparing the newly added equations, we will find that the leading
 monomial of a new equation cannot be a multiple of the leading monomial
 of a formerly added equation.
 In general, this property is easy to see: if 
\begin_inset Formula $p_{i}$
\end_inset

 is an earlier added equation than 
\begin_inset Formula $p_{j}$
\end_inset

, then in the reduction which obtained 
\begin_inset Formula $p_{j}$
\end_inset

 there was surely a check to test if 
\begin_inset Formula $leadmonom(p_{i})|leadmonom(p_{j})$
\end_inset

, and this check must have been false---otherwise the chain would have continued
 with the atomic step 
\begin_inset Formula $p_{j}\underset{p_{i}}{\rightarrow}\ldots$
\end_inset

, which cannot be the case since 
\begin_inset Formula $p_{j}$
\end_inset

 is the last element of the chain (that is why it was added as an equation).
 That is, 
\begin_inset Formula $leadmonom(p_{i})\nmid leadmonom(p_{j})$
\end_inset

 holds.
\end_layout

\begin_layout Standard
Now let us find the reason why the sequence of the leading monomials here
 cannot be infinite.
 The first element is 
\begin_inset Formula $xy^{4}$
\end_inset

 which prevents the forthcoming elements to be a multiple of itself.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dickson-1"

\end_inset

 we marked the 
\begin_inset Quotes eld
\end_inset

unallowed area
\begin_inset Quotes erd
\end_inset

 in pink.
 The element 
\begin_inset Formula $xy^{4}$
\end_inset

 also determines 5 infinite regions for the forthcoming monomials, we will
 call them 
\begin_inset Quotes eld
\end_inset

infinite columns
\begin_inset Quotes erd
\end_inset

 (in green) and 
\begin_inset Quotes eld
\end_inset

infinite rows
\begin_inset Quotes erd
\end_inset

 (in blue).
 In our example there is only 1 infinite column, but 4 infinite rows.
 
\end_layout

\begin_layout Standard
The second leading monomial is 
\begin_inset Formula $xy^{2}$
\end_inset

.
 It determines another unallowed area (which is, in our case, a superset
 of the first unallowed area), and disabled two of the infinite rows, therefore
 there are only two infinite rows (and one infinite column) left (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dickson-2"

\end_inset

).
\end_layout

\end_deeper
\begin_layout Example
The next element, 
\begin_inset Formula $y^{12}$
\end_inset

 disables the infinite column, and the next one, 
\begin_inset Formula $xy$
\end_inset

 disables one of the remaining infinite rows.
 The results are shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dickson-3"

\end_inset

.
\end_layout

\begin_layout Example
Now let us stop here for a moment and investigate the possible next step.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dickson-3"

\end_inset

 we can see that the new monomial can be either a member of the remaining
 one infinite row, or a member of the remaining, previously uncolored points,
 now colored with red.
 This case, namely that a new monomial either disables one or more infinite
 rows or columns and/or the previously uncolored points, is a general case.
 Here, as the last step, 
\begin_inset Formula $x$
\end_inset

 disables the only infinite row, and unreversibly leaves only a finite amount
 of points as possible next steps, namely the points being colored with
 red.
\end_layout

\begin_layout Example
To summarize what we found: each new monomial in the sequence either
\end_layout

\begin_layout Enumerate
disables at least one 
\begin_inset Quotes eld
\end_inset

uncolored
\begin_inset Quotes erd
\end_inset

 point, thus it decreases the number of possible remaining cases by a finite
 number, or
\end_layout

\begin_layout Enumerate
disables at least one infinite row or column, and possibly increases the
 number of possible remaining cases by a finite number.
\end_layout

\begin_layout Standard
In our example each monomial is in the second option, and 
\begin_inset Formula $y^{12}$
\end_inset

 also adds some extra remaining cases (by the price of disabling the infinite
 column).
\end_layout

\begin_layout Standard
The only way to preserve the infinite rows and columns is to choose the
 monomials from the uncolored area.
 But it contains just a finite number of points, therefore after a while
 it is obligate to disable an infinite row or column.
 Since at the beginning there were just a finite number of infinite rows
 and columns, in finite number of steps all of them will be disabled.
\end_layout

\begin_layout Standard
This ensures that the sequence of the leading monomials in the newly added
 equations is finite, hence the Buchberger algorithm always stops in finitely
 many steps.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename dickson1.png
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Argument
status open

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Unallowed area
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

infinite column
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

infinite rows
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\begin_inset Quotes eld
\end_inset

Unallowed area
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

infinite column
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

infinite rows
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:dickson-1"

\end_inset


\begin_inset Newline newline
\end_inset

for proving finiteness of the Buchberger algorithm
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename dickson2.png
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Unallowed areas, infinite column and infinite rows, 2nd step
\begin_inset CommandInset label
LatexCommand label
name "fig:dickson-2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename dickson3.png
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Unallowed areas and infinite row, 4th step
\begin_inset CommandInset label
LatexCommand label
name "fig:dickson-3"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Remark
In the above we followed a non-standard way to introduce the concept of
 Gröbner bases.
 Despite our proofs were based on examples, they can be considered mathematicall
y correct, however some properties were proven just for the 2 dimensional
 case.
 Our arguments can easily be extended to cover the general, 
\begin_inset Formula $n$
\end_inset

 dimensional case as well.
\end_layout

\begin_deeper
\begin_layout Remark
Finally we summarize the way how we introduced Gröbner bases in this thesis:
\end_layout

\begin_layout Enumerate
Learn the concept of elimination from linear algebra.
\end_layout

\begin_layout Enumerate
Introduce the need for monomial ordering in the non-linear case.
\end_layout

\begin_layout Enumerate
Generalize elimination by defining the atomic 
\begin_inset Formula $spol$
\end_inset

 operation.
\end_layout

\begin_layout Enumerate
Use many 
\begin_inset Formula $spol$
\end_inset

 operations and introduce the notion of reduction chains.
\end_layout

\begin_layout Enumerate
Study 
\begin_inset Quotes eld
\end_inset

deep search
\begin_inset Quotes erd
\end_inset

 facility of reduction chains and conclude capability of producing an echelon
 form.
\end_layout

\begin_layout Enumerate
Prove finiteness of a reduction chain (in 2 dimensions).
\end_layout

\begin_layout Enumerate
Prove finiteness of the number of the added equations (in 2 dimensions).
\begin_inset Foot
status open

\begin_layout Plain Layout
This step is usually called 
\emph on
Dickson's lemma
\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
lemma!--, Dickson's
\end_layout

\end_inset


\emph default
 in the literature.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We emphasize here that the notion of 
\emph on
ideal
\emph default
 was completely avoided, therefore this minimalistic approach can also be
 discussed with much less preliminary knowledge than usually textbooks expect.
\end_layout

\begin_layout Remark
GCLC's computation for obtaining a Gröbner basis is very similar to the
 currently discussed steps (see 
\begin_inset Quotes eld
\end_inset

5 Invoking the theorem prover
\begin_inset Quotes erd
\end_inset

 after page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "ogp-output"

\end_inset

).
\end_layout

\end_deeper
\begin_layout Subsubsection
Interlude 2: Usability and uniqueness of the Buchberger algorithm
\begin_inset CommandInset label
LatexCommand label
name "sub:Interlude-2:-Usability"

\end_inset


\end_layout

\begin_layout Standard
Now we have a general tool to bring an equation system to a row echelon
 form.
 From this state it should be possible to read off the solutions one by
 one, and by substituting the solutions back to the equations, some variables
 could be omitted.
 Also this process itself is called 
\emph on
elimination
\emph default
 in the theory of Gröbner bases.
 To avoid confusion, we call the required steps
\emph on
\bar under

\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
\bar no
elimination process
\end_layout

\end_inset


\emph default
\bar default
 
\emph on
\bar under
elimination process
\emph default
\bar default
 in this subsection.
\end_layout

\begin_layout Standard
For instance, in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:noisy"

\end_inset

 solving (5) leads to success in eliminating 
\begin_inset Formula $y$
\end_inset

, since an equation in one variable can be formulated and solved.
 However, the equation 
\begin_inset Formula 
\[
y^{12}-6y^{10}+3y^{9}+11y^{8}-12y^{7}+\ldots=0
\]

\end_inset


\end_layout

\begin_layout Standard
has degree 12 and there may be no algebraic ways to solve it by using the
 4 basic operations and computing roots, there are theories, tools and technique
 to handle the situation:
\end_layout

\begin_layout Itemize
sometimes the equation can be simply omitted if the variables are no longer
 used,
\end_layout

\begin_layout Itemize
often the substitution needs to be done symbolically by using suitable methods,
\end_layout

\begin_layout Itemize
or even numerical approximations can be used for solving certain problems.
\end_layout

\begin_layout Standard
When thinking traditionally, in our case we could probably use (7) to determine
 
\begin_inset Formula $x$
\end_inset

 as the final step in solving the equation system.
 Here the equation
\begin_inset Formula 
\[
x=-\frac{1}{59648}y^{18}-\frac{1}{14912}y^{16}+\frac{1}{29824}y^{15}+\frac{5}{59648}y^{14}+\ldots
\]

\end_inset

seems rather difficult to be solved symbolically, even if 
\begin_inset Formula $y$
\end_inset

 is already determined by a single equation in one variable.
 On the other hand, numerical approximation of both 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 seems to be a simple task.
 But, as we remarked earlier, we do 
\emph on
not
\emph default
 actually need to 
\emph on
solve
\emph default
 any equations, since our expected output is either 
\emph on
the decision of solvability
\emph default
 or an 
\emph on
equivalent equation system
\emph default
.
\end_layout

\begin_layout Standard
Now we stop continuing to study the technical details how the elimination
 process is usually done behind the scenes, but highlight some questions
 concerning our black box approach which was introduced earlier.
 The biggest issue is uniqueness of the output of such a black box which
 eliminates some variables from an equation system and returns an equivalent
 system.
\end_layout

\begin_layout Standard
Obviously, to carry through the elimination process it is required to compute
 a Gröbner basis of the input first.
 In the previous section we mentioned that we have two freedom of choices
 when 
\end_layout

\begin_layout Enumerate
computing the 
\begin_inset Formula $red$
\end_inset

 operation and 
\end_layout

\begin_layout Enumerate
choosing two equations in the Buchberger algorithm.
\end_layout

\begin_layout Standard
We re-compute Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:lindemo"

\end_inset

 with various settings 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:Freedom-of-choice"

\end_inset

 to show that the result of the Buchberger algorithm will differ when we
 change our choices.
\end_layout

\begin_layout Standard
In Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:lindemo"

\end_inset

 we did not mention that the Buchberger algorithm can be continued to remove
 some of the equations which are not necessary in computing the solutions
 of the equation system, since they will play no role in building up a row
 echelon form.
 In fact, here we have another, the third freedom of choice, namely to ignore
 any two of equations (1), (2) or (3), since either 
\begin_inset Formula $\{(1),(4),(5)\}$
\end_inset

, 
\begin_inset Formula $\{(2),(4),(5)\}$
\end_inset

 or 
\begin_inset Formula $\{(3),(4),(5)\}$
\end_inset

 build up a row echelon form.
 (Here we do not consider that different monomial orders usually result
 in different Gröbner bases---it would be another freedom of choice, but
 usually practically not useful because of the infeasible computation time
 or the wrong deep search direction.)
\end_layout

\begin_layout Standard
This means that we cannot really tell what exactly happens in a computer
 algebra system when we consider it a black box which simply computes a
 Gröbner basis of the input polynomials, or eliminates variables from a
 set of equations.
 It seems, however, that the internal implementation of the Gröbner basis
 computation can still be influenced when the input polynomials are ordered
 differently, or the internal ordering of the free or the dependant variables
 differ.
 On the other hand, there 
\emph on
is
\emph default
 uniqueness in computing Gröbner bases when we continue the calculations
 as follows.
\end_layout

\begin_layout Enumerate
First of all, we considered the 
\emph on

\begin_inset Formula $spol$
\end_inset


\emph default
 operation only which removes the leading monomial of the first input polynomial
 
\begin_inset Formula $p_{1}$
\end_inset

.
 But we did not consider any other usual operations between two polynomials,
 namely other 
\begin_inset Formula 
\[
q_{1}p_{1}-q_{2}p_{2}
\]

\end_inset

expressions which are also allowed when solving polynomial equations manually.
 After having a Gröbner basis of the input polynomials, one may think of
 computing such expressions and substitute 
\begin_inset Formula $p_{1}$
\end_inset

 by 
\begin_inset Formula $1\cdot p_{1}-q_{2}p_{2}$
\end_inset

 in the Gröbner basis if a term of 
\begin_inset Formula $p_{1}$
\end_inset

 is removed by using the leading monomial of 
\begin_inset Formula $p_{2}$
\end_inset

.
 It is easy to see that by deleting 
\begin_inset Formula $p_{1}$
\end_inset

 from the basis and adding 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $p_{1}-q_{2}p_{2}$
\end_inset

 instead, the result is again a Gröbner basis.
 We may call this operation 
\family default
\series default
\shape default
\size default
\emph on
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
final reduction
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 (
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $fred$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
) or 
\family default
\series default
\shape default
\size default
\emph on
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
general reduction
\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
operation!--, 
\shape slanted
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout

$fred$
\end_layout

\end_inset


\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 to emphasize its algorithmical position after having a Gröbner basis or
 to distinguish it from lead-reduction (i.
\begin_inset space ~
\end_inset

e., the 
\begin_inset Formula $spol$
\end_inset

 operation).
 That is, 
\begin_inset Formula $fred(p_{1},p_{2})$
\end_inset

 is a one-step reduction, and to ensure final uniqueness, we 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
divide the result by the leading coefficient (in other words, we 
\begin_inset Quotes eld
\end_inset

norm
\begin_inset Quotes erd
\end_inset

 the result).
\begin_inset Foot
status open

\begin_layout Plain Layout
In the literature sometimes the 
\begin_inset Formula $fred$
\end_inset

 operation is simply called 
\emph on
reduction
\emph default
, 
\emph on
multivariate division
\emph default
 or 
\emph on
normal form
\emph default
.
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
GCLC uses the same operation to check if the thesis (
\begin_inset Quotes eld
\end_inset

conclusion
\begin_inset Quotes erd
\end_inset

) is a logical consequence of the input polynomial system (see 
\begin_inset Quotes eld
\end_inset

6 Reducing Polynomial Conjecture
\begin_inset Quotes erd
\end_inset

 after page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "ogp-output"

\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Second, one may think of removing certain elements of the Gröbner basis
 which are unneeded to describe the equation system when the other elements
 already exist in the basis.
 It can be proven that if for some 
\begin_inset Formula $p_{1}$
\end_inset

 and 
\begin_inset Formula $p_{2}$
\end_inset

 elements 
\begin_inset Formula $leadmonom(p_{1})|leadmonom(p_{2})$
\end_inset

 then 
\begin_inset Formula $p_{2}$
\end_inset

 can be removed from the basis, and the result set remains an equivalent
 Gröbner basis.
\end_layout

\begin_layout Standard
By using the above steps (practically, first Step 2 and then Step 1), a
 Gröbner basis can be minimized and reduced (and normed).
 A general theorem of the Gröbner basis theory that for a given ordering
 the minimized--reduced--normed
\begin_inset Index idx
status open

\begin_layout Plain Layout

\series medium
Gröbner basis!--, minimal--reduced--normed
\end_layout

\end_inset

 transcription of a Gröbner basis gives a unique result.
 For more on this see, for example, 
\begin_inset CommandInset citation
LatexCommand cite
key "winkler"

\end_inset

.
 We demonstrate this concept on a detailed example in 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Remarks-on-the"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Uniqueness-of-a"

\end_inset

.
\end_layout

\begin_layout Standard
Sometimes it is useful to get more different Gröbner bases as the outputs
 for our computation.
 The reason is that in many cases the first output cannot be interpreted
 to describe human readable sufficient conditions.
 In such cases it can be fruitful to make an attempt to change the black
 box's behavior on the input to produce a differently looking output.
\end_layout

\begin_layout Standard
In the following section we consider some possible ways to influence the
 black box in order to get at least one suitable output to show human readable
 sufficient conditions.
 We will use Singular's internal implementation with ordering 
\begin_inset Quotes eld
\end_inset

dp
\begin_inset Quotes erd
\end_inset

 which is the graded lexicographical order, assuming 
\begin_inset Formula $v_{3}>v_{4}>\ldots$
\end_inset

 by default.
 In this way Singular will search for adding new equations in the dependent
 variables---here the first variables, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset


\begin_inset Formula $v_{3}$
\end_inset

, 
\begin_inset Formula $v_{4}$
\end_inset

 and so forth, are usually the independent ones.
 These new equations will be removed after bringing the equation system
 to a row echelon form, that is, the dependent variables will simply disappear.
 This is exactly what we need: to preserve the independent variables and
 ignore the dependent ones.
\end_layout

\begin_layout Subsubsection
Permuting the independent variables
\begin_inset CommandInset label
LatexCommand label
name "sub:Permuting-the-independent"

\end_inset


\end_layout

\begin_layout Standard
In Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:thales"

\end_inset

 and Example
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:eulerline"

\end_inset

 we had four independent variables (
\begin_inset Formula $v_{3},v_{4},v_{5},v_{6}$
\end_inset

) which had to be ordered somehow before sending the input to the black
 box.
 In Thales' theorem all possible permutations yielded the same output, but
 for first approach for Euler's line we mentioned that it is possible to
 get different sets for some orderings.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Remarks-on-the"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Different-equation-systems"

\end_inset

 we can see that for orderings 
\begin_inset Formula $v_{5},v_{3},v_{4},v_{6}$
\end_inset

 and 
\begin_inset Formula $v_{6},v_{4},v_{3},v_{5}$
\end_inset

 we get 6 equations after the elimination, but otherwise all equation systems
 consist of 5 equations.
\end_layout

\begin_layout Standard
Luckily, in those two examples the number of permutations is low, 
\begin_inset Formula $4!=24$
\end_inset

, thus we need to call the black box only 24 times to get all possible equation
 sets, and this still can be computed in a reasonable time.
 If there were more free points (as in the next example), the number of
 cases would increase very quickly.
\end_layout

\begin_layout Standard
Many problems in elementary geometry are about triangles.
 This means that fortunately we can have an easy situation in many cases:
 we have to deal with four independent variables, and retry steps in our
 algorithm between Step 2 and Step 7 with another permutation of the variables,
 if there is no usable result yet.
 In fact, in most cases the four independent variables can be limited to
 2 if there is no half-dependent point (see below) since most statements
 about triangles are invariant for similarity, thus we can put not only
 
\begin_inset Formula $A$
\end_inset

 to 
\begin_inset Formula $(0,0)$
\end_inset

 but also 
\begin_inset Formula $B$
\end_inset

 to 
\begin_inset Formula $(0,1)$
\end_inset

.
\end_layout

\begin_layout Example
In spite of the number of independent variables, Pappus' hexagon theorem
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, Pappus' hexagon
\end_layout

\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig-pappos"

\end_inset

) is a beautiful example of the strengh of our algorithm and shows the importanc
e of the variable ordering as well.
 We will also see that it can be difficult to choose automatically a useful
 variable permutation.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ProveDetails/Pappus.pdf
	lyxscale 140
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Pappus' hexagon theorem
\begin_inset CommandInset label
LatexCommand label
name "fig-pappos"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Here we have four free points: 
\begin_inset Formula $A,\, B,\, C$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

, and points 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 have also some kind of freedom: they lie on lines 
\begin_inset Formula $AB$
\end_inset

 and 
\begin_inset Formula $CD$
\end_inset

, respectively, but otherwise their are independent.
 Practically, this means that we define each of their coordinates to be
 dependent (and the other to be independent).
 We can call 
\begin_inset Formula $E$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 
\emph on
half-dependent
\emph default
 points.
\end_layout

\begin_layout Standard
It is important to point out that this is the reason why we cannot fix another
 point, say 
\begin_inset Formula $B$
\end_inset

, to, say 
\begin_inset Formula $(0,1)$
\end_inset

---we already assumed that 
\begin_inset Formula $A=(0,0)$
\end_inset

.
 In this case we could not arbitrarily choose a coordinate of a half-dependent
 point, at least not automatically.
 Why? If we set 
\begin_inset Formula $B$
\end_inset

 to 
\begin_inset Formula $(0,1)$
\end_inset

 and use the second coordinate of 
\begin_inset Formula $E$
\end_inset

 to be independent (since 
\begin_inset Formula $v_{9}=0$
\end_inset

 according to the collinearity of 
\begin_inset Formula $A,\, B,\, E$
\end_inset

, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset


\begin_inset Formula $v_{9}$
\end_inset

 is already dependent), in some Euclidean construction steps we can obviously
 create a perpendicular line 
\begin_inset Formula $p$
\end_inset

 to 
\begin_inset Formula $AB$
\end_inset

, and now a construction step may prescribe choosing a half-dependent point
 on 
\begin_inset Formula $p$
\end_inset

.
 But we can no longer claim that the second coordinates will be chosen to
 be independent for all half-dependent points since 
\begin_inset Formula $p$
\end_inset

 is horizontal, and its second coordinate is already fixed (namely, to 0).
\end_layout

\begin_layout Remark
\begin_inset CommandInset label
LatexCommand label
name "B(1,1)"

\end_inset

One may have the idea to put 
\begin_inset Formula $B$
\end_inset

 to 
\begin_inset Formula $(1,1)$
\end_inset

 or to another grid point, say 
\begin_inset Formula $(m,n)$
\end_inset

.
 Unfortunately, this will not work.
 To learn why, let 
\begin_inset Formula $d$
\end_inset

 be the length of segment 
\begin_inset Formula $AB$
\end_inset

: 
\begin_inset Formula $d=\sqrt{m^{2}+n^{2}}$
\end_inset

, now one can create a right triangle with sides 
\begin_inset Formula $m\cdot d$
\end_inset

 and 
\begin_inset Formula $n\cdot d$
\end_inset

 by using Euclidean steps.
 The hypothenuse of this triangle is clearly 
\begin_inset Formula $\sqrt{(m\cdot d)^{2}+(n\cdot d)^{2}}=m^{2}+n^{2}$
\end_inset

.
 By using the intercept theorem
\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!--, intercept
\end_layout

\end_inset

 one can construct the unit length by Euclidean steps.
 Now define circles 
\begin_inset Formula $c_{1}$
\end_inset

 and 
\begin_inset Formula $c_{2}$
\end_inset

 with centers 
\begin_inset Formula $A,\, B$
\end_inset

 and radii 
\begin_inset Formula $m\cdot1,\, n\cdot1$
\end_inset

, respectively.
 One of the intersection points of the circles will be 
\begin_inset Formula $T_{x}=(m,0)$
\end_inset

.
 Now the line passing through 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $T_{x}$
\end_inset

 is the 
\begin_inset Formula $x$
\end_inset

-axis.
 A similar construction can be done with point 
\begin_inset Formula $T_{y}$
\end_inset

 for the 
\begin_inset Formula $y$
\end_inset

-axis.
 Now there may be steps which prescribe to put an arbitrary point on the
 
\begin_inset Formula $x$
\end_inset

-axis or the 
\begin_inset Formula $y$
\end_inset

-axis.
 Thus we cannot tell in advance that we will use only the first or only
 the second coordinate as the dependant one in general.
\end_layout

\begin_layout Remark
Of course, this problem affects such constructions only which contain half-depen
dent points.
\end_layout

\begin_layout Standard
Now we can get various eliminated equation systems from the black box, depending
 on how the ordering is defined for the independent variables.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Remarks-on-the"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Different-equation-systems-1"

\end_inset

 we show some examples of different numbers of equations, the number of
 the equation can be between 10 and 25.
 The following special ordering will luckily give exactly one set as educational
ly usable degeneracy conditions:
\end_layout

\begin_layout LyX-Code

\size footnotesize
ring r=0,(v11,v6,v9,v8,v3,v4,v7,v5,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v10,v12,v13,v14,v15,v16,v17,v18,v19),dp;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal i=
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v9*v4+v10*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v11*v8+v12*v7+v11*v6+-1*v7*v6+-1*v12*v5+v8*v5,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v13*v12+-1*v14*v11,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v13*v6+-1*v14*v5+-1*v13*v4+v5*v4+v14*v3+-1*v6*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v15*v10+-1*v16*v9+-1*v15*v6+v9*v6+v16*v5+-1*v10*v5,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 v15*v8+-1*v16*v7,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v17*v8+v18*v7+v17*v4+-1*v7*v4+-1*v18*v3+v8*v3,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1*v17*v12+v18*v11+v17*v10+-1*v11*v10+-1*v18*v9+v12*v9,
\end_layout

\begin_layout LyX-Code

\size footnotesize
 -1+-1*v19*v17*v16+v19*v18*v15+v19*v17*v14+
\end_layout

\begin_layout LyX-Code

\size footnotesize
  -1*v19*v15*v14+-1*v19*v18*v13+v19*v16*v13;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal e=eliminate(i,v10*v12*v13*v14*v15*v15*v16*v17*v18*v19);
\end_layout

\begin_layout LyX-Code

\size footnotesize
list o;
\end_layout

\begin_layout LyX-Code

\size footnotesize
int s=size(e);
\end_layout

\begin_layout LyX-Code

\size footnotesize
int j;
\end_layout

\begin_layout LyX-Code

\size footnotesize
for (j=1; j<=s; j=j+1) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
 o[j]=factorize(e[j]); }
\end_layout

\begin_layout LyX-Code

\size footnotesize
o;
\end_layout

\begin_layout Standard
Before showing the output, let us note that the ordering of the independent
 variables is crucial here (in the first line).
 By doing some experiment, the order of the dependent variables do not seem
 to change the output at all.
 Accepting this as an experimental fact (at least for this problem), it
 means there can be theoretically at most 
\begin_inset Formula $8!=40320$
\end_inset

 different equation systems after the elimination.
 The full output is:
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
[1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=-v11+v9
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v3-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=v7
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v9-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v6*v7-v8*v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[3]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v11*v6*v7-v11*v4*v7+v9*v4*v7-v9*v8*v5-v6*v7*v5+v8*v5^2
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[4]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=-v9*v8*v3-v6*v3*v7+v9*v4*v7+v8*v3*v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[5]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=-v11*v8*v3-v11*v6*v7-v6*v3*v7+v11*v4*v7
\end_layout

\begin_layout LyX-Code

\size footnotesize
            +v11*v8*v5+v8*v3*v5+v6*v7*v5-v8*v5^2
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[6]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v11
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v9-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=-v3+v7
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[7]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v11*v6*v3-v11*v8*v3-v11*v6*v7-v6*v3*v7+v11*v4*v7
\end_layout

\begin_layout LyX-Code

\size footnotesize
            +v11*v8*v5+v8*v3*v5-v11*v4*v5+v6*v7*v5-v8*v5^2
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[8]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v11
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v9-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=-v8+v4
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[9]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v6-v4
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=-v11+v9
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=v8
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[10]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v9-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=-v11*v4*v7+v9*v4*v7-v9*v8*v5+v11*v4*v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[11]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v9-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=-v9*v3+v11*v7-v11*v5+v9*v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=v7
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[12]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=-v6*v3+v4*v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v6*v7-v8*v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[13]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v6-v4
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v9*v8-v11*v4
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=-v9+v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[14]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v11
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=-v11+v9
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=v9-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[5]=v7-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[6]=v7
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[15]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=-1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v9-v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v9
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=-v8+v4
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[5]=v4*v7-v8*v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1,1
\end_layout

\begin_layout LyX-Code

\size footnotesize
[16]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [1]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[1]=1
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[2]=v11
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[3]=v6-v4
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[4]=-v11+v9
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[5]=-v9+v5
\end_layout

\begin_layout LyX-Code

\size footnotesize
      _[6]=v4
\end_layout

\begin_layout LyX-Code

\size footnotesize
   [2]:
\end_layout

\begin_layout LyX-Code

\size footnotesize
      1,1,1,1,1,1
\end_layout

\begin_layout Standard
Here we have 16 equations after the elimination.
 Most of them ([1], [2], [6], [8], [9], [10], [11], [13], [14], [15] and
 [16]) contain at least one trivial non-synthetic factor (equality of coordinate
s).
 The remaining equations mostly contain such factors which do not have an
 easy meaning in geometry.
 It is easy to see the second factor of [3] contains 
\begin_inset Formula $v_{4}$
\end_inset

, but does not contain 
\begin_inset Formula $v_{3}$
\end_inset

 at all: this means that this algebraic expression cannot be translated
 into a synthetic geometry condition.
 [4], [5] and [7] might be candidates since they contain both 
\begin_inset Formula $v_{3}$
\end_inset

 and 
\begin_inset Formula $v_{4}$
\end_inset

, 
\begin_inset Formula $v_{5}$
\end_inset

 and 
\begin_inset Formula $v_{6}$
\end_inset

, and 
\begin_inset Formula $v_{7}$
\end_inset

 and 
\begin_inset Formula $v_{8}$
\end_inset

.
 But the winner is clearly [12] since it contains purely two collinearity
 conditions, namely that the triangles 
\begin_inset Formula $ABC$
\end_inset

 and 
\begin_inset Formula $ACD$
\end_inset

 are degenerate.
\end_layout

\begin_layout Standard
One can check all the 40320 permutations and collect the geometrical meanings.
 Appendix shows that only 4146 contains the same readable conditions we
 achieved with the variable ordering 
\begin_inset Formula $v_{11},v_{6},v_{9},v_{8},v_{3},v_{4},v_{7},v_{5}$
\end_inset

.
 This is 10,28% of the total cases.
 By denoting the variable ordering 
\begin_inset Formula $v_{3},v_{4},v_{5},v_{6},v_{7},v_{8},v_{9},v_{11}$
\end_inset

 as the identical permutation 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $12345678$
\end_inset


\begin_inset Quotes erd
\end_inset

, it is easier to enumerate these 
\begin_inset Quotes eld
\end_inset

good
\begin_inset Quotes erd
\end_inset

 cases.
 Interestingly enough, no permutation starts with 
\begin_inset Formula $3$
\end_inset

 (i.
\begin_inset space ~
\end_inset

e., with 
\begin_inset Formula $v_{5}$
\end_inset

), and no permutations end with 
\begin_inset Formula $7$
\end_inset

 and 
\begin_inset Formula $8$
\end_inset

 (i.
\begin_inset space ~
\end_inset

e., with 
\begin_inset Formula $v_{9}$
\end_inset

 and 
\begin_inset Formula $v_{11}$
\end_inset

 which are the independent variables for the half-dependent points).
 On the other hand, many 
\begin_inset Quotes eld
\end_inset

good
\begin_inset Quotes erd
\end_inset

 cases start with 8 or 7, and for example those which start with 8765 are
 exactly 16 cases (of the 24 possible, which is 
\begin_inset Formula $2/3$
\end_inset

 probability under this condition).
 Among them there is the permutation 
\begin_inset Formula $87654321$
\end_inset

 as well.
\end_layout

\begin_layout Standard
This investigation suggests the following heuristic extension of our algorithm.
 Try the 
\begin_inset Quotes eld
\end_inset

reversed
\begin_inset Quotes erd
\end_inset

 permutation of the variables first, in this case 
\begin_inset Formula $87654321$
\end_inset

.
 If this permutation does not yield a usable condition set, then permute
 the last four elements of the permutation until we have success.
 This will result in at most 24 cases for each geometry problem.
 Of course, there is no guarantee if this modified algorithm indeed returns
 a usable set, but we may have an intuition that trying to force the first
 points to be shown in the equations may have a more practical meaning than
 choosing other points instead.
 This extended algorithm has also been implemented in GeoGebra 5.
\end_layout

\begin_layout Standard
Unlike Singular, Giac cannot be fine tuned to use a specific ordering of
 the variables in its 
\emph on
eliminate
\emph default
 command.
 In many cases, however, its output can be converted to human readable condition
s.
 On the other hand, there are essential speed differences between Singular
 and Giac, and for Giac, there can be significant differences between the
 JNI and the HTML5 versions.
\end_layout

\begin_layout Standard
This approach about finding the best permutations is still subject of researchin
g.
 In general it seems very difficult to predict the best variable ordering,
 both for speed and geometrically readable results.
\end_layout

\begin_layout Subsection
Evaluation
\begin_inset CommandInset label
LatexCommand label
name "sub:Evaluation"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Kapur1986"

\end_inset

 is one of the pioneer reports on comparing different approaches on getting
 degeneracy conditions for various theorems.
 Definitely, we followed 
\begin_inset Index idx
status open

\begin_layout Plain Layout
method!--, Kapur's
\end_layout

\end_inset

Kapur's method in the first subsections on introducing our basic algorithm.
 As he claims, 
\emph on

\begin_inset Quotes eld
\end_inset

conditions found using this approach are often simpler and weaker than the
 ones reported using Wu's method
\begin_inset Index idx
status open

\begin_layout Plain Layout

\emph off
method!--, Wu's
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset


\emph default
.
 However, as 
\begin_inset CommandInset citation
LatexCommand cite
key "Winkler1990"

\end_inset

 points out, it is not straightforward to agree what to be considered as
 
\begin_inset Quotes eld
\end_inset

simplest
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
On one hand, our experiences confirm Kapur's results.
 In our theorem corpus, containing 60 tests in elementary geometry, we find
 that the thesis is true without any extra condition where Wu's method returns
 some required conditions in 13 tests.
 The opposite case is in 2 tests.
 In addition, in many cases our algorithm returns simpler conditions than
 Wu's method, however, in some cases Wu's method can give an answer, but
 our method cannot detect the algebraic conditions well enough or too slow
 (and runs over timeout which is set to 30 seconds for the tests, but is
 normally set to 5 seconds in GeoGebra).
\end_layout

\begin_layout Standard
In the following table 
\emph on
results for all the 60 tests
\emph default
 are shown for our algorithms via 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Singular
\end_layout

\end_inset

Singular and 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Giac
\end_layout

\end_inset

Giac, and also for the Wu algorithm implemented by the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
OpenGeoProver
\end_layout

\end_inset

OpenGeoProver library in GeoGebra (
\begin_inset Quotes eld
\end_inset

OGP Wu
\begin_inset Quotes erd
\end_inset

).
 In the last column 
\begin_inset Quotes eld
\end_inset

Auto
\begin_inset Quotes erd
\end_inset

 we show the final result shown in GeoGebra as the output of the portfolio
 prover.
 We show both the result (in column 
\begin_inset Quotes eld
\end_inset

R.
\begin_inset Quotes erd
\end_inset

) and the speed (in column 
\begin_inset Quotes eld
\end_inset

S.
\begin_inset Quotes erd
\end_inset

) of each computation.
 Green cells mean correct answers, yellow means that the appropriate algorithm
 could not give an answer (i.
\begin_inset space ~
\end_inset

e., it simply answered 
\begin_inset Quotes eld
\end_inset

I do not know
\begin_inset Quotes erd
\end_inset

).
 
\begin_inset Quotes eld
\end_inset

t/o
\begin_inset Quotes erd
\end_inset

 abbreviates 
\begin_inset Quotes eld
\end_inset

timeout
\begin_inset Quotes erd
\end_inset

.
 Darker greens always mean faster computation.
 
\begin_inset Quotes eld
\end_inset

f
\begin_inset Quotes erd
\end_inset

 means 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the question is a logical non-consequence; if 
\begin_inset Quotes eld
\end_inset

f
\begin_inset Quotes erd
\end_inset

 is not shown and the cell is green then the question was found to be a
 logical consequence.
 If there is no extra information in the result column, then the logical
 consequence is always true, otherwise we can see the degeneracy conditions
 
\begin_inset Formula $C_{1},C_{2},\ldots,C_{r}$
\end_inset

 (according to Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "ndg-def"

\end_inset

), one per row.
 We simply denote collinearity for points 
\begin_inset Formula $A,\, B,\, C$
\end_inset

 by 
\begin_inset Formula $\overline{ABC}$
\end_inset

.
 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\ldots$
\end_inset


\begin_inset Quotes erd
\end_inset

 means that the obtained degeneracy conditions are judged not be useful
 in education.
 Fastest speed among the algorithms is shown in 
\series bold
bold
\series default
, slowest speed is 
\emph on
italic
\emph default
.
 Time is always shown in milliseconds, however some differences always occur
 during different runs because of the complexity and randomness of the underlyin
g operating system process scheduling.
\begin_inset Foot
status open

\begin_layout Plain Layout
For the detailed construction definitions for these example tests please
 consult the GeoGebra source code in folder 
\family typewriter
\size scriptsize
geogebra/test/scripts/benchmark/prover/tests
\family default
\size default
.
 The whole benchmarking output can be recomputed by running the 
\begin_inset Quotes eld
\end_inset

ndg
\begin_inset Quotes erd
\end_inset

 scenario when running the 
\begin_inset Quotes eld
\end_inset

runtests
\begin_inset Quotes erd
\end_inset

 script.
 Using the 
\begin_inset Quotes eld
\end_inset

-h
\begin_inset Quotes erd
\end_inset

 option will provide more details on the usage.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\begin_inset CommandInset include
LatexCommand input
filename "ProveDetails-benchmark.tex"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "benchmark-provedetails"

\end_inset


\end_layout

\begin_layout Standard
We find that all tests which have a positive result in Singular, have a
 useful sufficient condition set---this means that our main effort was successfu
l! Our previous examples are shown under the test names 
\begin_inset Quotes eld
\end_inset

triangle-midsegment1
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

parallelogram-diagonals
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

orthocenter5
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Thales3
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

EulerLine
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Pappus
\begin_inset Quotes erd
\end_inset

.
 We can conclude that Wu's algorithm for 
\begin_inset Quotes eld
\end_inset

Pappus
\begin_inset Quotes erd
\end_inset

 returns six conditions (Singular returns two conditions, as reported above).
 We can conclude that Wu's algorithm is performing very well both in speed
 and in the number of results, but Singular is usually faster.
 The above means that our algorithm is not always better than Wu's method,
 but in many cases it gives a better result for the educational purpose.
\end_layout

\begin_layout Standard
The portfolio prover in GeoGebra is configured to run the Gröbner basis
 method first, and when no usable conditions are found, run Wu's method
 (and then other methods if applicable).
 As a final conclusion, we find that Wu's method can solve 48 problems,
 our method can solve 47 problems via Singular (45 via Giac), and finally
 the portfolio prover extends the weakness of our method by running Wu's
 algorithm in OpenGeoProver (and using other methods eventually) , so we
 can achieve good results in 49 cases (of 60).
\end_layout

\begin_layout Standard
We highlight that the answers given by the different methods are coherent,
 that is, no contradiction can be found among them.
\end_layout

\begin_layout Subsection
Extensions
\end_layout

\begin_layout Standard
As mentioned above on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "Prove-mentioning"

\end_inset

 we can get a yes/no answer for a question even without determining the
 degeneracy conditions.
 For this, we need a slightly different approach which is described by 
\begin_inset CommandInset citation
LatexCommand cite
key "Cox+Others/1991/Ideals"

\end_inset

, Chapter 6, §4.
 The frontend algorithm in GeoGebra is implemented by Simon Weitzhofer in
 his master thesis (
\begin_inset CommandInset citation
LatexCommand cite
key "Weitzhofer13"

\end_inset

), by using fast implementation of parametrized equation system solving
 in Singular.
 The basic idea is that free variables can be considered as parameters,
 and therefore the number of variables can be reduced.
 This is an advantage because the computation may be significantly faster,
 but also a disadvantage because no degeneracy conditions can be obtained
 for the free variables.
\end_layout

\begin_layout Standard
Here we follow the same idea, but instead of using 
\emph on
parameters
\emph default
 we call these objects 
\emph on
transcendental constants
\emph default
, by following Singular's terminology
\begin_inset Foot
status open

\begin_layout Plain Layout
See 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.singular.uni-kl.de/Manual/3-1-6/sing_28.htm
\end_layout

\end_inset

 for more details.
\end_layout

\end_inset

.
 The discussed method can give a yes/no answer only and cannot tell exactly
 when the thesis is true.
 In fact, since this extended way of computation is usually quicker than
 our original algorithm, this is not a real problem, but rather a feature:
 the student can request an immediate yes/no answer by using the 
\series bold
Prove
\series default
 command in GeoGebra, and if interested in the details, they can still be
 obtained by using the 
\series bold
ProveDetails
\series default
 command with the same arguments.
\end_layout

\begin_layout Standard
This approach, however, cannot be achieved in Giac at the moment.
 This is unfortunate for students who do not have a continuous Internet
 connection for outsourcing computations.
 Thus for Giac we will use a different way which performs better than the
 elimination way, but not so effective as 
\begin_inset CommandInset citation
LatexCommand cite
key "Cox+Others/1991/Ideals"

\end_inset

 suggest.
\end_layout

\begin_layout Subsubsection
Using transcendental constants
\begin_inset CommandInset label
LatexCommand label
name "sub:Using-transcendental-constants"

\end_inset


\end_layout

\begin_layout Standard
In this paragraph we remind the reader the notion of a 
\emph on
extension field
\begin_inset Index idx
status open

\begin_layout Plain Layout
field!--, extension
\end_layout

\end_inset


\emph default
.
 A 
\emph on
field
\begin_inset Index idx
status open

\begin_layout Plain Layout
field
\end_layout

\end_inset


\emph default
 is, in a nutshell, such a 
\begin_inset Quotes eld
\end_inset

world
\begin_inset Quotes erd
\end_inset

 where operations 
\emph on
addition
\emph default
, 
\emph on
subtraction
\emph default
, 
\emph on
multiplication
\emph default
 and 
\emph on
division
\emph default
 may always be computed (except the division by zero).
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $F$
\end_inset

 be a field and 
\begin_inset Formula $\alpha_{1},\ldots,\alpha_{u}\not\in F$
\end_inset

.
 We call 
\begin_inset Formula $E$
\end_inset

 the 
\bar under
extension of 
\begin_inset Formula $F$
\end_inset

 with transcendental elements
\begin_inset Index idx
status open

\begin_layout Plain Layout

\bar no
element!--, transcendental
\end_layout

\end_inset


\bar default
 
\bar under

\begin_inset Formula $\alpha_{1},\ldots,\alpha_{u}$
\end_inset


\bar default
 if
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $E$
\end_inset

 is a field,
\end_layout

\begin_layout Itemize
\begin_inset Formula $E\supset F$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha_{1},\ldots,\alpha_{u}\in E$
\end_inset

.
\end_layout

\begin_layout Standard
We call 
\begin_inset Formula $E$
\end_inset

 
\bar under
minimal
\bar default
 if for all possible 
\begin_inset Formula $E'$
\end_inset

 extensions, 
\begin_inset Formula $E\subseteq E'$
\end_inset

.
 Then we denote 
\begin_inset Formula $E$
\end_inset

 by 
\begin_inset Formula $F(\alpha_{1},\ldots,\alpha_{u})$
\end_inset

.
\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $F$
\end_inset

 be a field and 
\begin_inset Formula $\alpha_{1},\ldots,\alpha_{u}\not\in F$
\end_inset

.

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 We call 
\begin_inset Formula $\alpha_{1},\ldots,\alpha_{u}$
\end_inset

 
\family default
\series default
\shape default
\size default
\emph default
\bar under
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Index idx
status open

\begin_layout Plain Layout
element!--s, algebraically independent
\end_layout

\end_inset

algebraically independent elements
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 if for all non-zero multivariate polynomial 
\begin_inset Formula $p$
\end_inset

 having coefficients from 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $p(\alpha_{1},\ldots,\alpha_{u})\neq0$
\end_inset

.
\end_layout

\begin_layout Example
\begin_inset Formula $\pi$
\end_inset

 and 
\begin_inset Formula $e$
\end_inset

 are thought to be algebraically independent elements in 
\begin_inset Formula $\mathbb{Q}(\pi,e)$
\end_inset

 since any algebraic expression of 
\begin_inset Formula $\pi$
\end_inset

 and 
\begin_inset Formula $e$
\end_inset

 never seem to be zero.
 For example, 
\begin_inset Formula $271\cdot\pi-314\cdot e$
\end_inset

 is near 
\begin_inset Formula $0$
\end_inset

, but clearly non-zero.
 The independence of 
\begin_inset Formula $\pi$
\end_inset

 and 
\begin_inset Formula $e$
\end_inset

 looks quite straightforward, but actually this is just a conjecture yet
 (
\begin_inset CommandInset citation
LatexCommand cite
key "wiki:algebraicindependence"

\end_inset

).
 In contrast, 
\begin_inset Formula $\pi$
\end_inset

 and 
\begin_inset Formula $e^{\pi}$
\end_inset

 are indeed proven to be independent transcendental numbers---see 
\begin_inset CommandInset citation
LatexCommand cite
key "e-epi"

\end_inset

 for a proof.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Now we can describe the main idea for the Singular approach of the 
\series bold
Prove
\series default
 command.
 In fact, it is more or less a natural way for the task we want to do in
 the terms of abstract algebra---here we give two examples with full details
 for a better understanding.
\end_layout

\begin_layout Example
Consider the following statement: Let 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 be arbitrary points, and 
\begin_inset Formula $C$
\end_inset

 the midpoint of 
\begin_inset Formula $AB$
\end_inset

.
 Then 
\begin_inset Formula $A\neq C$
\end_inset

 if 
\begin_inset Formula $A\neq B$
\end_inset

.
 (Here we will obtain the assumption 
\begin_inset Formula $A\neq B$
\end_inset

 as a degeneracy condition.)
\end_layout

\begin_layout Example
Let 
\begin_inset Formula $A=(v_{1},v_{2})$
\end_inset

, 
\begin_inset Formula $B=(v_{3},v_{4})$
\end_inset

, all the four variables are independent.
 Let 
\begin_inset Formula $C=(v_{5},v_{6})$
\end_inset

, here the variables are dependent.
 The hypotheses equations are
\begin_inset Formula 
\begin{align*}
2v_{5}-v_{1}-v_{3} & =0,\\
2v_{6}-v_{2}-v_{4} & =0.
\end{align*}

\end_inset

Since we want to check coordinate equalities, there are two theses: 
\begin_inset Formula $v_{1}-v_{5}\neq0$
\end_inset

 and 
\begin_inset Formula $v_{2}-v_{6}\neq0$
\end_inset

, but we want to deny them ad absurdum, thus we do not use the Rabinowitsch
 trick here.
 Instead, we simply add 
\begin_inset Formula $v_{1}-v_{5}=0$
\end_inset

 (and 
\begin_inset Formula $v_{2}-v_{6}=0$
\end_inset

) to the hypotheses and expect contradiction.
 Unfortunately the equation system has a solution, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the elimination returns an equivalent equation system which consists of
 one equation: 
\begin_inset Formula $v_{1}-v_{3}=0$
\end_inset

 (and 
\begin_inset Formula $v_{2}-v_{4}=0$
\end_inset

 for the other coordinate test).
 This means, geometrically, that the theorem is true, unless 
\begin_inset Formula $A\neq B$
\end_inset

.
\end_layout

\begin_layout Example
Now let us forget all geometrical meaning of the variables and consider
 the 
\emph on
independent variables
\emph default
 as 
\emph on
algebraically independent elements
\emph default
.
 That is, let 
\begin_inset Formula $\mathcal{V}_{1},\mathcal{V}_{2},\mathcal{V}_{3},\mathcal{V}_{4}$
\end_inset

 denote some unknown algebraically independent elements, such that there
 is no algebraic relation between them.
 Consider the following equation system:
\begin_inset Formula 
\begin{align}
2v_{5}-\mathcal{V}_{1}-\mathcal{V}_{3} & =0,\nonumber \\
2v_{6}-\mathcal{V}_{2}-\mathcal{V}_{4} & =0,\label{eq:transc}\\
\mathcal{V}_{1}-v_{5} & =0.\nonumber 
\end{align}

\end_inset

Now let us decide if this system has a solution.
 We know that by elimination we can conclude 
\begin_inset Formula 
\begin{equation}
\mathcal{V}_{1}-\mathcal{V}_{3}=0.\label{eq:transc0}
\end{equation}

\end_inset

On the other hand, 
\begin_inset Formula $\mathcal{V}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathcal{V}_{3}$
\end_inset

 are algebraically independent elements, therefore 
\begin_inset Formula 
\begin{equation}
\mathcal{V}_{1}-\mathcal{V}_{3}\neq0.\label{eq:transcn0}
\end{equation}

\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:transc0"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:transcn0"

\end_inset

 are obviously in contradiction, thus 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:transc"

\end_inset

 is itself a contradictory system.
 In general, every time we obtain an equation like 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:transc0"

\end_inset

 after the elimination, we will conclude that it contradicts the definition
 of the algebraically independent elements (like in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:transcn0"

\end_inset

).
 This is simply because the equations of the eliminated system are always
 
\emph on
algebraic
\emph default
 and contain only independent variables which are, actually, transcendental,
 but there cannot be any algebraic relation between them.
\end_layout

\begin_layout Example
Clearly, for such geometry questions where there is no degeneracy condition,
 i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the thesis is always true, we will get the contradiction the same way as
 in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "The-midline-theorem"

\end_inset

.
 The remaining question is if this approach will give a solution for equation
 systems describing those geometry questions which are logical non-consequence.
 The answer is yes:
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Example
Let 
\begin_inset Formula $A=(v_{1},v_{2})$
\end_inset

, 
\begin_inset Formula $B=(v_{3},v_{4})$
\end_inset

, all the four variables are independent.
 We would like to check the hypothesis 
\begin_inset Formula $A=B$
\end_inset

 (which is false, of course).
\end_layout

\begin_layout Example
We want to check coordinate equalities again.
 The equation system, thus, consists of one equation, and cannot be eliminated
 to contain the independent variables only:
\begin_inset Formula 
\[
v_{5}\cdot(v_{1}-v_{3})-1=0
\]

\end_inset

(or 
\begin_inset Formula $v_{5}\cdot(v_{2}-v_{4})=0$
\end_inset

 for the other coordinate).
 Now let 
\begin_inset Formula $\mathcal{V}_{1},\mathcal{V}_{2},\mathcal{V}_{3},\mathcal{V}_{4}$
\end_inset

 denote some unknown algebraically independent elements again, and let us
 investigate the equation
\begin_inset Formula 
\[
v_{5}\cdot(\mathcal{V}_{1}-\mathcal{V}_{3})-1=0.
\]

\end_inset

But here there is no contradiction.
 The equation can be solved:
\begin_inset Formula 
\[
v_{5}=\frac{1}{\mathcal{V}_{1}-\mathcal{V}_{3}},
\]

\end_inset

which may be a valid solution in the extension field we are working in.
\end_layout

\begin_layout Example
Luckily, the Singular program code in Example
\begin_inset CommandInset ref
LatexCommand ref
reference "grobner-cas"

\end_inset

 must not be significantly changed to achieve the expected results:
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
ring R=(0,v1,v2,v3,v4),(v5,v6),dp;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal I=2*v5-v1-v3,2*v6-v2-v4,v1-v5;
\end_layout

\begin_layout LyX-Code

\size footnotesize
groebner(I);
\end_layout

\begin_layout Standard
will result in
\end_layout

\begin_layout LyX-Code

\size footnotesize
_[1]=1
\end_layout

\begin_layout Standard
and
\end_layout

\begin_layout LyX-Code

\size footnotesize
ring R=(0,v1,v2,v3,v4),(v5),dp;
\end_layout

\begin_layout LyX-Code

\size footnotesize
ideal I=v5*(v1-v3)-1;
\end_layout

\begin_layout LyX-Code

\size footnotesize
groebner(I);
\end_layout

\begin_layout Standard
will give
\end_layout

\begin_layout LyX-Code

\size footnotesize
_[1]=(v1-v3)*v5-1
\end_layout

\end_deeper
\begin_layout Standard
as expected.
 Here the first parameter for the ring 
\begin_inset Formula $R$
\end_inset

 describes the transcendental extensions, which are, in our case, always
 the independent variables.
\end_layout

\begin_layout Standard
We can create an algorithm to compute the output for the 
\series bold
Prove
\series default
 command as a summary of our investigations above
\begin_inset Index idx
status open

\begin_layout Plain Layout
algorithm!--, Prove
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Prove-algorithm"

\end_inset

:
\end_layout

\begin_layout Enumerate
Turn the input question 
\begin_inset Formula $\mathcal{Q}=(H_{1},H_{2},\ldots,H_{m};T)$
\end_inset

 to an equation system 
\begin_inset Formula $S$
\end_inset

 with variables 
\begin_inset Formula $v_{1},\ldots,v_{n}$
\end_inset

 by using reductio ad absurdum, Rabinowitsch's trick and the fixed points
 
\begin_inset Formula $A(0,0)$
\end_inset

 and 
\begin_inset Formula $B(0,1)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Rename the independent variables 
\begin_inset Formula $v_{1},\ldots,v_{t}$
\end_inset

 to algebraically independent elements 
\begin_inset Formula $\mathcal{V}_{1},\ldots,\mathcal{V}_{t}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Decide whether the equation system 
\begin_inset Formula $S$
\end_inset

 (in variables 
\begin_inset Formula $v_{t+1},\ldots,v_{n}$
\end_inset

) is contradictory with coefficients from extension field 
\begin_inset Formula $\mathbb{Q}(\mathcal{V}_{1},\ldots,\mathcal{V}_{t})$
\end_inset

.
\end_layout

\begin_layout Enumerate
If yes, then show 
\begin_inset Quotes eld
\end_inset

the answer is true
\begin_inset Quotes erd
\end_inset

 as output, if no, then show 
\begin_inset Quotes eld
\end_inset

the answer is false
\begin_inset Quotes erd
\end_inset

 as output.
\end_layout

\begin_layout Standard
It is crucial that the black box CAS must be able to solve an equation system
 with transcendental constants.
 This is the case for Singular, but not for Giac.
\end_layout

\begin_layout Subsubsection
Using prescribed non-degeneracy conditions
\end_layout

\begin_layout Standard
In Example
\begin_inset CommandInset ref
LatexCommand ref
reference "parallelogram"

\end_inset

 we learned that the only degeneracy condition was 
\begin_inset Formula $\overline{ABC}$
\end_inset

, that is 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 are collinear.
 Our benchmark output on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "benchmark-provedetails"

\end_inset

 shows that in 5 more tests the same condition was obtained, and in 7 other
 tests the condition is simply to have different points for two free points.
 This consideration leads us to the idea to preassume some 
\begin_inset Quotes eld
\end_inset

natural
\begin_inset Quotes erd
\end_inset

 conditions which are not necessarily required, but may be sufficient to
 make the thesis work.
\end_layout

\begin_layout Standard
In most cases the preassumption is just to have the polygon defined by the
 free points to be a non-degenerate one.
 When there are 
\begin_inset Formula $N$
\end_inset

 free points, in case
\end_layout

\begin_layout Itemize
\begin_inset Formula $N=1$
\end_inset

 this means we do not need any preassumption,
\end_layout

\begin_layout Itemize
\begin_inset Formula $N=2$
\end_inset

 this means we could assume 
\begin_inset Formula $A\neq B$
\end_inset

, but this has already been assumed by fixing these points,
\end_layout

\begin_layout Itemize
\begin_inset Formula $N=3$
\end_inset

 this means 
\begin_inset Formula $\overline{ABC}$
\end_inset

 is not allowed,
\end_layout

\begin_layout Itemize
for 
\begin_inset Formula $N>3$
\end_inset

 for each free 
\begin_inset Formula $X,Y,Z$
\end_inset

 points 
\begin_inset Formula $\overline{XYZ}$
\end_inset

 is not allowed.
 This requires 
\begin_inset Formula $\binom{N}{3}$
\end_inset

 extra equations which is 
\begin_inset Formula $4$
\end_inset

 for 
\begin_inset Formula $N=4$
\end_inset

, 
\begin_inset Formula $10$
\end_inset

 for 
\begin_inset Formula $N=5$
\end_inset

 and so on, and the same number of extra variables (for Rabinowitsch's trick).
\end_layout

\begin_layout Standard
As we will see, the Giac works usually faster after this modification, in
 particular for 
\begin_inset Quotes eld
\end_inset

Pappus
\begin_inset Quotes erd
\end_inset

 (twice faster), but for 3 tests, 
\begin_inset Quotes eld
\end_inset

Desargues
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Simson1
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Simson2
\begin_inset Quotes erd
\end_inset

 we will not get a contradiction.
 This means that there should be some more prescribed non-degeneracy conditions
 added.
 Actually, these conditions could be automatically found by analyzing the
 result of the 
\emph on
solve
\emph default
 command in Giac, that is, by obtaining the equivalent equation system (which
 is achieved practically by elimination), but in our latter 3 tests we will
 not get any human readable conditions.
 On the other hand, such an investigation would be probably even more time
 consuming.
 Thus, we put up with getting any meaningful answer in these cases, and
 also with giving answer 
\begin_inset Quotes eld
\end_inset

no
\begin_inset Quotes erd
\end_inset

 for the logical non-consequences (i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

the first 4 tests which should give 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
This is the detailed algorithm with Giac for the 
\series bold
Prove
\series default
 command:
\begin_inset Index idx
status open

\begin_layout Plain Layout
algorithm!--, Prove
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Prove-algorithm-giac"

\end_inset


\end_layout

\begin_layout Enumerate
Turn the input question 
\begin_inset Formula $\mathcal{Q}=(H_{1},H_{2},\ldots,H_{m};T)$
\end_inset

 to an equation system 
\begin_inset Formula $S$
\end_inset

 with variables 
\begin_inset Formula $v_{1},\ldots,v_{n}$
\end_inset

 by using reductio ad absurdum, Rabinowitsch's trick and the fixed points
 
\begin_inset Formula $A(0,0)$
\end_inset

 and 
\begin_inset Formula $B(0,1)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $N$
\end_inset

 be the number of free points.
 If 
\begin_inset Formula $N\geq3$
\end_inset

, for each free 
\begin_inset Formula $X,Y,Z$
\end_inset

 points add the equation of 
\begin_inset Formula $\neg\overline{XYZ}$
\end_inset

 to 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Enumerate
Decide whether the equation system 
\begin_inset Formula $S$
\end_inset

 (in variables 
\begin_inset Formula $v_{1},\ldots,v_{n}$
\end_inset

) is contradictory.
\end_layout

\begin_layout Enumerate
If yes, then show 
\begin_inset Quotes eld
\end_inset

the answer is true
\begin_inset Quotes erd
\end_inset

 as output.
\end_layout

\begin_layout Standard
As in in the other algorithms, if there is no output explicitly given, the
 answer is 
\begin_inset Quotes eld
\end_inset

undefined
\begin_inset Quotes erd
\end_inset

 in GeoGebra.
 In this paragraph this case simply means that the method cannot reliably
 determine if the answer is yes or no, so the best it can do is to remain
 silent.
\end_layout

\begin_layout Standard
Finally we prove the correctness of this algorithm.
\end_layout

\begin_layout Theorem
Let 
\begin_inset Formula $\mathcal{Q}=(H_{1},H_{2},\ldots,H_{m};T)$
\end_inset

 be a question.
 Let 
\begin_inset Formula $\mathcal{Q}_{C}=(H_{1},H_{2},\ldots,H_{m},C;T)$
\end_inset

 be another question where the non-degeneracy condition 
\begin_inset Formula $C$
\end_inset

 is added to the hypotheses.
 Now 
\begin_inset Formula ${\cal Q}$
\end_inset

 is generally true if and only if 
\begin_inset Formula ${\cal Q}_{C}$
\end_inset

 is generally true.
\end_layout

\begin_layout Proof
Assume that 
\begin_inset Formula ${\cal Q}$
\end_inset

 is generally true.
 Let 
\begin_inset Formula $S$
\end_inset

 and 
\begin_inset Formula $S_{C}$
\end_inset

 describe 
\begin_inset Formula ${\cal Q}$
\end_inset

 and 
\begin_inset Formula ${\cal Q}_{C}$
\end_inset

 as equation systems, respectively.
 Consider equivalent equation systems 
\begin_inset Formula $S'$
\end_inset

 and 
\begin_inset Formula $S_{C}'$
\end_inset

 (where all independent variables from 
\begin_inset Formula $S$
\end_inset

 and 
\begin_inset Formula $S_{C}$
\end_inset

 are eliminated, respectively).
 Now 
\begin_inset Formula $S'$
\end_inset

 describes the set 
\begin_inset Formula $E$
\end_inset

 of counterexamples for 
\begin_inset Formula ${\cal Q}$
\end_inset

, and 
\begin_inset Formula $S_{C}'$
\end_inset

 describes the set 
\begin_inset Formula $E_{C}$
\end_inset

 of counterexamples for 
\begin_inset Formula ${\cal Q}_{C}$
\end_inset

.
 Since 
\begin_inset Formula $C$
\end_inset

 restricts 
\begin_inset Formula $E$
\end_inset

, obviously 
\begin_inset Formula $E\supseteq E_{C}$
\end_inset

.
 This means that the set of counterexamples for 
\begin_inset Formula ${\cal Q}_{C}$
\end_inset

 must be a subset of counterexamples for 
\begin_inset Formula ${\cal Q}$
\end_inset

, that is, 
\begin_inset Formula ${\cal Q}_{C}$
\end_inset

 is generally true.
\begin_inset Newline newline
\end_inset

Conversely, let us assume that 
\begin_inset Formula ${\cal Q}$
\end_inset

 is not generally true.
 By using the same notations, 
\begin_inset Formula $S'=\{0=0\}$
\end_inset

.
 Since 
\begin_inset Formula $C$
\end_inset

 is a non-degeneracy condition, its equation in 
\begin_inset Formula $S_{C}$
\end_inset

 can be written in the form 
\begin_inset Formula $z\cdot f(v_{1},v_{2},\ldots,v_{t})-1=0$
\end_inset

 where 
\begin_inset Formula $z$
\end_inset

 is a dependent variable and 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{t}$
\end_inset

 are independent variables.
 Now 
\begin_inset Formula ${\displaystyle z=\frac{1}{f(v_{1},v_{2},\ldots,v_{t})}}$
\end_inset

, hence 
\begin_inset Formula $z$
\end_inset

 can be expressed by the independent variables and it can be eliminated
 in 
\begin_inset Formula $S_{C}'$
\end_inset

 immediately, without any other effect on the elimination process.
 Therefore the equation describing 
\begin_inset Formula $C$
\end_inset

 in 
\begin_inset Formula $S$
\end_inset

 will not modify 
\begin_inset Formula $S'$
\end_inset

, that is, 
\begin_inset Formula $S_{C}'=S'=\{0=0\}$
\end_inset

, thus 
\begin_inset Formula ${\cal Q}_{C}$
\end_inset

 is not generally true.
\end_layout

\begin_layout Subsubsection
Comparison
\begin_inset CommandInset label
LatexCommand label
name "sub:Comparison"

\end_inset


\end_layout

\begin_layout Standard
The following table shows the overall results for the 
\series bold
Prove
\series default
 command when using the same underlying computer algebra systems or methods
 in GeoGebra.
 (This result can be achieved by choosing the 
\begin_inset Quotes eld
\end_inset

giac-test
\begin_inset Quotes erd
\end_inset

 scenario in the benchmarking system.)
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Prove-benchmark.tex"

\end_inset


\end_layout

\begin_layout Standard
We can see that Singular can solve 
\begin_inset Quotes eld
\end_inset

Desargues
\begin_inset Quotes erd
\end_inset

 now, that is, by using the algorithm described 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "Prove-algorithm"

\end_inset

.
 In addition, Giac can answer 
\begin_inset Quotes eld
\end_inset

Pappus
\begin_inset Quotes erd
\end_inset

 properly, but the former 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

 answers for the non-consequences turn to 
\begin_inset Quotes eld
\end_inset

undefined
\begin_inset Quotes erd
\end_inset

, by using the algorithm described 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "Prove-algorithm-giac"

\end_inset

.
 (This means that Giac has one good points but three bad points here.) Also
 Giac is performing not worse than for the 
\series bold
ProveDetails
\series default
 command, what is more, it solves 3 tests (
\begin_inset Quotes eld
\end_inset

circumcenter6
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

orthocenter5
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

orthocenter7
\begin_inset Quotes erd
\end_inset

) significantly faster now.
 That is, Singular can solve 48 problems, Giac solves 42 problems when the
 
\series bold
Prove
\series default
 command is used, and the speed is more acceptable for many classroom situations.
\end_layout

\begin_layout Standard
The speed can be, however, even more improved, for example by using Recio's
 method which is a finite variant of the algebraic approach.
\end_layout

\begin_layout Section
Recio's method
\begin_inset CommandInset label
LatexCommand label
name "sec:Recio's-method"

\end_inset


\end_layout

\begin_layout Standard
Strangely enough, if we can find enough configurations where the hypotheses
 are true, then we can be sure that the hypotheses will be true with 100%
 certainty.
 (This is, as we already mentioned on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "100%"

\end_inset

, not the sure event, since we may leave out some degeneracy cases.) This
 fact is a simple consequence of the 
\emph on
fundamental theorem of algebra
\emph default

\begin_inset Index idx
status open

\begin_layout Plain Layout
theorem!the fundamental -- of algebra
\end_layout

\end_inset

, which states in fact, that a polynomial can have the 0 value only finitely
 many times, otherwise the polynomial is equal to the constant zero polynomial.
\end_layout

\begin_layout Standard
Recio's method is, as we will see, a technique to find enough configurations
 to give the 100% certainty, what is more, when not considering the degeneracy
 cases, we can obtain 
\emph on
absolute truth
\emph default
.
 For simple theorems the number for 
\begin_inset Quotes eld
\end_inset

enough
\begin_inset Quotes erd
\end_inset

 is surprisingly low, but for more complicated questions it can be somewhat
 higher.
\end_layout

\begin_layout Standard

\emph on
Proving by examples
\emph default
 is, however, not a new idea.
 As 
\begin_inset CommandInset citation
LatexCommand cite
key "Weitzhofer13"

\end_inset

 highlights (see page 41) there is already a remarkable work done in ATP
 in geometry by 
\emph on
Hong
\emph default
 and 
\emph on
Zhang
\emph default
, 
\emph on
Yang
\emph default
 and 
\emph on
Deng
\emph default
 from the eighties.
 Also probabilistic tests by 
\emph on
Tulone
\emph default
, 
\emph on
Yap
\emph default
 and 
\emph on
Li
\emph default
 and 
\emph on
Kortenkamp
\emph default
, based on 
\emph on
Schwartz
\emph default
's work, are known approaches which use some related ideas.
\end_layout

\begin_layout Standard
Here we show the basic idea of Recio's method
\begin_inset Index idx
status open

\begin_layout Plain Layout
method!--, Recio's
\end_layout

\end_inset

 by adding a hardcopy of 
\begin_inset CommandInset citation
LatexCommand cite
key "recio-eaca-paper"

\end_inset

.
 Also an illustrated presentation is available at 
\begin_inset CommandInset citation
LatexCommand cite
key "recio-pres"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includepdf[pages=-,nup=1x1,frame=true,noautoscale=true,scale=0.9]{Kovacs-Recio-We
itzhofer-20120323}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
At the moment, Recio's method is implemented only for such problems which
 have linear construction steps.
 That is, for example, intersection of a line and a circle is not supported,
 but checking concyclicity is (since checks are not construction steps,
 but final computations).
\end_layout

\begin_layout Section
Java implementation
\begin_inset CommandInset label
LatexCommand label
name "sec:Other-methods"

\end_inset


\end_layout

\begin_layout Standard
In this section we give a simple overview of the programmatical details
 of the portfolio prover in GeoGebra.
 We already mentioned the presence of OpenGeoProver in the GeoGebra application.
 It is an external module, technically an extra .jar file in the desktop
 version.
 It has no implementation in the web version of GeoGebra yet.
\end_layout

\begin_layout Standard
The Javadoc documentation of the GeoGebra source code is available at 
\family typewriter

\begin_inset CommandInset href
LatexCommand href
target "http://dev.geogebra.org"

\end_inset


\family default
, generated automatically on a regular basis.
 The Java package 
\series bold
org.geogebra.common.kernel.prover
\series default
 is the main directory for the prover subsystem which has the following
 class summary:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="8cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Class
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AbstractProverReciosMethod
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
A prover which uses Tomas Recio's method to prove geometric theorems.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AlgoAreCollinear
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Decides if the points are collinear.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AlgoAreConcurrent
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Decides if the lines are concurrent.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AlgoAreConcyclic
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Decides if the points are concyclic.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AlgoAreEqual
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Decides if the objects are equal.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AlgoAreParallel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Decides if the lines are parallel.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AlgoArePerpendicular
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Decides if the lines are perpendicular.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
AlgoIsOnPath
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Decides if the point lies on a path.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AlgoProve
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Algo for the Prove command.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AlgoProveDetails
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Algo for the ProveDetails command.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Combinations
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implementation of iterable combinations of a set.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NDGDetector
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Detects polynomial NDG conditions and turns into human readable form.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ProverBotanasMethod
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A prover which uses Francisco Botana's method to prove geometric theorems.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ProverPureSymbolicMethod
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A prover which uses pure symbolic method to prove geometric theorems.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Also package 
\series bold
org.geogebra.common.kernel.prover.polynomial
\series default
 is implemented containing classes Polynomial, PolynomialParser, PolynomialParse
rTokenManager, SimpleCharStream, Term, Token and Variable.
 The package 
\series bold
org.geogebra.common.util
\series default
 contains the kickstart abstract class Prover.
\end_layout

\begin_layout Standard
Some helper interfaces are Symbolic\SpecialChar \-
Parameters\SpecialChar \-
Algo, Symbolic\SpecialChar \-
Parameters\SpecialChar \-
Botana\SpecialChar \-
Algo,
 Symbolic\SpecialChar \-
Parameters\SpecialChar \-
Botana\SpecialChar \-
Algo\SpecialChar \-
Are from 
\series bold
geogebra.\SpecialChar \-
common.\SpecialChar \-
kernel.\SpecialChar \-
algos
\series default
.
 The new GeoGebra commands are implemented in package 
\series bold
org.geogebra.\SpecialChar \-
common.\SpecialChar \-
kernel.\SpecialChar \-
advanced
\series default
 in classes Cmd\SpecialChar \-
Prove and Cmd\SpecialChar \-
ProveDetails, and started by class Command\SpecialChar \-
Dispatcher\SpecialChar \-

Advanced in package
\series bold
 org.geogebra.\SpecialChar \-
common.\SpecialChar \-
kernel.\SpecialChar \-
commands
\series default
.
\end_layout

\begin_layout Standard
These classes are universal parts of GeoGebra being used in both the desktop
 and the web version.
\end_layout

\begin_layout Standard
Only the desktop version contains packages 
\series bold
org.geogebra.kernel.prover
\series default
 with class ProverReciosMethod (which implements AbstractProverReciosMethod)
 and 
\series bold
org.geogebra.desktop.util
\series default
 with class Prover (which implements the abstract class Prover).
\end_layout

\begin_layout Standard
Only the web version contains packages 
\series bold
org.geogebra.web.html5.kernel
\series default
 with class ProverReciosMethod (the web implementation of AbstractProverReciosMe
thod) and 
\series bold
org.geogebra.web.html5.util
\series default
 with class Prover (the web implementation of the abstract class Prover).
\end_layout

\begin_layout Standard
The main workflow in GeoGebra is to draw a construction.
 Construction steps are handled in so-called 
\begin_inset Quotes eld
\end_inset

algos
\begin_inset Quotes erd
\end_inset

, for example, AlgoIntersectLines (in 
\series bold
org.geogebra.common.kernel.algos
\series default
) supervises the intersection of two lines, say 
\begin_inset Formula $l_{1}$
\end_inset

 and 
\begin_inset Formula $l_{2}$
\end_inset

 (lying on points, say 
\begin_inset Formula $A_{1},B_{1}$
\end_inset

 and 
\begin_inset Formula $A_{2},B_{2}$
\end_inset

).
 During such a construction step some extra details are needed to be stored
 by the prover subsystem in advance, thus such algos need to implement e.
\begin_inset space ~
\end_inset

g.
\begin_inset space ~
\end_inset

SymbolicParametersBotanaAlgo for Botana's method and in this case variables
 need to be allocated for the intersection of 
\begin_inset Formula $l_{1}$
\end_inset

 and 
\begin_inset Formula $l_{2}$
\end_inset

, say 
\begin_inset Formula $C=(v_{i},v_{i+1})$
\end_inset

; also equations must be inserted to ensure collinearity for points 
\begin_inset Formula $A_{1},B_{1},C$
\end_inset

 and 
\begin_inset Formula $A_{2},B_{2},C$
\end_inset

.
\end_layout

\begin_layout Standard
The portfolio prover will be started by the 
\series bold
Prove
\series default
 or the 
\series bold
ProveDetails
\series default
 command entered in the Input Bar by the user.
 Then the CmdProve and AlgoProve (and CmdProveDetails and AlgoProveDetails)
 classes will be started.
 Now the Prover class is executed and it starts the appropriate prover engine:
 
\end_layout

\begin_layout Itemize
an implementation class of AbstractProverReciosMethod for Recio's method,
\end_layout

\begin_layout Itemize
the ProverBotanasMethod class for Botana's method,
\end_layout

\begin_layout Itemize
an implementation of the Prover method for any of OpenGeoProver's methods
 (Wu or area).
\end_layout

\begin_layout Standard
In this phase the internally implemented methods analyze the input parameter
 of the Prove or the ProveDetails command.
 For example, if the full command was 
\series bold
Prove[AreParallel[a,b]]
\series default
, then the AlgoAreParallel class will be visited by the program flow, and
 some additional information will be collected and further processed.
 For example, in case of Botana's method a polynomial will be created to
 describe the parallelism relation between 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

; then, back in the main prover class, its negation will be added to the
 list of the other polynomials collected from the parent objects of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

; finally, the set of polynomials will be sent either to Singular or Giac
 to check if the described system is solvable (or, for the ProveDetails
 command, an equivalent system is expected by eliminating the dependent
 variables).
 
\end_layout

\begin_layout Standard
When using the external prover, OpenGeoProver will be configured directly
 via its global OpenGeoProver.settings variable.
 The input object is of type GeoGebraOGPInputProverProtocol which is set
 by OpenGeoProver's public setGeometryTheoremText() method by using GeoGebra's
 XML format to describe the construction steps.
 GeoGebra sets the method (Wu or Area) to be used in OpenGeoProver by using
 setMethod().
 For the 
\series bold
Prove
\series default
 command there is no need to collect degeneracy conditions: in this case
 GeoGebra uses the setReportFormat() method to disable report generation.
 Finally, the GeoGebraOGPInterface.prove() method will be called and the
 output from the GeoGebraOGPOutputProverProtocol object will be collected.
\end_layout

\begin_layout Standard
Independently of the used prover engine, when the 
\series bold
ProveDetails
\series default
 command was called, GeoGebra uses its internal methods to simplify the
 objects in the degeneracy conditions as much as possible: it automatically
 sorts the objects alphabetically and puts extra lines in the construction
 by using dashed linestyle when they explain degeneracies (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:extradash"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename extradash.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Argument
status open

\begin_layout Plain Layout
Extra dashed lines help to investigate degeneracy conditions
\end_layout

\end_inset

Extra dashed lines help to investigate degeneracy conditions.
\begin_inset CommandInset label
LatexCommand label
name "fig:extradash"

\end_inset


\begin_inset Newline newline
\end_inset


\size small
Here midlines 
\begin_inset Formula $EG$
\end_inset

 and 
\begin_inset Formula $FH$
\end_inset

 of quadliteral 
\begin_inset Formula $ABCD$
\end_inset

 bisect each other under the condition 
\begin_inset Quotes eld
\end_inset

the diagonals 
\begin_inset Formula $i,j$
\end_inset

 of the quadliterals intersect
\begin_inset Quotes erd
\end_inset

.
 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 were not constructed by the user, they have been highlighted by GeoGebra.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Now we summarize the results for the 
\series bold
Prove
\series default
 command by showing the same statistics with the overall results.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "BENCHMARK.tex"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "benchmark-overall"

\end_inset


\end_layout

\begin_layout Standard
The tested engines are:
\end_layout

\begin_layout Itemize
Recio's method,
\end_layout

\begin_layout Itemize
the PureSymbolic method (which is for verifying Recio's method by literally
 computing the required polynomials, also programmed by Weitzhofer),
\end_layout

\begin_layout Itemize
Botana's method with Singular,
\end_layout

\begin_layout Itemize
Botana's method with Giac,
\end_layout

\begin_layout Itemize
OpenGeoProver's Wu method,
\end_layout

\begin_layout Itemize
OpenGeoProver's area method,
\end_layout

\begin_layout Itemize
the final result printed by the portfolio prover in GeoGebra.
\end_layout

\begin_layout Standard
However Recio's method can handle only 50% of the test cases, in all the
 successful 30 tests it outperforms all other methods.
 In fact Recio's method is also capable of proving 
\begin_inset Quotes eld
\end_inset

Desargues
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Pappus
\begin_inset Quotes erd
\end_inset

, it is currently disabled to run Recio's method for a higher number of
 free points because the computation becomes too slow in such cases.
\end_layout

\begin_layout Standard
It is remarkable that the PureSymbolic method is usually very fast on simpler
 tests, only the 
\begin_inset Quotes eld
\end_inset

nine-point-circle
\begin_inset Quotes erd
\end_inset

 test was too difficult for it to compute (and also 
\begin_inset Quotes eld
\end_inset

Desargues
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Pappus
\begin_inset Quotes erd
\end_inset

, like for Recio's method).
 The PureSymbolic method is planned to be used only for testing purposes.
\end_layout

\begin_layout Standard
Both Singular and Wu's method in OpenGeoProver show an acceptable speed
 and stability for 80% of the tests.
 At the moment OpenGeoProver detects a higher set of possible constructions
 than Botana's method does: for example, angle bisectors are not implemented
 for Botana's engine.
 Also a few GeoGebra construction steps are not implemented yet in both
 subsystems.
\end_layout

\begin_layout Standard
The area method implemented by Damien Desfontaines is also notable.
 It cannot be considered 
\begin_inset Quotes eld
\end_inset

rock solid
\begin_inset Quotes erd
\end_inset

 yet since it gives erroneous results for 
\begin_inset Quotes eld
\end_inset

orthocenter2
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

orthocenter6
\begin_inset Quotes erd
\end_inset

, but otherwise in many cases it is faster than Wu's method.
 In fact, the implementation of the area method is a 
\begin_inset Quotes eld
\end_inset

work in progress
\begin_inset Quotes erd
\end_inset

 at the moment.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
triangle-areas seems unstable
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally we note that the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
portfolio prover
\end_layout

\end_inset

portfolio prover, shown in the last column, returns very good results.
 In 90% of the test cases the correct answer is returned, and the rest are
 
\begin_inset Quotes eld
\end_inset

undefined
\begin_inset Quotes erd
\end_inset

.
 For GeoGebra 5 the default behavior is to disable Singular and use Giac
 instead, but even in this case most results are returned within 1 second.
 (The benchmark was taken on a recent desktop PC.)
\end_layout

\begin_layout Standard
Unfortunately, the JavaScript version of Giac is usually about one magnitude
 slower than the desktop version.
 This hinders using the theorem proving in GeoGebra in the web version for
 some harder problems.
 One possible way for the future versions of GeoGebra to support running
 native code in a web browser.
 The are already techniques mostly in ready-to-use state, such an example
 is the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
NaCl
\end_layout

\end_inset

NaCl (
\begin_inset Quotes eld
\end_inset

native client
\begin_inset Quotes erd
\end_inset

) technology invented by Google.
\end_layout

\begin_layout Standard
\begin_inset Branch NoChildDocument
status collapsed

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "thesisExample"
options "apalike"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "custom"
width "2.5cm"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
